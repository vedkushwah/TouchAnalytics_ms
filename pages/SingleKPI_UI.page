<apex:page controller="SingleKPI_Class" docType="html-5.0" sidebar="false"  standardStylesheets="false" cache="false" tabstyle="Touch_Analytics_UI__tab" id="pageId">
     
   
  <!--  <apex:stylesheet value="{!URLFOR($Resource.jQueryDataTables, 'css/jquery.dataTables.css')}"/> -->
    <apex:stylesheet value="{!URLFOR($Resource.SLDSv0122, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.SLDS090, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
   <!-- <apex:stylesheet value="{!URLFOR($Resource.GlobalFundsJqueryUI, 'GlobalFundsJqueryUI/CustomEventEditCSS.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.GlobalFundsJqueryUI, 'GlobalFundsJqueryUI/EventJqueryMin.js')}"/>
   <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.jQueryDataTables, 'js/jquery.dataTables.js')}"></script>  -->
   <apex:stylesheet value="{!URLFOR($Resource.EdgeClient)}"/> 
    <apex:styleSheet value="{!URLFOR($Resource.Wave,'Wave/css/EdgeClient.css')}" />  
    
      <!--search--> 
    <script>
             
             
             function showhide1(about,colors,displays)
                 {
                    var div = document.getElementById(about);
                    var divval = document.getElementById(colors);
                     var divvals = document.getElementById(displays);
             
               div.style.display = "block";
               divval.style.background = "#2EC2BA";
                divvals.style.display  = "none";
               
             
              } 
              function showhide2(about,colors,displays)
                 {
                    var div = document.getElementById(about);
                     var divval = document.getElementById(colors);
                      var divvals = document.getElementById(displays);
             
               div.style.display = "none";
               divval.style.background = "white";
                divvals.style.display  = "block";
             
              } 
              
              
              
       </script>
        <script>
            window.twotimer=    function() {
                eventSrcID=(event.srcElement)?event.srcElement.id:'undefined';
                eventtype=event.type;
                status=eventSrcID+' has received a '+eventtype+' event.';
                
                if(event.srcElement.innerHTML =='Touch Analytics' || event.srcElement.innerHTML =='Home'){
                   if(confirm("All of your information will be lost and you will be returned to the Home Screen"))
                   {
                     
                   }else{
                       return false;
                   } 
                   
                }
            }
            document.onclick= twotimer;
            </script>
       
       <script>
             function showhide3(about,colors,displays)
                 {
                    var div = document.getElementById(about);
                    var divval = document.getElementById(colors);
                     var divvals = document.getElementById(displays);
             
               div.style.display = "block";
               divval.style.background = "#2EC2BA";
                divvals.style.display  = "none";
             
              } 
              function showhide4(about,colors,displays)
                 {
                    var div = document.getElementById(about);
                     var divval = document.getElementById(colors);
                      var divvals = document.getElementById(displays);
             
               div.style.display = "none";
               divval.style.background = "white";
                divvals.style.display  = "block";
             
              } 
       </script>
       <script>
             function showhide5(about,colors)
                 {
                    var div = document.getElementById(about);
                    var divval = document.getElementById(colors);
             
               div.style.display = "block";
               divval.style.background = "#2EC2BA";
               
             
              } 
              function showhide6(about,colors)
                 {
                    var div = document.getElementById(about);
                     var divval = document.getElementById(colors);
             
               div.style.display = "none";
               divval.style.background = "white";
             
              } 
       </script>
       <script>
             function showhide7(about,colors)
                 {
                    var div = document.getElementById(about);
                    var divval = document.getElementById(colors);
             
               div.style.display = "block";
               divval.style.background = "#2EC2BA";
             
              } 
              function showhide8(about,colors)
                 {
                    var div = document.getElementById(about);
                     var divval = document.getElementById(colors);
             
               div.style.display = "none";
               divval.style.background = "white";
             
              } 
       </script>
   
    <style>
        #myInput {
              background-image: url('{!$Resource.SearchIcon}');
              background-repeat: no-repeat; 
              font-size: 16px;
              padding: 15px 15px 20px 50px;
              border: 1px solid #ddd;              
        }
        
        .slds ::selection {
            background: #015ba7 !important;
            color: white !important;
            text-shadow: none;
        }
         .managebutton {
                               border: 1.35px solid lightgrey; 
                               
                           }
                           .managebutton:hover{
                               border: 1.35px solid #2EC2BA;
                           } 
      @media only screen and (max-width: 830px) {
        .NewSldscard{
            min-width:160px
        }      
    }
    @media only screen and (min-width: 831px) {
        .NewSldscard{
            min-width:180px
        }      
    }  
    @media only screen and (min-width: 900px) {
        .NewSldscard{
            min-width:220px
        }
         .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 270px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 220px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible;
        padding-left: 40px;
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 220px; 
    }
    
        #paddingIds{
            width: 222px;
        }
    }
    @media only screen and (min-width: 1000px) {
        .NewSldscard{
            min-width:240px
        }  
         .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 213px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 231px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible;
        padding-left: 40px;
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 231px; 
    }
        #paddingIds{
            width: 234px;
        }
    }
     @media only screen and (min-width: 1100px) {
        .NewSldscard{
            min-width:235px;
        } 
         .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 241px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 241px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible;
        padding-left: 40px;
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 241px; 
    }
    #paddingIds{
            min-width: 244px;
        }
    }
    
     @media only screen and (min-width: 1150px) {
        .NewSldscard{
            min-width:246px;
        } 
        
          .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 248px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 253px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible;
        padding-left: 40px;
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 253px; 
    }
    #paddingIds{
            width: 256px;
        }
        
    }
     @media only screen and (min-width: 1200px) {
        .NewSldscard{
            min-width:260px
        } 
         .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 268px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 268px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible;
        padding-left: 40px;
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 268px; 
    }
    #paddingIds{
            width: 271px;
        }
    }
    @media only screen and (min-width: 1250px) {
        .NewSldscard{
            min-width:275px
        } 
        
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px; 
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 281px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 281px;
    }
    
     .liclasses:hover{
        background: white;
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 281px; 
    }
    #paddingIds{
            width: 284px;
        }
    }
    @media only screen and (min-width: 1300px) {
        .NewSldscard{
            min-width:284px
        } 
         .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px; 
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 278px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 293px;
    }
    
     .liclasses:hover{
        background: white;
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 293px; 
    }
    #paddingIds{
            width: 296px;
        }
    }
    
    @media only screen and (min-width: 1350px) {
        .NewSldscard{
            min-width:299px
        }
            .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px; 
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 309px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 309px;
    }
    
     .liclasses:hover{
        background: white; 
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 309px; 
    }
    #paddingIds{
            width: 312px;
        }
        }    
   
     @media only screen and (min-width: 1400px) {
        .NewSldscard{
            min-width:315px
        }  
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px; 
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 323px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 320px;
    }
    
     .liclasses:hover{
        background: white; 
        padding-left: 40px
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 320px; 
    }
    #paddingIds{
           width: 323px;
        }
    }
    @media only screen and (min-width: 1450px) {
        .NewSldscard{
            min-width:340px
        } 
        
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px;
        margin-top: 0px;
        position: absolute; 
        height: 26px; 
        background: white; 
        overflow: hidden; 
        max-width: 323px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 323px;
    }
    
     .liclasses:hover{
        background: white; 
        overflow: visible; 
        padding-left: 40px
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 323px; 
    }
    #paddingIds{
            width: 326px;
        }
    }
    
     @media only screen and (min-width: 1500px) {
        .NewSldscard{
            min-width:343px
        } 
        
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 333px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 333px;
    }
    
     .liclasses:hover{
        background: white; 
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 333px; 
    }
    #paddingIds{
            width: 337px;
        }
    }
    
    @media only screen and (min-width: 1550px) {
        .NewSldscard{
            min-width:341px
        } 
        
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 340px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 352px;
    }
    
     .liclasses:hover{
        background: white; 
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 352px; 
    }
    #paddingIds{
            width: 355px;
        }
    }
    
    @media only screen and (min-width: 1600px) {
        .NewSldscard{
            min-width:370px
        } 
        
        .liclasses{
        cursor: pointer; 
        float: left; 
        padding-left: 0px; 
        position: absolute; 
        height: 26px;
        margin-top: 0px;
        background: white; 
        overflow: hidden; 
        max-width: 346px;
        text-overflow:ellipsis;
        text-align: center;
        min-width: 365px;
    }
    
     .liclasses:hover{
        background: white; 
        padding-left: 40px;
        overflow: visible; 
        max-width: max-content;
        background:#2EC2BA !important;
        text-align: center;
        min-width: 365px; 
    }
    #paddingIds{
            width: 368px;
        }
    }
      .dimensionss {
    position: relative;
    display: block;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
                    .bar {
                        fill: #2EC2BA;
                    }
                    
                    .axis {
                        font-size: 13px;
                    }
                    
                    .axis path,
                    .axis line {
                        fill: none;
                        display: none;
                    }
    /* The actual popup */
.dimensionss .popuptext {
    visibility: hidden;
    width: 400px;
    background-color: #e8e8e8;
    color: white !important;
    text-align: center;
    border-radius: 6px;
    padding: 8px 0;
    position: fixed;
    z-index: 1;
    top:0px;
    
    margin-left: 270px;   
}

/* Popup arrow */
.dimensionss .popuptext::after {
    content: "";
    position: absolute;
    top: 20%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #e8e8e8 transparent transparent transparent;
}

/* Toggle this class - hide and show the popup */
.dimensionss .show {
    visibility: visible;
    -webkit-animation: fadeIn 1s;
    animation: fadeIn 1s;
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
    from {opacity: 0;} 
    to {opacity: 1;}
}

@keyframes fadeIn {
    from {opacity: 0;}
    to {opacity:1 ;}
}
    </style>
    
    
   
    
     <html  xmlns="http://www.w3.org/1999/xhtml"  xmlns:ng="http://angularjs.org" ng-app="demoajax" lang="en">
            <head>
                <title>Single KPI Page</title>
                   <meta charset="utf-8" />
                    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <meta name="description" content="SalesForce CRM" />
                    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular.js"></script>
                    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-animate.min.js"></script>
                    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-aria.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-material/1.0.4/angular-material.js"></script>
                    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/angular-material/1.0.4/angular-material.css"/>
                    <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>
                       <apex:styleSheet value="/sCSS/40.0/sprites/1496211442000/Theme3/default/gc/EdgeClient.css" />
                       
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <meta http-equiv="X-XSS-Protection" content="0" />
                    <style>
                        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-    ng-cloak {
                            display: none !important;
                        }
                        .md-datepicker-calendar-pane{
                            z-index:9999;
                        }
                        
                        .slds .slds-button{
                            line-height: 25px;
                        }
                        
            </style>
     
        
            </head> 
      
           <body ng-cloak="ng-cloak" ng-app="demoajax" ng-controller="Demo" style="align:center" id="anguController">   
    
    <apex:form id="myForm">
                
                    <style>
                    
                        .textover{
                            overflow-x: scroll;;
                        }
                        
                        
                        body #AppBodyHeader {
                            background-image: none;
                            font-size: 12px
                        }
                        .slds .slds-tabs--default__item + .slds-tabs--default__item {
                            margin-left: 0px;
                        }
                        .slds .slds-tabs--default__link {
                            padding: 0 0px;
                        }
                        .slds .slds-col--padded {
                            padding-right: 10px;
                            padding-left: 10px;
                        }
                        .slds .slds-tabs--default__link{
                            background-color: whitesmoke;
                            text-align: center;
                            Width: 100%;
                        }   
                        .slds .slds-tabs--default__item.slds-active .slds-tabs--default__link {
                            border-color:none;
                             background-color:grey;
                            color:#FFF;
                             border-bottom:0px;
                        }
                    </style>        
                    <style>    
                        .spinner{
                            display: block;
                            width:100%;
                            height: 100%;
                            position: fixed;
                            top: 0px;
                            left: 0px;
                            text-align:center;
                            padding:200px;
                            font:normal 16px Tahoma, Geneva, sans-serif;
                            z-index:1;
                            overflow: auto;
                            border:1px solid #CCC;
                            background-color:gray;
                            filter: alpha(opacity=60);
                            opacity: 0.6;
                            -moz-opacity:0.6;
                            -khtml-opacity:0.6
                            z-index:100;
                            line-height:20px;
                         }
                         #opaque {
                             position: fixed;
                             top: 0px;
                             left: 0px;
                             width: 100%;
                             height: 100%;
                             z-index: 1;
                             display: none;
                             background-color: gray;
                             filter: alpha(opacity=60);
                             opacity: 0.6;
                             -moz-opacity:0.6;
                             -khtml-opacity:0.6      
                         }
                         * html #opaque {
                             position: absolute;
                         }
                        .tabyes{
                            display:block;
                        }
                        .tabno{
                            display:none
                        }  
                        .slds-grid slds-m-top--large{
                            margin-top:0px;
                        }
                        
                        .buttonbar.dark .btn, .btn.dark {
                            background: #585858;
                            color: rgba(255,255,255,.95);
                            border: 0px;
                        }
                        .btn.main {
                            margin: 0;
                            color: #fff;
                            background-color: #44a2f5;
                            background: #44a2f5;
                        }
                        
                        body .bPageFooter a, body .bPageFooter {
                            border: none;
                            color: #fff;
                            font-size:12px;
                        }
                        
                        .NewclassAdd{ 
                            margin-top: 60px !important;
                            margin-left: 40px !important;
                            padding: 0px 15px 6px 15px !important;
                            font-size: 32px !important;
                            line-height: 25px !important;
                            background: lightgrey !important;
                            color: black !important;
                        }
                        .NewclassRem{ 
                            margin-top: 10px !important;
                           margin-left: 40px !important;
                            padding: 0px 15px 6px 15px !important;
                            font-size: 32px !important;
                            line-height: 25px !important;
                            background: lightgrey !important;
                            color: black !important;
                        }
                    </style>   
         
         
                           
        <input type="hidden" name="hiddenKPI" id="hiddenKPI" />
        <input type="hidden" name="DimhiddenKPI" id="DimhiddenKPI" />
        <input type="hidden" name="DatehiddenKPI" id="DatehiddenKPI" />
        <input type="hidden" name="hiddensection" id="hiddensection" />
        <input type="hidden" name="KPIValue" id="KPIValue" />
        <input type="hidden" name="dimSelecteed" id="dimSelecteed" />
        <input type="hidden" name="dateSelecteed" id="dateSelecteed" />
         <input type="hidden" name="selectedDimRow" id="selectedDimRow" />
         <input type="hidden" name="hiddenDashboardName" id="hiddenDashboardName" />
         <input type="hidden" name="hiddenSingleName" id="hiddenSingleName" />
         <input type="hidden" name="hiddenDashboardDesc" id="hiddenDashboardDesc" />
         <input type="hidden" name="HiddenConfig" id="HiddenConfig" />
         <input type="hidden" name="HiddenDesc" id="HiddenDesc" />
         
         <apex:actionFunction name="submit" action="{!Submit}"  rerender="PB,FormNewval,opaueIds" status="status" oncomplete="Newpleaswaitcloses()"/>
          <apex:actionFunction name="Save" action="{!Save}"  rerender="FormsIds,Forms" status="status" oncomplete="toggleMeasuresEdit('1','0Fb36000000H8iHCAS','0Fc360000010Yy6CAE',event);"/>
          <apex:actionFunction name="UpdateConfiguration" action="{!UpdateConfiguration}"  rerender="FormsIds,Forms" status="status" />           
                   <apex:actionFunction name="DimensionsNew" action="{!DimensionsNew}"  rerender="Dimen1,DimensionsIds" status="status"/>
                   <apex:actionFunction name="DatesNew" action="{!DatesNew}"  rerender="DatesIds" status="status"/>      
      <apex:actionFunction name="DimensionNames" id="DimensionNames" action="{!DimensionNames}" rerender="Dimen1,DimensionsIds" status="status" oncomplete="filterPopUpModel()"/>        
        <apex:actionFunction name="ActTabs" id="ActTabid" action="{!ActTabs1}"  rerender="Forms" status="status" oncomplete="filterPopUpModel()"/>
        <input type="hidden" name="tabid" id="tabids" />
        <input type="hidden" name="SelectedDataset" id="SelectedDatasetid" />
        <input type="hidden" name="SelectedRownum" id="SelectedRownumid" />
        <apex:actionFunction name="AllActions" id="AllActions" rerender="Forms" status="status" oncomplete="PopupEdit('1');"/>
        <apex:actionFunction name="SingleDashboardTheme" action="{!SingleDashboardTheme}" rerender="openGeneratePopup" status="status"/>
                 <apex:outputpanel id="Forms">
                                      <apex:outputpanel id="FormsIds">
                       <apex:pagemessages />
                       </apex:outputpanel>
                <style>
                .Class1{
                background-color:grey !important;
                color:#FFF !important;
                }
                .Class2{
                border-bottom: 0px solid transparent !important;
                border-color: none !important;
                background-color:whitesmoke !important;
                color: #54698d !important;
                }
                </style>
                <apex:outputpanel id="opaueId">
                        <apex:actionStatus id="status">
                            <apex:facet name="start">
                                <div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 10000; background-color: black;"></div>
                                <center>
                                    <div style="position: fixed; left: 0; top: 0; bottom: 0; right: 0; z-index: 10000; margin: 15% 50%">
                                        <div style="display: inline-block; padding: 2px; background-color: #fff; width: 150px;">
                                            <img src="{!$Resource.NewTouch_Logo}" style="float: left; margin: 8px;" width="20%" height="10%"/ >
                                            <span style="display: inline-block; padding: 10px 0px;">Please Wait...</span>
                                        </div>
                                    </div>
                                </center>
                            </apex:facet>
                        </apex:actionStatus>
                    </apex:outputpanel>
                <apex:outputpanel id="FormNew">
                    <apex:outputpanel id="FormNewval">
                             
                        <div class="slds" style="display:none" id="configCreate">
                            <div class="slds-notify_container slds-m-top--medium">
                                <div class="slds-notify slds-notify--alert slds-theme--success slds-theme--alert-texture" role="alert">
                                    <h2 style="color: #f8f7f7;font-weight: bold;">
                                        Configuration Created Successfully

                                    </h2>
                                </div>
                            </div>
                        </div>   
                    <apex:outputpanel rendered="{!DashboardSuccess}">
                        <script>
                        closeGeneratePopup();
                    </script>         
                        <div class="slds">
                            <div class="slds-notify_container slds-m-top--medium">
                                <div class="slds-notify slds-notify--alert slds-theme--success slds-theme--alert-texture" role="alert">
                                    <h2 style="color: #f8f7f7;font-weight: bold;">
                                        Dashboard Created Successfully. &nbsp;&nbsp;&nbsp;<a href="/analytics/wave/wave.apexp#dashboard/{!AnalyticsDashboardId}" target="_blank" style="font-weight: 300;">Click here to go to Einstein Analytics </a>
                                    </h2> 
                                </div>
                            </div>
                        </div>
                        <script>
                            //alert("Hiiiiiii");
            
                            window.open('/analytics/wave/wave.apexp#dashboard/{!AnalyticsDashboardId}','_blank'); 
                            //alert("{!AnalyticsDashboardId}");
                            
                        </script>
                    </apex:outputpanel> 
                    <script>
                                          
                               var isCheckContacts = '{!NoAcccountbalance}';
                               if(isCheckContacts == 'false'){
                                   closepurchaseDBclone();
                               }
                           </script>  
                    <apex:outputpanel rendered="{!DashboardSales}"> 
                    <script>
                        closeGeneratePopup();
                    </script>
                        <div class="slds" style="background:#ec3030;" >
                            <div class="slds-notify_container slds-m-top--medium">
                                <div class="slds-notify slds-notify--alert slds-theme--success slds-theme--alert-texture" role="alert" style="background:#ec3030;" >
                                    <h2 style="color: #f8f7f7;">
                                        Dashboard Not Created.
                                    </h2>
                                </div>
                            </div>
                        </div>
                    </apex:outputpanel>
                     <!--<apex:outputpanel rendered="{!DashboardDB}">  
                     <script>
                        closeGeneratePopup();
                    </script>-->
                        <div class="slds" id="DashboardDBId" style="display:none;">
                            <div class="slds-notify_container slds-m-top--medium">
                                <div class="slds-notify slds-notify--alert slds-theme--success slds-theme--alert-texture" role="alert" style="background:#ec3030;" >
                                    <h2  style="color: #f8f7f7;">
                                        Dashboard Not Created !!!....Please Select At Least 1 Dimensions,1 DateField and 1 Measure.
                                    </h2>
                                </div>
                            </div>
                        </div>
                    <!--</apex:outputpanel>-->
                    </apex:outputpanel>
                <div class="slds" style="background-color: #ccc;border: 1px solid lightgrey;width:95%;margin-left:30px"  onclick="onmeasureClose12()">
                        <div class="myapp" style="background-color: white;padding-top:0px;padding-bottom:0px;">
                            
                            
                            
                            <div class="slds-col slds-no-flex">
                                
                                
                                
                                <div class="slds-page-header" style="border-bottom: 1px solid #d8dde6;background:none;padding: 11px 11px 12px;">
                        <div class="slds-grid" style="margin-top: 5px;margin-bottom: 5px;">
                            
                            <div class="slds-size--9-of-12 slds-medium-size--4-of-12 slds-small-size--4-of-12 slds-large-size--4-of-12" Style="margin-top:13px">
                            
                                 <!--     <label class="slds-form-element__label" for="text-input-01">Name </label> -->
                                       <!-- <div class="slds-form-element__control"> 
                                           <button type="button" Class="managebutton slds-button--neutral" onclick="openSingleTemplatePopup()" style="float:left;background: white;color: rgb(77, 77, 77);;font-weight:bold;margin-left:10px" rerender="Forms"  status="status">Save Configuration</button>
                                        </div>-->
                                    
                               
                            </div>
                            <div class="slds-size--9-of-12 slds-medium-size--4-of-12 slds-small-size--4-of-12 slds-large-size--4-of-12" style="text-align:center">
                                
                                
                                        <div class="slds-form-element__control">
                                            <img style="cursor:pointer;" src="{!$Resource.Touch_Analytics_New_Logo}" onclick="closefunctions()" width="280" height="300" />
                                            
                                        </div>
                                
                               
                            </div>
                             <div class="slds-size--9-of-12 slds-medium-size--4-of-12 slds-small-size--4-of-12 slds-large-size--4-of-12" style="    margin-top: 5px;">
                                
                                   <!--   <label class="slds-form-element__label" for="text-input-01">Phone</label> -->
                                       <!-- <div class="slds-form-element__control"> 
                                               <apex:outputLink value="https://docs.google.com/forms/d/e/1FAIpQLSeVSeLboh4gOU-Vnut_CApMKd5XwrkWjJ95HfUV-8UkBwcUKA/viewform?usp=sf_link" target="_blank" style="float:right;" ><img style="cursor:pointer;" src="{!$Resource.Contactus_Active_Logo}" width="50px" height="15px" /></apex:outputLink>
                                        </div> -->
                                
                                    
                               
                            
                            </div>
                        </div>   
                    </div>
                            </div>  
                        </div>
                    
                  <!-- Popup generate sucess -->
                    <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="GeneratePopup" >
                        <div class="slds-modal__container ">
                            <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:absolute; width:600px;left:300px;top:200px;">
                                <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;">
                                    <span>
                                        <b style="font-size:15px">Dashboard</b>
                                    </span>
                                </div>   
                                <div class="slds-form--horizontal">
                                    <div class="slds-form-element slds-m-top--medium">
                                        <label class="slds-form-element__label" for="inputSample2">Dashboard Name</label>
                                        <div class="slds-form-element__control">
                                            <input type="text" id="DashboardName" class="slds-input" />
                                            <div id="errordash" style="padding-left:3px;color: #d74c3b;"></div > 
                                        </div>
                                    </div>
                                <!-- <div class="slds-form-element slds-m-top--medium"> 
                                        <label class="slds-form-element__label" for="inputSample2">Dashboard Title</label>
                                        <div class="slds-form-element__control">
                                            <input type="text" id="DashboardTitle" class="slds-input" />
                                            <div id="errorTitle" style="padding-left:3px;color: #d74c3b;"></div > 
                                        </div>
                                    </div> -->
                                    <div class="slds-form-element slds-m-top--medium">
                                        <label class="slds-form-element__label" for="inputSample2">Dashboard Description</label>
                                        <div class="slds-form-element__control">
                                            <input type="text" id="DashboardDesc" class="slds-input" />
                                            <div id="errordesc" style="padding-left:3px;color: #d74c3b;"></div > 
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-m-top--medium">
                                        <label class="slds-form-element__label" for="inputSample2">Select Theme</label>
                                        <div class="slds-form-element__control">
                                            <div class="slds-select_container">
                                               <apex:outputPanel id="outId">
                                                <apex:selectList styleclass="slds-select" size="1" value="{!AllVal}" id="ThemeId">
                                                    <apex:actionSupport event="onchange" action="{!SingleDashboardTheme}" rerender="outId" />
                                                    <apex:selectOptions value="{!NewListopt}"/>
                                                </apex:selectList>
                                                </apex:outputPanel>
                                            </div>  
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-m-top--medium slds-m-bottom--medium">
                                        <label class="slds-form-element__label" for="inputSample2">Select App</label>
                                        <div class="slds-form-element__control">
                                            <div class="slds-select_container">
                                                <apex:selectList styleclass="slds-select" size="1" value="{!strFloderId}">
                                                    <apex:selectOptions value="{!getFloderList}"/>
                                                </apex:selectList>
                                            </div>
                                        </div>
                                    </div>                
                                </div>
                                <div class="slds-float--right">
                                    <div class="slds-x-small-buttons--horizontal">
                                        <button type="button" class="slds-button slds-button--neutral" status="status" onclick="closeGeneratePopup()" >Cancel</button>
                                        <button type="button" class="slds-button slds-button--neutral slds-button--brand" status="status" onclick="saveDashboard()" >Submit</button>  
                                    </div>    
                                </div>   
                            </div>
                        </div>  
                    </div>  
                    
            <!-- Label Edit PopUp Start-->               
                 <div class="slds-form-element" style="padding-top:0px;">
                <div class="slds-grid slds-m-top--large" Style="margin-top:0px">
                
                    <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="tstpopupLabel" >
                        <div class="slds-modal__container ">
                            
                           <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:absolute; width:600px;left:300px;top:200px;">  
                                <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;"><span><b style="font-size:15px">Edit Label</b></span></div>                           
                                   <apex:outputPanel id="OppEditPopup">  
                                        <div class="slds-grid slds-wrap slds-grid--pull-padded ">
                                        <div class="slds-p-horizontal--small slds-size--1-of-2 slds-medium-size--1-of-1 slds-large-size--1-of-4 slds-grid--align-center slds-text-align--right - col-form-label">
                                        <apex:outputtext value="Edit Label" Styleclass="slds-input" style="border:0px"/>      
                                        </div>
                                            <div class="slds-p-horizontal--small slds-size--1-of-2 slds-medium-size--1-of-1 slds-large-size--2-of-4 slds-grid--align-center slds-p-bottom--medium">
                                                <!--  <apex:inputText value="{!KPINameUI}" Styleclass="slds-input inputids"  />   -->
                                               <apex:outputpanel rendered="{!IF(DateStrings == true,true,false)}">
                                                <input type = "text" id = "inputids" autofocus="true" onKeydown="Javascript: if (event.keyCode==13) validatefunction('date');" />
                                                
                                                </apex:outputpanel>
                                                <apex:outputpanel rendered="{!IF(DimStrings == true,true,false)}">
                                                <input type = "text" id = "inputids" autofocus="true" onKeydown="Javascript: if (event.keyCode==13) validatefunction('dimension');" />
                                                
                                                </apex:outputpanel>
                                                <apex:outputpanel rendered="{!IF(measStrings == true,true,false)}">
                                                <input type = "text" id = "inputids" autofocus="true" onKeydown="Javascript: if (event.keyCode==13) validatefunction('measure');"/>
                                                
                                                </apex:outputpanel> 
                                                   <div id="error1" style="padding-left:3px;color: #d74c3b;"></div > 
                                                   

                                            </div>                                          
                                        </div>
         
                                  <apex:inputtext value="{!KPILabels}" id="KPILabelId" style="display:none"/>
                                <div class="slds-modal__footer">
                                    <div class="slds-x-small-buttons--horizontal">  
                                     <button type="button" Class="slds-button slds-button--neutral" rerender="MyForm,Forms"  onclick="closeGenerateLabelPopup()" html-formnovalidate="formnovalidate" >Close</button>
                                    <apex:outputpanel rendered="{!IF(DateStrings == true,true,false)}">
                                        <button type="button" onclick="validatefunction('date')" class="slds-button slds-button--neutral slds-button--brand" >Save</button>
                                <!--          <apex:commandbutton value="save" action="{!SaveEditLabels}" styleclass="slds-button slds-button--neutral slds-button--brand"  rerender="FormNew,Forms" status="status"/>   -->
                                    </apex:outputpanel>
                                    <apex:outputpanel rendered="{!IF(DimStrings == true,true,false)}">
                                      <!--    <apex:commandbutton value="save" action="{!SaveDimLabels}" styleclass="slds-button slds-button--neutral slds-button--brand"  rerender="FormNew,Forms" status="status"/>   -->
                                      <button type="button" onclick="validatefunction('dimension')" class="slds-button slds-button--neutral slds-button--brand"  >Save</button>
                                    </apex:outputpanel>
                                     <apex:outputpanel rendered="{!IF(measStrings == true,true,false)}">
                                  
                                         <!-- <apex:commandbutton value="save" action="{!SaveMeasLabels}" styleclass="slds-button slds-button--neutral slds-button--brand"  rerender="FormNew,Forms" status="status"/>   -->
                                             <button type="button" onclick="validatefunction('measure')" class="slds-button slds-button--neutral slds-button--brand" >Save</button> 
                                    </apex:outputpanel>
                                         
                                    </div>    
                                </div> 
                                 </apex:outputPanel>
                            </div>
                            
                        </div>
                    </div> 
                   
                </div>
            </div> 
                
            <!-- Label Edit PopUp End -->
            <!-- Save Configuration Start -->
                    <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="ConfigEditpopup" >
                        <div class="slds-modal__container ">
                            <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:absolute; width:600px;left:300px;top:200px;">
                                <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;">
                                    <span>
                                        <b style="font-size:15px">Configuration</b> 
                                    </span>
                                </div>
                                <div class="slds-form--horizontal">
                                    <div class="slds-form-element slds-m-top--medium">
                                        <label class="slds-form-element__label" for="ConfigurationName">Configuration Name</label>
                                        <div class="slds-form-element__control">
                                            <apex:inputText value="{!ConfigurationName}" id="ConfigurationName" style="width:100%"/>
                                            <div id="errorConfig1" style="padding-left:3px;color: #d74c3b;"></div > 
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-m-top--medium">
                                        <label class="slds-form-element__label" for="Description">Description</label>
                                        <div class="slds-form-element__control">
                                            <apex:inputText value="{!ConfigurationDescription}" id="Description" style="width:100%"/>
                                            <div id="errorConfig2" style="padding-left:3px;color: #d74c3b;margin-bottom:10px;"></div > 
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-float--right">
                                    <div class="slds-x-small-buttons--horizontal">
                                        <button type="button" class="slds-button slds-button--neutral" status="status" onclick="closeConfigEditpop()" >Cancel</button>
                                        <button type="button" class="slds-button slds-button--neutral slds-button--brand" status="status" onclick="SaveConfiguration()" >Submit</button>  
                                    </div>    
                                </div>   
                            </div>
                        </div>  
                    </div>                  
            <!-- Save Configuration End -->
            
            <!-- SingleKPI PopUp Start-->               
                 <div class="slds-form-element" style="padding-top:0px;">
                <div class="slds-grid slds-m-top--large" Style="margin-top:0px">
                
                    <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="tstpopupTemplate" >
                        <div class="slds-modal__container ">
                           
                         <apex:outputPanel id="OppEditPopup1">       
                           <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:absolute; width:600px;left:300px;top:200px;">  
                                <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;"><span><b style="font-size:15px">Add Configuration</b></span></div>                           
                                   
                                          <div class="slds-form--horizontal">
                                        <div class="slds-form-element slds-m-top--medium">
                                            <label class="slds-form-element__label" for="inputSample2" style="font-weight:bold">Configuration Name</label>
                                            <div class="slds-form-element__control">  
                                                 <input type="text" id="SingleName" class="slds-input" style="margin-bottom:10px;" />
                                            <div id="errorsingle" style="padding-left:3px;color: #d74c3b;"></div >     
                                            </div>
                                        </div>
                                        </div>      
  
                         
                                <div class="slds-modal__footer">
                                    <div class="slds-x-small-buttons--horizontal">    
                                          <button type="button" Class="slds-button slds-button--neutral" rerender="MyForm,Forms"  onclick="closeSingleTemplatePopup()" html-formnovalidate="formnovalidate" >Cancel</button>  
                                          <button type="button" class="slds-button slds-button--neutral slds-button--brand"  onclick="singleDashboard()" html-formnovalidate="formnovalidate" >Submit</button>   
                             
                                    </div>    
                                </div>   
                            </div>
                             </apex:outputPanel>
                        </div>
                    </div> 
                      <div style="display:none" id="pleasewait">
             <div name="start">
                 <div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 10001; background-color: black;"></div>
                 <center>
                     <div style="position: fixed; left: 0; top: 0; bottom: 0; right: 0; z-index: 10001; margin: 15% 50%">
                         <div style="display: inline-block; padding: 2px; background-color: #fff; width: 150px;">
                             <img src="{!$Resource.NewTouch_Logo}" width="20%" height = "10%" style="float: left; margin: 8px;" />
                             <span style="display: inline-block; padding: 10px 0px;font-size:15px">Please Wait...</span>
                         </div>
                     </div>
                 </center>
             </div>
         </div>
                   
                    <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="purchaseDashboard" >
                            <div class="slds-modal__container ">
                                <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:relative; width:700px;left: 250px;">
                                <apex:outputpanel id="purId">                     
                                  <script language="javascript">
                                            var isConnect = '{!isConnect}';
                                            if(isConnect == 'true'){
                                                initAct();  
                                                // document.getElementById("pleasewait").style.display = "block";
                                            }
                                    
                                     </script>
                                     <apex:actionFunction name="initAct" action="{!connectToSFDC}" rerender="accountPanel,PB" status="status"/>
                                     <apex:actionFunction name="accountAct" action="{!verifyAccountDetails}" rerender="contactPanel,PB" status="status" />
                                     <apex:outputPanel id="accountPanel">
                                         <script language="javascript">
                                            var isCheckAccount = '{!isCheckAccount}';
                                            if(isCheckAccount == 'true'){
                                                accountAct();    
                                            } 
                                         </script>
                                     </apex:outputPanel>
                                     
                                    <apex:actionFunction name="contactAct" action="{!verifyContactDetails}" rerender="PB" status="status" oncomplete="buildSelected()"/>
                                     <apex:actionFunction name="buildSelecteds" action="{!buildSelected}" rerender="PB" status="status" />
                                    <apex:outputPanel id="contactPanel">
                                         <script language="javascript">
                                            var isCheckContact = '{!isCheckContact}';
                                            if(isCheckContact == 'true'){
                                                contactAct();    
                                            } 
                                            
                                            function buildSelected(){
                                               // alert('1234');
                                             //  document.getElementById("pleasewait").style.display = "none";
                                                buildSelecteds();
                                            }
                                         </script>
                                     </apex:outputPanel>
                                   <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;">
                                        <span>
                                            <b style="font-size:15px">Purchase Dashboards</b>
                                        </span>
                                    </div>   
                                    <apex:outputpanel id="PB">
                                        <apex:pageMessages ></apex:pageMessages>
                                    <apex:outputpanel rendered="{!IF(NoAcccountbalance == false,true,false)}">
                                        <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-top: 0px solid #d8dde6;border-bottom: 0px solid #d8dde6;left: 250px;">
                                    <thead style="border-top: 0px solid #d8dde6;">
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Beginning Balance</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">${!accountBalance}</th>
                                        </tr>
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Build Cost</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">${!BuildCost}</th>
                                        </tr> 
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Coupon Code</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">
                                                <apex:inputtext value="{!CouponCode}" styleClass="slds-input" style="height: 25px;width:70%;margin-right:5px">
                                                    
                                                </apex:inputtext>  
                                                <apex:commandButton action="{!getCouponInformation}" styleClass="slds-button slds-button--brand" reRender="PB" value="Apply"></apex:commandButton>
                                            </th>
                                        </tr>  
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Coupon Value</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">${!CouponValue}</th>
                                        </tr>      
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Total Cost</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">${!TotalCost}</th>
                                        </tr>   
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">Ending Balance</th>
                                            <th class="slds-medium-size--1-of-4" scope="col" style="border-top: 0px solid #d8dde6;">${!CreditsRemaining}</th>
                                        </tr> 
                                        <tr style="border-top: 0px solid #d8dde6;">
                                            <th class="slds-medium-size--1-of-4" scope="col" colspan="2" style="border-top: 0px solid #d8dde6;">
                                                 <button type="button" Class="slds-button slds-button--brand" style="float:right" rendered="{!!displayConnectButtons}"  onclick="Newpleaswait()" > <apex:outputtext value="Purchase & Build"/> </button>                                             
                                                <!--<apex:commandButton styleClass="slds-button slds-button--brand" style="float:right;margin-right: 5px;" value="Save & Cancel" rerender="PB" rendered="{!!displayConnectButtons}" action="{!SaveandCloseopp}" oncomplete="closepurchaseDBclone1();" onclick="Newpleaswait()" ></apex:commandButton>-->
                                                
                                                <button type="button" Class="slds-button slds-button--neutral" style="float:right" rerender="MyForm,Forms"  onclick="closepurchaseDB()" html-formnovalidate="formnovalidate" >Cancel</button>  
                                            </th>
                                        </tr>                                        
                                    </thead>
                                </table>
                                    </apex:outputpanel>   
                                    <apex:outputpanel rendered="{!IF(NoAcccountbalance == true,true,false)}">
                                    <div style="height: 100px;">
                                        <div style="font-size: 23px;text-align:center"><b style="font-size: 23px;">Error:</b></div>
                                        <div style="font-size: 17px;text-align:center">You don't have enough credits to purchase this Dashboard, please email Sales@AnalyticsCc.com in order to add credit to your account.</div>
                                    </div>
                                     <!--<Button type="button" Class="slds-button slds-button--brand" style="float: right;" rerender="PB" onclick="window.open('https://docs.google.com/forms/d/e/1FAIpQLSeVSeLboh4gOU-Vnut_CApMKd5XwrkWjJ95HfUV-8UkBwcUKA/viewform?c=0&w=1');" >Purchase More Credits</Button>                                                -->
                                     <apex:commandButton styleClass="slds-button slds-button--neutral" style="text-align:center" value="Back" rerender="PB"  action="{!Goback}"></apex:commandButton>
                                       
                                      
                                    </apex:outputpanel>
                                    </apex:outputpanel>
                                    </apex:outputpanel>                                 
                                </div>
                            </div>  
                        </div>  
                </div>
            </div> 
                
            <!--SingleKPI PopUp End -->
             
        
        <apex:outputpanel id="refreshSelected" >       
  <apex:outputpanel id="tab_default-4">
  <div id="tab-default-4" style="padding: 0px;" class="slds-tabs--default__content slds-show" role="tabpanel" aria-labelledby="tab-default-4__item">
    <div style="background-color:#F0F0F0 ;padding: 10px;height:300px;border-bottom: 1px solid lightgrey;border-top: 1px solid lightgrey;">   
    
    <div class="row">
    <table style="width:100%;" cellpadding="4px">
    <tr>
    <td style="width:25%;text-align:center;"><button onclick="openSelectPopup('Dimensions'); hidePopupHeader()" type="button" class="managebutton slds-button--neutral" style="background: white;color: rgb(77, 77, 77);font-weight:bold">Dimensions</button></td>
    <td style="width:25%;text-align:center;"><button onclick="openSelectPopup('Datefield')" type="button" class="managebutton slds-button--neutral" style="background: white;color: rgb(77, 77, 77);font-weight:bold">Datefields</button></td>
    <td style="width:25%;text-align:center;"><button onclick="toggleMeasures('1','0Fb36000000H8iHCAS','0Fc360000010Yy6CAE',event);return false;" type="button" class="managebutton slds-button--neutral" style="background: white;color: rgb(77, 77, 77);font-weight:bold">Measures</button></td>
        
    <!-- <c:MeasuresPanelBody MeasuresPanel="1" dataSetId="0Fb36000000H8iHCAS" folderId="0Fc360000010Yy6CAE" MeasuresPanelStyle="opacity: 1; top:20px; left:213px"/> -->
     
    

    <td style="width:25%;text-align:center;">
          <apex:repeat value="{!KPIDetils}" var="KPIFilterRec"> 
                <apex:outputpanel rendered="{!IF(KPIFilterRec.SelectedFilterList == null || KPIFilterRec.SelectedFilterList.size == 0 ,true,false)}">
                    <button  onclick="openSelectPopup('Filters')" type="button" class="managebutton slds-button--neutral" style="background: white;color: rgb(77, 77, 77);font-weight:bold">Filters</button>
                </apex:outputpanel>
                <apex:outputpanel rendered="{!IF(KPIFilterRec.SelectedFilterList != null && KPIFilterRec.SelectedFilterList.size != 0 ,true,false)}">
                    <button   type="button" class="managebutton slds-button--neutral" style="background: white;color: rgb(77, 77, 77);font-weight:bold">Filters</button>
                </apex:outputpanel>
            </apex:repeat>    
        </td>
    </tr>
    <tr>
    <td style="width:25%;padding: 5px 5px;" valign="top">
    <apex:repeat value="{!KPIDetils}" var="KPIDimenRec"> 
    <apex:outputpanel rendered="{!IF(KPIDimenRec.KPICheck == false,true,false)}">
    <apex:outputpanel rendered="{!IF(KPIDimenRec.SelectedDimensions != null && KPIDimenRec.SelectedDimensions.size != 0,true,false)}">
    <table style="width:100%;margin-top:10px;background-color: white;border-radius: 6px;table-layout: fixed;"> 
    <apex:variable value="{!1}" var="Row"/>
 <tr><td style="padding-bottom: 4px;"></td></tr>
    <apex:repeat value="{!KPIDimenRec.SelectedDimensions}" var="DimSel"> 
         <tr valign="top" id="AccountId{!Row}" onmouseover="showhide1('Account{!Row}','AccountId{!Row}','Display4{!Row}')" onmouseout="showhide2('Account{!Row}','AccountId{!Row}','Display4{!Row}')">
             <td Style="text-align:center;border-top:0px;overflow:hidden;width:100%;max-width:949px;text-overflow: ellipsis;" id="Display4{!Row}"> 
               <apex:outputText value="{!DimSel.Availablename}" />
                
                 </td>
             
        <td Style="text-align:center;border-top:0px;overflow:visible;display:none;z-index:100;width:100%;" id="Account{!Row}">
             <div style="width: max-content;" class="NewSldscard">
            <div style="float:left;background:#2EC2BA !important;width:93%;position:relative; z-index:2;height: 25px;padding-left: 22px;"> <apex:outputText value="{!DimSel.Availablename}" style="position:relative; z-index:2;"/> </div>
            <div style="float:right;background:#2EC2BA !important;width:7%;position:relative; z-index:2;    height: 25px;">     <img style="cursor:pointer;position:relative; z-index:2;float:right" onclick="openLabelPopup('{!DimSel.Availablename}','Dimensions','1')"  src="{!$Resource.Edit}" title="Edit" width="20px" height="11px" />  
             </div>
                 </div>
                 </td>
        </tr>
     
    <apex:variable value="{!Row+1}" var="Row"/>
    </apex:repeat>
     <tr><td style="padding-bottom: 4px;"></td></tr>
    </table> 
    </apex:outputpanel>
    </apex:outputpanel>
    </apex:repeat> 

    </td>
    <td style="width:25%;padding: 5px 5px;" valign="top">
    <apex:repeat value="{!KPIDetils}" var="KPIDateRec"> 
    <apex:outputpanel rendered="{!IF(KPIDateRec.KPICheck == false,true,false)}">  
    <apex:outputpanel rendered="{!IF(KPIDateRec.SelectedDateFieldlist != null && KPIDateRec.SelectedDateFieldlist.size != 0,true,false)}">
    <table style="width:100%;margin-top:10px;background-color: white;border-radius: 6px;table-layout: fixed;"> 
    <apex:variable value="{!1}" var="Row"/>
     <tr><td style="padding-bottom: 4px;"></td></tr>
    <apex:repeat value="{!KPIDateRec.SelectedDateFieldlist}" var="SelectedFields">
          <tr valign="top" id="1AccountId1{!Row}" onmouseover="showhide3('11Account{!Row}','1AccountId1{!Row}','Display5{!Row}')" onmouseout="showhide4('11Account{!Row}','1AccountId1{!Row}','Display5{!Row}')">
             <td Style="text-align:center;border-top:0px;overflow:hidden;width:100%;max-width:949px;text-overflow: ellipsis;" id="Display5{!Row}"> 
               <apex:outputText value="{!SelectedFields.DateFieldName}" />
                
                 </td>
             
        <td Style="text-align:center;border-top:0px;overflow:visible;display:none;z-index:100" id="11Account{!Row}">    
             <div style="width: max-content;" class="NewSldscard">  
            <div style="float:left;background:#2EC2BA !important;width:93%;position:relative; z-index:2;height: 25px;padding-left: 22px;"> <apex:outputText value="{!SelectedFields.DateFieldName}" style="position:relative; z-index:2;"/> </div>
            <div style="float:right;background:#2EC2BA !important;width:7%;position:relative; z-index:2;    height: 25px;">     <img style="cursor:pointer;position:relative; z-index:2;float:right" onclick="openLabelPopup('{!SelectedFields.DateFieldName}','DateFields','1')"  src="{!$Resource.Edit}" title="Edit" width="20px" height="11px" />  
             </div>
                 </div>
                 </td>
        </tr>
        <apex:variable value="{!Row+1}" var="Row"/>
    </apex:repeat>  
     <tr><td style="padding-bottom: 4px;"></td></tr>  
    </table> 
    </apex:outputpanel>
    </apex:outputpanel>
    </apex:repeat> 
    
    </td>
    <td style="width:25%;padding: 5px 5px;" valign="top">
       
          <style>
          
          .selector.measure .functionlist .btn.selected:after {
    content: " ";
    position: absolute;
    right: -8px;
    top: 0;
    border-right: none;
    border-left: 8px solid #c5d2e0;
    border-top: 16px solid transparent;
    border-bottom: 16px solid transparent;
}


.selector.measure .functionlist .btn:not(.disabled).selected {
    background: #c5d2e0 !important;
    border: none;
}

.selector.measure .functionlist .btn.selected {
    margin-left: 5px;
    width: 70px !important;
    border-radius: 2px 0 0 2px;
    font-weight: 600;
}

.selector.measure .functionlist .btn {
    text-align: left;
    -webkit-transition: all .1s ease;
    transition: all .1s ease;
    font-size: 12px;
    -webkit-box-pack: start;
    -o-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
}

.buttonbar.vertical .btn, .buttonbar.vertical .buttongroup {
    margin-bottom: 2px;
    margin-right: 0;
}

.buttonbar.vertical .btn {
    float: none;
    -webkit-box-pack: initial;
    -o-box-pack: initial;
    -ms-flex-pack: initial;
    -webkit-justify-content: initial;
    justify-content: initial;
}

.btn:not(.disabled).active, .btn:not(.disabled).selected, .active>.btn:not(.disabled), .selected>.btn:not(.disabled) {
    background-color: #e6ecf2;
}

.buttonbar .btn {
    float: left;
}

.btn.medium, .medium>.btn {
    padding: 0 10px;
    line-height: 32px;
}

.slds a {
    color: #0070d2;
    text-decoration: none;
    -webkit-transition: color 0.1s linear;
    transition: color 0.1s linear;
}

.slds a {
    background-color: transparent;
}

.btn {
    position: relative;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: box;
    display: flex;
    -webkit-box-align: center;
    -o-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: center;
    -webkit-box-pack: center;
    -o-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    margin-right: 5px;
    padding: .5rem;
    background: none;
    border:none;
    border-radius: .25rem;
    font-size: 14px;
    font-weight: 700;
    white-space: nowrap;
    overflow: visible;
    text-align: center;
    color: #5c7a99;
    cursor: pointer;
    -webkit-transition: .2s all;
    transition: .2s all;
}

.w100 {
    width: 100%;
}

a {
    color: #0070d2;
    text-decoration: none;
    -webkit-transition: .1s color linear;
    transition: .1s color linear;
    cursor: pointer;
}

a {
    background-color: transparent;
}

.slds h1, .slds h2, .slds h3, .slds h4, .slds h5, .slds h6, .slds th, .slds td {
    font-family: "Salesforce Sans", Arial, sans-serif;
}

.slds caption, .slds th, .slds td {
    text-align: left;
}

.slds table {
    border-collapse: collapse;
    border-spacing: 0;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

table {
    display: table;
    border-collapse: separate;
    border-spacing: 2px;
    border-color: grey;
}

.slds:not(html), .slds body {
    font-size: 14px;
    background: transparent;
}

.slds {
    font: 100%/1.5 "Salesforce Sans", Arial, sans-serif;
    background: white;
    color: #16325c;
    -webkit-tap-highlight-color: transparent;
}

.slds {
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    margin: 0;
}

html, body {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    min-height: 100%;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

html, body {
    height: 100%;
    color: rgba(0, 0, 0, 0.87);
    background: white;
    position: relative;
}

body {
    font-family: 'Salesforce Sans','Helvetica Neue',Helvetica,Arial,sans-serif;
    color: #17324d;
    font-size: 100%;
    text-rendering: optimizeLegibility;
    -webkit-overflow-scrolling: touch;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
    overflow-x: hidden;
    width: 100%;
    height: 100%;
    line-height: 1;
}

button, select, html, textarea, input {
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

html, body {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    min-height: 100%;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

html, body {
    height: 100%;
    color: rgba(0, 0, 0, 0.87);
    background: white;
    position: relative;
}

html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}




.selector.measure .functionlist .btn.selected:after {
    content: " ";
    position: absolute;
    right: -8px;
    top: 0;
    border-right: none;
    border-left: 8px solid #c5d2e0;
    border-top: 16px solid transparent;
    border-bottom: 16px solid transparent;
}



.slds ::selection {
    background: #faffbd;
    text-shadow: none;
}
    .menu ul li:hover{
        background-color:rgb(46, 194, 186);
    }
    .menu ul li{
        padding: 0%;
        margin: 0;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: box;
        display: block;
        overflow: hidden;
        -webkit-box-pack: justify;
        -o-box-pack: justify;
        -ms-flex-pack: justify;
        -webkit-justify-content: space-between;
        justify-content: space-between;
        -webkit-box-align: center;
        -o-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
        background-color: white;
        height: 26px;
        padding: 0px;
        border-top: 0px solid #e6ecf2;
        border-bottom: 0px solid #e6ecf2;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        margin-top: 0%;
        margin-bottom: 0%;
        white-space: nowrap;
        color: #16325c;
        font-size: .90rem;
        line-height: 2;
        text-align: center;
        flex: 1;
        font-weight: 500;    
    
    }
    .menu {
         border:0px solid #c5d2e0;
    }
    .btn1{
        background: none !important;
        border:none !important;
        color: #5c7a99 !important;
        
    }
     .btn1:hover{
        background: #dbe1e6 !important;;
        border:none !important;
        color: #5c7a99 !important;
        text-decoration:none !important;
        
    }
    
     
</style>
<div width="" style="margin-top: 10px;">
  
    <div class="menu" id="MenuItems1">
        <ul id="paddingIds" style="border-radius: 5px;background: white;">
            
            
        </ul>
    </div>
</div>
 <script>
       $('#MenuItemsEdit li').appendTo($('#MenuItems1 ul')); 
        var func = 'false';
        if(func == 'false'){
        $(function() {
                 PopupEdit('1');
                 func == 'true';
              }); 
        }
 </script>
<div width="200px" style="margin: 10px;diplay:none">
   
    <div class="menu" style="width:200px;height:150px;overflow-y:auto;display:none" id="MenuItemsEdit">
        <ul>
            <apex:repeat value="{!NewMeasurevarlist}" var="mes">
                 <li><div onmouseover="ShowMeasures('{!mes.EditApi}')" onmouseout="hideMeasures('{!mes.EditApi}') "><input type="hidden" class="parentSelected" value="{!mes.Measurevar}"/><input type="hidden" class="itemSelected" value="{!mes.Measureval}"/><input type="hidden" class="editSelected" value="{!mes.EditMeasval}"/><input type="hidden" class="editApi" value="{!mes.EditApi}" /><div class="liclasses" onclick="editItems(this,1,event)">{!mes.Measurename}<span style="cursor: pointer;float:right;display:none" id="{!mes.EditApi}"><img style="cursor:pointer;position:relative; z-index:2;" src="{!$Resource.Edit}" title="Edit" width="17px" height="10px" onclick="openLabelPopup(this,'Measures')"/><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" onclick="removeItemsone(this,1,'{!mes.Measureval}',event)" width="23px" height="12px" /></span></div></div></li>
            </apex:repeat>
        </ul>
    </div>
</div>


  <div  id="MeasuresPanel1" class="popup menu selector controlmenu query-builder-picker-menu measureChangeMenu measure"  style="opacity: 1; top:35px; left:635px;display:none"  onclick="measureclose12(event)">
    
    <div class="container" >
        <div class="search measearch" >
            <svg class="icon searchBoxIcon" >
                <use
                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#search">
                </use>
            </svg>
            <input onkeyup="onfilterRecords('1')" type="text" placeholder="Search..."  id="myInput1"  />
                <span class="searchhint resnum" ></span>
                <a class="clear hide" data-tooltip="Clear Search" >
                    <svg class="icon" >
                        <use
                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                        </use>
                    </svg>
                </a>
            </div>
            <div class="functionlist computations tall" data-reactid=".g.0.1.2">
                <div class="buttonbar vertical clearfix" data-reactid=".g.0.1.2.0">
                     <a onclick="ParentItemsSelected(this,'1')" data-aggtype="Calculate" class="btn medium w100 btn1" data-tooltip="Calculate Measure" >Calculate</a>
               
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="count" class="btn medium w100 btn1 " >Count</a>    
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="sum" class="btn medium w100 btn1" >Sum</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="avg" class="btn medium w100 btn1" >Average</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="max" class="btn medium w100 btn1" >Maximum</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="min" class="btn medium w100 btn1" >Minimum</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="unique" class="btn medium w100 selected btn1" >Unique</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="median" class="btn medium w100 btn1">Median</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="first" class="btn medium w100 btn1" >First</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="last" class="btn medium w100 btn1" >Last</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="stddev" class="btn medium w100 btn1" data-tooltip="Standard Deviation" >Stddev</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="stddevp" class="btn medium w100 btn1" data-tooltip="Population Standard Deviation" >stddevp</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="var" class="btn medium w100 btn1" data-tooltip="Sample Variance" >Var</a>
                    <a onclick="ParentItemsSelected(this,'1')" data-aggtype="varp" class="btn medium w100 btn1" data-tooltip="Population Variance" >Varp</a>
                    </div>
            </div>
            <div class="names selectors selectors1" >    
                <div class="listheader squeezed" ></div>
                
                <div class="listheader" >Measures</div>
                
                <div id="MeasuresPanelLayout1"></div>
               
                <div class="listheader" >Dimensions</div>
                
                <div id="DimensionsPanelLayout1"></div>
                
                 <div class="listheader" >Calculate Measure</div>
                
                <div id="InputPanelLayout1"  style="margin-left:2px">
                   
                </div>

            </div>
        </div>
    </div>
    
   
    </td>
   <td style="width:25%;padding: 5px 5px;" valign="top">   
    
    <apex:repeat value="{!KPIDetils}" var="KPIFilterRec"> 
 
    <apex:outputpanel rendered="{!IF(KPIFilterRec.SelectedFilterList != null && KPIFilterRec.SelectedFilterList.size != 0 ,true,false)}">
    <table style="width:100%;margin-top:10px;background-color: white;border-radius: 6px;">
         <apex:variable value="{!1}" var="Row"/>
           <tr><td style="padding-bottom: 4px;"></td></tr>  
       <apex:repeat value="{!KPIFilterRec.SelectedFilterList}" var="AddFil">  
       
       <tr valign="top" id="AccountId3{!Row}"  onmouseover="showhide7('3Account{!Row}','AccountId3{!Row}')" onmouseout="showhide8('3Account{!Row}','AccountId3{!Row}')">
           <td style="text-align:center;border-top:0px" width="80%">
                <apex:outputPanel rendered="{!if(AddFil.FilterName != null || AddFil.FilterName != '' ,true,false)}" >
                    <apex:outputText value="{!AddFil.FilterName}" style="padding-left: 57px;"/><br/>
                 </apex:outputPanel> 
           </td>
          
            <td Style="text-align:right;border-top:0px; " width="20%">
                 <apex:outputPanel rendered="{!if(Row != 1,true,false)}">
              <h4 style="display: none" id="3Account{!Row}" >
                <img style="cursor:pointer;position:relative; z-index:2;" onclick="openEditPopup('{!KPIFilterRec.KPIRowNUmber}','{!AddFil.FilterName}','{!AddFil.rowcount}')"  src="{!$Resource.Edit}" title="Edit" width="20px" height="12px" />
                <img style="cursor:pointer;position:relative; z-index:2;" onclick="confirmPayment('{!KPIFilterRec.KPIRowNUmber}','{!AddFil.FilterName}','{!AddFil.rowcount}')" src="{!$Resource.Delete}" title="Delete" width="26px" height="12px" />                           
               </h4>
                    <input type="hidden" id="RowNumberDel" name="RowNumberDel" />
                    <input type="hidden" id="RemoveFilterDel" name="RemoveFilterDel"/>
                    <input type="hidden" id="hidrowcount" name="hidrowcount"/>
                </apex:outputPanel>
            </td>
   
    </tr>
            <apex:variable value="{!Row+1}" var="Row"/>
    </apex:repeat>
      <tr><td style="padding-bottom: 4px;"></td></tr>  
    
    </table>  
    <apex:outputpanel rendered="{!IF(KPIFilterRec.SelectedFilterList != null && KPIFilterRec.SelectedFilterList.size != 0,true,false)}" >
        <apex:outputpanel rendered="{!IF(KPIFilterRec.SelectedFilterList.size <= 4,true,false)}">
            <center><img style="cursor:pointer;position:relative; z-index:2;" onclick="openSelectPopup('Filters')" class="managebutton" src="{!$Resource.Add}" width="17px" height="10px" /></center>   
        </apex:outputpanel>
    </apex:outputpanel>
    </apex:outputpanel>
    </apex:repeat>
    </td>
    </tr>
    </table>
    </div>
    </div>
  </div>
  </apex:outputpanel>
  
  </apex:outputpanel>
  
  
<div class="slds-form-element" >
  <div class="slds-grid slds-m-top--large" Style="margin-top:0px">
      <div aria-hidden="true" role="dialog" class="slds-modal slds-modal--large slds-fade-in-closed slds-modal-backdrop slds-modal-backdrop--closed "  id="SelectPopup" onclick="onmouseClose12()">
          <apex:outputPanel id="OppselectPopup" styleclass="OppselectPopup">
           
          <div class="slds-modal__container">
                    
              <div class="slds-modal__content" style="border-top-right-radius: 4px;border-top-left-radius: 4px;position:absolute; width:1000px;left:50px;top:50px;max-height:570px;height:536px" onclick="Mouseopen12(event)">
              <apex:inputhidden value="{!SelectedButtonValue}" id="SelectedButtonValue"/>
              <apex:outputpanel rendered="{!IF(SelectedButtonValue != 'Filters' && SelectedButtonValue != 'Datefield' ,true,false)}">
                  <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;"><span><b style="font-size:15px">{!SelectedButtonValue}</b></span></div>
             </apex:outputpanel>
             <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Datefield',true,false)}">
                  <div style="background-color: #f4f6f9;padding: 8px;margin-bottom: 10px;border-radius: 3px;"><span><b style="font-size:15px">Datefields</b></span></div>
             </apex:outputpanel>
                        <div class="slds-grid slds-wrap slds-grid--pull-padded ">
                        
                        <!-- Dimension -->
                        <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Dimensions',true,false)}" style="width:100%"> 
                        <apex:outputpanel rendered="{!SetDimension}">   
                         <apex:pageMessages ></apex:pageMessages>  
                        <apex:repeat value="{!KPIDetils}" var="KPIDimenRec"> 
                        <apex:outputpanel rendered="{!IF(KPIDimenRec.KPICheck == false,true,false)}">  
                        <apex:outputpanel id="DimensionsId">
                         <apex:outputpanel id="DimensionsIds">
                           
                            <apex:outputpanel rendered="{!DimensionId}">  
                            <apex:pagemessages /> 
                            </apex:outputpanel>
                                <script>
                                    if('{!DimensionIdClose}' == 'true'){
                                        closeSelectPopup();
                                    }
                                </script>
                                           

                                
                            </apex:outputpanel>
                             <p style="padding-left: 30px;float:left">  </p>                            
                                <p style="padding-left: 580px;"> # of Dimensions Selected : <b id="NumberIds" style="font-size:14px;font-weight:300">0</b>/8</p>
                               
                        <div class="slds">                                                              
                            <div class="myapp" style="margin-left:30px;">
                                 
                                <div class="slds-grid slds-m-top--large" style="margin-top:2px;margin-bottom:10px">
                                    <div class="slds-col slds-col-rule--right slds-p-right--large" style="margin-top:2px;margin-bottom:10px;box-sizing: initial;">                                                 
                                        <div class="slds-card" style="width:40%;float:left;background:white">                            
                                            <section class="slds-card__body"  Style="height:300px;padding:0px 0px">                                                      
                                                <div class="slds-scrollable" Style="max-height:300px;">  
                                                    
                                                    <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom: 0px" >
                                                        <!-- Dimension Angular Starts-->
                                                <apex:outputpanel id="DimRecords">
                                                
                                            <div class="search dimsearch" >
                                               
                                                <input type="text" placeholder="Search for dimensions..." onkeyup="filterRecords()" id="myInput"/>
                                                    <span class="searchhint resnum" ></span>
                                                    <a class="clear hide" >
                                                        <svg class="icon" >
                                                            <use
                                                                xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                                                            </use>
                                                        </svg>
                                                    </a>
                                                </div>
                                                <div class="names selectors" style="height:263px" >
                                                
                                                    <div class="listheader squeezed" ></div>   
                                                    <div class="listheader" >Dimensions</div>
                                                   <div class="DimensionsLayoutone" id="DimensionsLayoutone"></div>     
                                                </div>
                                                
                                                
                                            
                           
                                                
                                           </apex:outputpanel>
                                            <!-- Dimension Angular End -->
                                                       
                                                    </table> 
                                                    
                                                </div>  
                                            </section>
                             
                                            <span class="popuptext" id="myPopup">
                                                           <div id="popupHeader"><b style="font-size:13px;color:black" id="dimensionName">0</b><b style="font-size:13px;color:black"> has </b><b style="font-size:13px;color:black" id="colageId">0</b><b style="font-size:13px;color:black"> Unique Values</b></div>
                                                           <div id="graphic"></div>
                                                        </span>
                                        </div>
                                        
                                     <div class="slds-card" style="width:10%;background:white;border:none;float:right;margin-top: auto;"> 
                                       <table align="center" style="margin-top:50px;" >
                                       <tr >
                                       <td style="text-align:center;">
                                       <Button  type="button" style="margin-top:10px;" Class="NewclassAdd"  onclick="moveActiveRow(-1)"  rerender="MyForm,DimensionsIds" status="status" >
                                           <i class="fa fa-caret-up" />
                                       </Button>
                                       </td>
                                       </tr>
                                       <tr >
                                       <td style="text-align:center;" >
                                       <Button type="button" style="margin-top:10px;" Class="NewclassRem"  onclick="moveActiveRow(1)"  rerender="MyForm,DimensionsIds" status="status" >
                                          <i class="fa fa-caret-down" />
                                       </Button>
                                       </td>
                                       </tr>  
                                                                    
                                       </table>
                                       </div>                   
                                        
                                            
                                            <div class="slds-card" style="width:40%;float:right;background:white;border-bottom: 1px solid #d8dde6;margin-top: auto;"> 
                                                <section class="slds-card__body" Style="height:300px;padding:0px 0px">                
                                                    <div class="slds-scrollable--y" Style="max-height:300px">
                                                        <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom:0px" >                                               
                                                                
                                                           <!-- <thead>
                                                                <tr >
                                                                    <th class="slds-text-heading--label slds-size--1-of-13 ClassTh" scope="col" style="font-family: Salesforce Sans, Arial, sans-serif;background:whitesmoke">Selected Dimensions</th>
                                                                    <th class="slds-text-heading--label slds-size--2-of-13" scope="col" style="background:whitesmoke"> </th>
                                                                </tr>
                                                            </thead>  -->
                                                                <div class="listheader" >Selected Dimensions</div>
                                                            <div class="slds-grid slds-wrap slds-grid--pull-padded" >
                                                                <div id="DimensionsbyItmes" class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" style="border: 1px solid #E6ECF2;">                                                     
                                                                   <ul class="slds-scrollable" style="height: 259px;width:99%;overflow: scroll;margin-top: 1%;" id="movingTable">  
                                                                        
                                                                   </ul>
                                                                </div>
                                                                 <div id="DimensionsbyItmesEdit" class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" style="border: 1px solid #E6ECF2;display:none">                                                     
                                                                   <ul class="slds-scrollable" style="height: 259px;overflow-y: scroll;margin-top: 1%;" id="movingTables">
                                                                        <apex:repeat value="{!KPIDimenRec.SelectedDimensions}" var="DimSel">
                                                                            <li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onclick="setActiveRow(this)">
                                                                                <div class="DimeItemDev" onclick="editDimModel(this)" style="display: inline;">
                                                                                    <img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" title="Delete" width="26px" height="12px" /></div><p style="margin-left:30px;margin-top:-25px"> {!DimSel.Availablename}</p>    
                                                                                    <input type="hidden" class="selectedfield" value="{!DimSel.AvailableAPI}"/>
                                                                            </li>
                                                                        </apex:repeat> 
                                                                   </ul>
                                                                </div>
                                                                </div>
                                                                                                         
                                                        </table>  
                                                    </div>                                         
                                                </section>
                                            </div>
                                                                 
                                    </div>                                   
                                </div>                               
                            </div>                            
                        </div>
                        
                        </apex:outputpanel>
                        </apex:outputpanel>
</apex:repeat>
</apex:outputpanel>
<!-- Dimension End-->
</apex:outputpanel>

<!-- DateMethod-->
<apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Datefield',true,false)}" Style="width:100%">
                    <apex:outputpanel id="OppsetDate" rendered="{!SetDate}"> 
                         <apex:pageMessages ></apex:pageMessages>  
                        <apex:repeat value="{!KPIDetils}" var="KPIDateRec"> 
                        <apex:outputpanel rendered="{!IF(KPIDateRec.KPICheck == false,true,false)}"> 
                         <apex:outputpanel id="DatesId">
                             
                               <apex:outputpanel id="DatesIds">
                         <apex:outputpanel rendered="{!DateIds}">
                        <apex:pagemessages /> 
                        </apex:outputpanel>
                        <script>
                                    if('{!DatesIdClose}' == 'true'){
                                        closeSelectPopup();
                                    }
                                </script>
                         </apex:outputpanel> 
                         <p style="padding-left: 30px;float:left"> </p> 
                             <p style="padding-left: 580px;"> # of Datefields Selected :<b id="NumberdateIds" style="font-size:14px;font-weight:300">0</b>/3</p>  
                         
                            <div class="slds">                                                              
                                <div class="myapp" style="margin-left:30px;">
                                    <div class="slds-grid slds-m-top--large" style="margin-top:2px">
                                        <div class="slds-col slds-col-rule--right slds-p-right--large" style="margin-top:2px;margin-bottom:10px;box-sizing: initial;">                                            
                                            <div class="slds-card" style="width:40%;float:left;background:white;border-bottom: 1px solid #d8dde6;">                            
                                                <section class="slds-card__body"  Style="height:300px;padding:0px 0px">                                          
                                                    <div class="slds-scrollable" Style="max-height:300px">
                                                        <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom:0px">
                                                            <!-- Dimension Angular Starts-->
                                                             <div class="search dimsearch" >
                   
                                                            <input type="text" placeholder="Search for Datefields..." onkeyup="filterRecords()" id="myInput"/>
                                                                <span class="searchhint resnum" ></span>
                                                                <a class="clear hide" >
                                                                    <svg class="icon" >
                                                                        <use
                                                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                                                                        </use>
                                                                    </svg>
                                                                </a>
                                                            </div>
                                                            <div class="names selectors" style="height:263px" >
                                                                <div class="listheader squeezed" ></div>   
                                                                <div class="listheader" >Datefields</div>
                                                               <div class="datesLayoutoneone" ></div>       
                                                            </div>
                                                         
                                                                                                                                                                           
                                                        </table> 
                                                    </div>  
                                                </section>
                                            </div> 
                                                   <div class="slds-card" style="width:10%;background:white;border:none;float:right;margin-top: auto;"> 
                                                   <table align="center" style="margin-top:50px;">
                                                   <tr>
                                                   <td style="text-align:center;">
                                                   <Button type="button" class="NewclassAdd"  onclick="moveActiveRowdate(-1)" rerender="MyForm,DateField,DatesIds" status="status" >
                                                          <i class="fa fa-caret-up"></i>
                                                   </Button>
                                                   </td>
                                                   </tr>
                                                   <tr>
                                                   <td style="text-align:center;">
                                                   <Button type="button" class="NewclassRem" onclick="moveActiveRowdate(1)"  rerender="MyForm,DateField,DatesIds" status="status" >
                                                          <i class="fa fa-caret-down"></i>
                                                   </Button>
                                                   </td>
                                                   </tr> 
                                                                              
                                                   </table>
                                                   </div>          
                                                                                  
                                                                                 
                                                <div class="slds-card" style="width:40%;float:right;background:white;margin-top:2px;border-bottom: 1px solid #d8dde6;'"> 
                                                    <section class="slds-card__body" Style="height:300px;padding:0px 0px">                                                                   
                                                        <div class="slds-scrollable--y" Style="max-height:300px">
                                                            <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom:0px" >                                               
                                                                <div class="listheader" >Selected Datefields</div>
                                                            <div class="slds-grid slds-wrap slds-grid--pull-padded" >
                                                                <div id="DatesByItmesval" class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" style="border: 1px solid #E6ECF2;">                                                     
                                                                   <ul  class="slds-scrollable" style="height: 259px;overflow: scroll;margin-top: 1%;" id="movingTableDate">
                                                                        
                                                                   </ul>
                                                                </div>
                                                                <div id="DatesByItmesvalEdit" class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" style="border: 1px solid #E6ECF2;display:none">                                                     
                                                                   <ul class="slds-scrollable" style="height: 259px;overflow-y: scroll;margin-top: 1%;" id="movingTableDates">
                                                                        <apex:repeat value="{!KPIDateRec.SelectedDateFieldlist}" var="DimSel">
                                                                            <li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onclick="setActiveRowdate(this)" >
                                                                                <div class="dateFivDiv" onclick="editDateModel(this)" style="display: inline;">
                                                                                    <img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" title="Delete" width="26px" height="12px" /></div> <p style="margin-left:30px;margin-top:-25px">{!DimSel.DateFieldName}</p>
                                                                                    <input type="hidden" class="selectedfield" value="{!DimSel.DateFieldAPI}"/>
                                                                            </li>
                                                                        </apex:repeat> 
                                                                   </ul>
                                                                </div>
                                                                </div>
                                                            </table>  
                                                        </div>          
                                                    </section>          
                                                </div>
                                              
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </apex:outputpanel>
                            </apex:outputpanel>
                        </apex:repeat>
                    </apex:outputpanel>

</apex:outputpanel>
<!-- Datemethod End -->


<!-- Measures-->
<apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Measures',true,false)}">
                    <apex:outputpanel id="OppsetMeasures" rendered="{!SetMeasure}">
                        <apex:repeat value="{!KPIDetils}" var="KPIMeasureRec"> 
                        <apex:outputpanel rendered="{!IF(KPIMeasureRec.KPICheck == false,true,false)}">
                        <apex:outputpanel id="MeasuresId">
                        
                            <apex:pagemessages /> 
                             
                            <p style="padding-left: 30px;float:left">  </p> 
                            <p style="padding-left: 580px;"> # Measures Selected : <apex:outputpanel rendered="{!IF(KPIMeasureRec.MeasureSize == 0 || KPIMeasureRec.MeasureSize == Null,true,false)}"> 0/5 </apex:outputpanel>
                                    <apex:outputpanel rendered="{!IF(KPIMeasureRec.MeasureSize != 0 && KPIMeasureRec.MeasureSize != Null ,true,false)}">{!KPIMeasureRec.MeasureSize}/5 </apex:outputpanel></p> 
                             </apex:outputpanel>
                            <div class="slds" style="width:1000px">                                                              
                                <div class="myapp" Style="margin-left:12px">
                                    <div class="slds-grid slds-m-top--large" style="margin-top:2px;margin-bottom:10px;box-sizing: initial;">
                                        <div class="slds-col slds-col-rule--right slds-p-right--large" style="margin-top:2px;margin-bottom:10px">  
                                            <apex:outputpanel id="DateFields">                                          
                                            <div class="slds-card" style="width:48%;float:left;background:white;border-bottom: 1px solid #d8dde6; max-width: 49%;">                            
                                                <section class="slds-card__body"  Style="height:300px;padding:0px 0px">                                             
                                                    <div class="slds-scrollable--y" Style="max-height:300px;">
                                                        <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom:0px;width:100%">
                                                            <thead>                                                               
                                                                <tr >
                                                                    <th class="slds-text-heading--label slds-size--1-of-13" scope="col" style="background:whitesmoke"> <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Select Measures"  style="margin-left:-21px;width: 219px;height:10px"/> </th>
                                                                    <!--<th class="slds-text-heading--label slds-size--1-of-13 ClassTh" scope="col" style="font-family: Salesforce Sans, Arial, sans-serif;background:whitesmoke">Select Measures </th>-->
                                                                   <th class="slds-text-heading--label slds-size--2-of-13" scope="col" style="background:whitesmoke"> 
                                                                        <apex:outputpanel rendered="{!IF(KPIMeasureRec.CountRender == false,true,false)}">
                                                                            <input type="button" id="btnHousing" value="Count" onclick="btnColor('btnHousing','#0070d2','{!KPIMeasureRec.KPIRownumber}','{!KPIMeasureRec.dataset}');" style="background-color: white;padding-left: 12px;padding-right: 12px;text-align: center;vertical-align: middle;border: 1px solid rgb(216, 221, 230);position: relative;display: inline-block;background-clip: padding-box;border-radius: 4px;color: rgb(0, 112, 210);font-size: inherit;line-height: 34px; "/>   
                                                                         </apex:outputpanel>
                                                                         <apex:outputpanel rendered="{!IF(KPIMeasureRec.CountRender == true,true,false)}">
                                                                            <input type="button" id="btnHousingCount" value="Count" onclick="btnColorCount('btnHousingCount','#0070d2','{!KPIMeasureRec.KPIRownumber}','{!KPIMeasureRec.dataset}');" style="background-color: #0070d2;padding-left: 12px;padding-right: 12px;text-align: center;vertical-align: middle;border: 1px solid rgb(216, 221, 230);position: relative;display: inline-block;background-clip: padding-box;border-radius: 4px;color: white;font-size: inherit;line-height: 34px; "/>   
                                                                        </apex:outputpanel>
                                                                    </th> 
                                                                                                                              
                                                                </tr>
                                                               
                                                            </thead>                                                                                                                
                                                                                                                                                                             
                                                         </table>
                                                    </div>  
                                                </section>  
                                            </div> 
                                             <div class="slds-card" style="width:5%;background:white;border:none;float:left;margin-top: auto;"> 
                                       <table align="center" style="margin-top:80px;margin-left:5px;" >
                                           <tr >
                                           <td style="text-align:center;" >
                                              <!--   <apex:commandbutton value="Up" action="{!MoveUpDim}" rerender="Sectionthis" style="margin-top:20px;"/> -->
                                                  
                                           </td>
                                           </tr> 
                                           <tr >
                                           <td style="text-align:center;" >
                                             <!--  <apex:commandbutton value="Down" action="{!MoveDownDim}" rerender="Sectionthis" style="margin-top:10px;"/>  --> 
                                           </td>
                                           </tr>                                      
                                       </table>
                                       </div>                                                                   
                                            <div class="slds-card" style="width:46%;float:right;background:white;border-bottom: 1px solid #d8dde6;margin-top: 0px; max-width: 46%;"> 
                                               <apex:outputpanel id="Sectionthis">
                                                <section class="slds-card__body" Style="height:300px;padding:0px 0px">                                                                   
                                                    <div class="slds-scrollable--y" Style="max-height:300px">
                                                        <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal" style="border-bottom:0px" id="movingTableDim">                                               
                                                            <thead>
                                                                <tr >
                                                                    <th class="slds-text-heading--label slds-size--1-of-13 ClassTh" scope="col" style="font-family: Salesforce Sans, Arial, sans-serif;background:whitesmoke">  SELECTED MEASURES</th>
                                                                    <th class="slds-text-heading--label slds-size--2-of-13" scope="col" style="background:whitesmoke"> </th>
                                                                </tr>
                                                            </thead>                                                           
                                                            <tbody>
                                                                <apex:variable value="{!0}" var="i" />
                                                                <apex:repeat value="{!KPIMeasureRec.selectedMeasures}" var="SelectedMeasure">
                                                                    <tr valign="top" onClick="setActiveRowDim(this,'{!i}','{!SelectedMeasure}')">
                                                                        <td Style="text-align:center;border-top:0px">
                                                                            <apex:outputText value="{!SelectedMeasure}"/>
                                                                        </td>
                                                                        <td class="messageCell" Style="text-align:left;border-top:0px">
                               
                                                                        </td>
                                                                    </tr>
                                                                    <apex:variable value="{!i+1}" var="i" />
                                                                </apex:repeat>   
                                                            </tbody>                                             
                                                        </table>  
                                                    </div>                             
                                                </section>
                                                </apex:outputpanel>          
                                            </div>
                                        </apex:outputpanel>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--</apex:outputpanel>-->
                        </apex:outputpanel>
                        </apex:repeat>
                    </apex:outputpanel>
</apex:outputpanel>
<!-- Measures End-->


        <!-- Filters-->
    <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Filters',true,false)}" style="width:100%">
                        <apex:outputpanel id="OppsetFilters"  >
                                  
                                <apex:outputpanel id="tableRepeat" >
                               
                               <div class="slds-grid slds-wrap slds-grid--pull-padded">
                               <div class="slds-p-horizontal--small slds-size--10-of-12 slds-medium-size--10-of-12 slds-large-size--10-of-12">
                                   <div class="slds-form slds-form--inline" style="text-align: left;">
                                      <label class="slds-form-element__label" for="name"> Filter Name : </label>
                                      <div class="slds-form-element__control" style="width: 50%;">
                                          <input type="text" class="slds-input" id="FilterNames" /> 
                                         <div id="error12" style="padding-left:3px;color: #d74c3b;"></div>
                                      </div>
                                    </div>
                               </div>   
                            </div>
                            <div id="errorCond" style="padding-left:3px;color: #d74c3b;"></div>
    
                               
                                
                           <!--   <c:Filter_Items /> -->
                              <div class="slds-grid slds-wrap slds-grid--pull-padded" style="margin: 1%;">
        
                                    <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12">
                                       
                                    <div class="slds-grid slds-wrap slds-grid--pull-padded">
                                       <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12">
                                              <!-- Row 2 -->   
                                               <div class="slds-grid slds-wrap slds-grid--pull-padded" style="background-color: #E6ECF2;padding: 8px;margin-top: 1%;">
                                                   <div class="slds-p-horizontal--small slds-size--6-of-12 slds-medium-size--6-of-12 slds-large-size--6-of-12">
                                                       <h4 style="margin-top: 10px;">Filters</h4>
                                                   </div>
                                                   <div class="slds-p-horizontal--small slds-size--6-of-12 slds-medium-size--6-of-12 slds-large-size--6-of-12">
                                                       <h1  id="filterIconBtnPls" style="font-size: 26px;float:right;cursor: pointer;" onclick="showFilter()">+</h1>
                                                       <h1  id="filterIconBtnMins" style="font-size: 26px;float:right;cursor: pointer;display: none;" onclick="showFilter()">-</h1>
                                                     
                                                         <div class="pagespinner" id="IsProcessSpinner" style="display:none">
            <div class="loading-analytics-container" data-reactid=".3">
                <svg class="loading-analytics" data-reactid=".3.0" viewBox="-255 347 100 100" x="0px" y="0px">
                    <path class="bar-1" d="M-207.1,398.7c-1.7-1.9-2.7-4.5-2.6-7.3c0.3-5.1,4.4-9.2,9.5-9.5c2.8-0.1,5.4,0.9,7.3,2.6c0.2,0.2,0.5,0.2,0.7,0l2.8-2.8 c0.2-0.2,0.2-0.5,0-0.7c-2.8-2.6-6.6-4.2-10.7-4c-7.9,0.3-14.3,6.6-14.5,14.5c-0.1,4.1,1.4,7.9,4,10.7c0.2,0.2,0.5,0.2,0.7,0 l2.8-2.8C-206.9,399.2-206.9,398.9-207.1,398.7z" data-reactid=".3.0.0"></path>
                    <path class="bar-2" d="M-200.2,372c-11.3,0.3-20.2,9.7-19.6,21.1c0.6,10.4,9.2,18.7,19.6,18.9c5.5,0.1,10.5-2.1,14.2-5.6c0.2-0.2,0.5-0.2,0.7,0 l2.9,2.9c0.2,0.2,0.2,0.5,0,0.7c-4.6,4.4-10.9,7.1-17.8,7c-13.4-0.3-24.3-11.2-24.5-24.6c-0.2-13.8,10.8-25.1,24.5-25.4 c0.3,0,0.5,0.2,0.5,0.5v4C-199.7,371.8-199.9,372-200.2,372z" data-reactid=".3.0.1"></path>
                    <path class="bar-3" d="M-178.9,413.5c-5.3,5.1-12.4,8.3-20.3,8.5c-16.4,0.3-30.2-12.9-30.6-29.3c-0.1-2.8,0.3-5.5,0.9-8c0.1-0.3-0.1-0.5-0.4-0.6 l-3.9-1c-0.3-0.1-0.5,0.1-0.6,0.4c-0.7,2.9-1.1,6-1.1,9.1c0.3,19.1,16,34.5,35.1,34.5c9.5,0,18.1-3.8,24.3-10c0.2-0.2,0.2-0.5,0-0.7 l-2.8-2.8C-178.5,413.4-178.7,413.3-178.9,413.5z" data-reactid=".3.0.2"></path>
                </svg>
            </div>
        </div>
 <!--@@ Himanshu tak -->
   <div class="popup menu selector controlmenu filterAddMenu filter add"  style="opacity: 1;top: 100% !important;left: 60.5% !important;">
    <div class="selectorcontainer-parent w100" >
        <div class="selectorcontainer clearfix" >
            <div class="leftselector w50 floatleft clearfix" >
                <div class="container" >
                    <div class="buttonbar dark nospaceR clearfix" >
                        <a class="btn small floatleft slideback slidebackbtn" onclick="slideback();return false;">
                            <svg class="icon" >
                                <use
                                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronleft">
                                </use>
                            </svg>
                        </a>
                        <label class="small selecteddim selecteddimText" >Add a Filter</label>
                    </div>
                </div>
                <!--Filter Start -->
                <div class="filterContainer filterSearch" >
                    <div class="filterPanel filterPanelMeasures" >
                        <div class="dropdownPanel" >
                            <div class="dropdownbar" >
                                <div class="Measuresdropdownbutton dropdownbutton" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                    <span >Between</span>
                                    <svg class="icon dropdownarrow" >
                                        <use
                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevrondown">
                                        </use>
                                    </svg>
                                </div>
                                <div class="dropdownList popup Measurespopup" style="margin-left: 1%;">
                                    <div class="item  operator_between menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')" >
                                        <label>Between</label>
                                    </div>
                                    <div class="item operator_greater menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')" >
                                        <label >Greater Than</label>
                                    </div>
                                    <div class="item operator_greater_equal menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Greater Than Or Equal To</label>
                                    </div>
                                    <div class="item operator_less menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')" >
                                        <label >Less Than</label>
                                    </div>
                                    <div class="item operator_less_equal menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Less Than Or Equal To</label>
                                    </div>
                                    <div class="item operator_equals menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Equals</label>
                                    </div>
                                    <div class="item operator_not_equals menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Does Not Equal</label>
                                    </div>
                                    <div class="item operator_is_null menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Is Null</label>
                                    </div>
                                    <div class="item operator_is_not_null menuItems" onclick="dropdownBoxListtoggle(this,'Measurespopup','Measuresdropdownbutton')">
                                        <label >Is Not Null</label>
                                    </div>
                                </div>
                            </div>
                           
                        </div>
                        
                        <div class="container w50 sliderInput floatleft withoutfromTOVal" >
                               <input type="text" class="rangeinputfrom w100 " value="0" tabindex="-1" />
                               <!--<md-datepicker ng-model="toDate" md-placeholder="Enter date"></md-datepicker>-->
                         </div>
                        <div class="container rangeSelector" >
                            <div class="selectors values measureslider" >
                                <div class="container rangeinputs w100 clearfix " >
                                    <label class="small w50 muted floatleft fromTOVal" >From</label>
                                    <label class="small w50 muted floatleft TOVal" >To</label>
                                    
                                        <div class="container w50 sliderInput floatleft " >
                                            <input type="text" class="rangeinputfrom w100 " value="0" tabindex="-1" id="minVal" />
                                           <!--<md-datepicker ng-model="toDate" md-placeholder="Enter date"></md-datepicker>-->
                                        </div>
                                        
                                        <div class="container w50 sliderInput floatleft " >
                                             <input type="text" class="rangeinputto w100" value="0" tabindex="-1" id="maxVal"/> 
                                            <!--<md-datepicker ng-model="FromDate" md-placeholder="Enter date"></md-datepicker>-->
                                            </div>
                                        </div>

                                        </div>
                                    </div>
                                 
                                </div>
                                   <a class="btn medium nospaceR main filter update filterPanelMeasures addMeasures" onclick="addMeasuresItems();return false;">Add</a>
                                   
                                   <a class="btn medium nospaceR main filter update filterPanelMeasures updateMeasures" onclick="updatemeasure();return false;">Update</a>
                                    
                                <!-- filterPanelMeasures End -->
                                
                            <div class="filterPanel filterPanelDimensions" >
                            <div class="dropdownPanel" >
                                <div class="dropdownbar" >
                                    <div class="dropdownbutton DimensionspopupBtn" onclick="dropdownBoxListtoggle(this,'Dimensionspopup','DimensionspopupBtn')" >
                                        <span >Equals</span>
                                        <svg class="icon dropdownarrow" >
                                            <use
                                                xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevrondown">
                                            </use>
                                        </svg>
                                    </div>
                                  
                                    <div class="dropdownList popup  Dimensionspopup" style="margin-left: 1%;">
                                        <div class="item operator_equals" onclick="dropdownBoxListtoggle(this,'Dimensionspopup','DimensionspopupBtn')">
                                            <label >Equals</label>
                                        </div>
                                        <div class="item operator_not_equals" onclick="dropdownBoxListtoggle(this,'Dimensionspopup','DimensionspopupBtn')" >
                                            <label >Does Not Equal</label>
                                        </div>
                                        <div class="item operator_contains" onclick="dropdownBoxListtoggle(this,'Dimensionspopup','DimensionspopupBtn')">
                                            <label >Contains</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="container listSelector"  data-list-ready="true">
                            <!--New ContainsEnd Start -->
                            <div class="search valuesearch" >
                           
                                    <input type="text" placeholder="Words or characters..." id="filterContains" onkeyup="checklengthContains()"/ >
                                        <span class="searchhint resnum" ></span>
                                        <a class="clear hide" data-tooltip="Clear Search" >
                                            <svg class="icon">
                                                <use
                                                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                                                </use>
                                            </svg>
                                        </a>
                                    </div>
                                <!--New ContainsEnd -->    
                                <div class="search valuesearch" >
                                    <svg class="icon searchBoxIcon" >
                                        <use
                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#search">
                                        </use>
                                    </svg>
                                    <input type="text" placeholder="Search for values..." id="filterDimInput" onkeyup="filterDimensionsRecords()"/ >
                                        <span class="searchhint resnum" ></span>
                                        <a class="clear hide" data-tooltip="Clear Search" >
                                            <svg class="icon">
                                                <use
                                                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                                                </use>
                                            </svg>
                                        </a>
                                    </div>
                                    <div class="selections" >
                                        <div class="selectedstatus select" style="margin-left: 9px;">
                                            <input class="expanded-list-all-toggle-checkbox allCheck" type="checkbox"  onclick="itemsDimensionsSelUnSel()"/>
                                                <span>All</span>
                                            </div>
                                            <a class="selectedlist selnum" id="selectedShow" onclick="showselectedfunction()">Show Selected (0)</a>
                                            <a class="selectedlist" id="selectedhide" onclick="hideselectedfunction()" style="display:none">hide Selected</a>
                                        </div>
                                        <div class="values selectors" >
                                                 <p id="contdimstion" style="color: red;font-size: 15px;">Must be At Least 2 characters</p>
                                      
                                                <div class="listheader squeezed" ></div>
                                                <div id="hideslected" >
                                                 <div id="DimensionsitemsHtml"></div>
                                                 </div>
                                                 
                                                 <div id="showselected" style="display:none">
                                                 <div id="DimensionsitemsHtmlhide"></div>
                                                 </div>
                                            </div>
                                            </div>
                                        </div>
                                        <div class="filterPanelDimensions"><a class="btn medium nospaceR main filter update updateDimensionsBtn" onclick="UpdateDimensions()">Update</a> <a class="btn medium nospaceR main filter update addDimensionsBtn" onclick="addDimensions()">Add</a></div>
                                    </div>   
                            <!--Filter End-->
                            <!-- filterPanelDates -->
                         <div class="filterPanelDates  container dateSelector">
                         <div class="date-picker-wrapper old-calendar" style="height: 334px;">
                            <div class="date-picker selectors values measureslider" >
                                <div class="tabset date-picker-tab" >
                                    <ul class="tabbar clearfix" role="tablist" >
                                        <li id="tab453_tabbtn" class="active tabbutton datetab" role="tab" aria-controls="tab453" aria-selected="true" >
                                            <div class="tabBtnTitle" >Absolute date range</div>
                                        </li>
                                       
                                    </ul>
                                    <div id="tab453" role="tabpanel" aria-labelledby="tab453_tabbtn" >
                                        <div >
                                            <div class="filterContainer" >
                                                <div class="filterPanel" >
                                                    <div class="dropdownPanel" >
                                                        <div class="dropdownbar" >
                                                            <div class="dropdownbutton Datedropdownbutton" onclick="dropdownBoxListtoggle(this,'Absolutedate','Datedropdownbutton')">
                                                                <span class="Absolutedateval">Between</span>
                                                                <svg class="icon dropdownarrow" >
                                                                    <use
                                                                        xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevrondown">
                                                                    </use>
                                                                </svg>
                                                            </div>
                                                            <div class="dropdownList popup Absolutedate" style="margin-left:1%">
                                                                    <div class="item  operator_between" onclick="dropdownBoxListtoggle(this,'Absolutedate','Datedropdownbutton')">
                                                                        <label >Between</label>
                                                                    </div>
                                                                    <div class="item operator_greater_equal" onclick="dropdownBoxListtoggle(this,'Absolutedate','Datedropdownbutton')" >
                                                                        <label >Greater Than Or Equal To</label>
                                                                    </div>
                                                                    <div class="item operator_less_equal" onclick="dropdownBoxListtoggle(this,'Absolutedate','Datedropdownbutton')">
                                                                        <label >Less Than Or Equal To</label>
                                                                    </div>
                                                                </div>
                                                        </div>
                                                    </div>
                                                    <div class="custom-picker" >
                                                        <div class="container rangeinputs w100 clearfix">
                                                            <label class="small w50 muted floatleft fromTOVal">From</label>
                                                            <label class="small w50 muted floatleft TOVal">To</label>
                                                            <div class="container w50 sliderInput floatleft">
                                                                <input class="rangeinputfrom w100" id="fromDate"  type="date"  />
                                                                </div>
                                                                <div class="container w50 sliderInput floatleft">
                                                                    <input class="rangeinputto w100" id="toDate"  type="date" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>  
                                                      </div>
                                                    </div>    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                 <div ><a class="btn medium nospaceR main filter update updateDateBtn" onclick="updateDate();return false;" >Update</a><a class="btn medium nospaceR main filter update addNewDateBtn" onclick="addDateCal()">Add</a></div>
                            </div>
                            <!-- End filterPanelDates -->
                            <div class="container fieldsRecords"  >
                                <span ></span>
                                <div class="search dimsearch" >
                                   
                                    <input type="text" placeholder="Search for dates and dimensions..." onkeyup="filterRecords()" id="myInput"/>
                                        <span class="searchhint resnum" ></span>
                                        <a class="clear hide" >
                                            <svg class="icon" >
                                                <use
                                                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#close">
                                                </use>
                                            </svg>
                                        </a>
                                    </div>
                                    <div class="names selectors" >
                                        <div class="listheader squeezed" ></div>
                                        <div class="listheader" >Measures</div>
                                        <div class="MeasuresLayout" ></div>
                                      
                                       <div class="listheader" >Dates</div>
                                       <div class="datesLayout" ></div>
                                       
                                        <div class="listheader" >Dimensions</div>
                                       <div class="DimensionsLayout" ></div>
                                        
                                    </div>
                                </div>
                            </div>
                            <div class="rightselector w50 floatleft clearfix" >
                                <div class="container" >
                                    <div class="buttonbar dark nospaceR clearfix" >
                                        <a class="btn small floatleft slideback" >
                                            <svg class="icon" >
                                                <use
                                                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronleft">
                                                </use>
                                            </svg>
                                        </a>
                                        <label class="small selecteddim" ></label>
                                    </div>
                                </div>
                                
                                <span></span>
                                
                            </div>
                          
                        </div>
            
                    </div>
                </div>
                                                   </div>
                                               </div>  
                                               
                                             <!--Row 3 -->
                                               <div class="slds-grid slds-wrap slds-grid--pull-padded" >
                                                   <div id="FilterbyItmes" class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" style="border: 1px solid #E6ECF2;">
                                                      
                                                       <ul class="slds-scrollable" style="height: 219px;overflow-y: scroll;margin-top: 1%;">
                                                          
                                                       </ul>
                                                   </div>
                                                    <div id="FilterbyItmesIdEdit" style="margin-left: 42%;height: 200px;width: 520px;border: 1px solid #c5d2e0;border-radius: .25rem;display:none;font-size: 14px;">
                        <ul style="overflow-y: scroll;height: 153px;">
                              
                            <apex:repeat value="{!InnClassEditList}" var="val">
                                
                            <apex:outputpanel rendered="{!IF(val.typeofSelect == 'measure',true,false)}">
                                <apex:outputpanel rendered="{!IF(val.filterCon == 'Between',true,false)}">
                                     <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                                   
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                                <div onclick="removeItems(this)" style="display: inline;float: right;padding-right: 1px;cursor: pointer;" >X</div>
                                        <input class="typeofSelect" type="hidden" value="{!val.typeofSelect}" />
                                        <input class="minVal" type="hidden" value="{!val.minVal}" />
                                        <input class="maxVal" type="hidden" value="{!val.maxval}" />
                                        <input class="filterCon" type="hidden" value="{!val.filterCon}" />
                                        <input class="selectedfield" type="hidden" value="{!val.selectedfield}"  />
                                        <input class="fieldapi" type="hidden" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Greater Than',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Greater Than Or Equal To',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Less Than',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Less Than Or Equal To',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Equals',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                        <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Does Not Equal',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Is Null',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                                 <apex:outputpanel rendered="{!IF(val.filterCon == 'Is Not Null',true,false)}">
                                      <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                                            <div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                
                                    <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="minVal" value="{!val.minVal}" />
                                        <input type="hidden" class="maxVal" value="{!val.maxval}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li></apex:outputpanel>
                                    
                            </apex:outputpanel>
                            
                             <apex:outputpanel rendered="{!IF(val.typeofSelect == 'date',true,false)}">
                            <apex:outputpanel rendered="{!IF(val.filterCon == 'Between',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                        <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="fromDate" value="{!val.fromDate}" />
                                        <input type="hidden" class="toDate" value="{!val.toDate}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                
                                    </apex:outputpanel>
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Less Than Or Equal To',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                            <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="fromDate" value="{!val.fromDate}" />
                                        <input type="hidden" class="toDate" value="{!val.toDate}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Greater Than Or Equal To',true,false)}">
                                         <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                            
                                        <div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                        <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="fromDate" value="{!val.fromdate}" />
                                        <input type="hidden" class="toDate" value="{!val.todate}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />   
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                                    </apex:outputpanel>
                                    
                            </apex:outputpanel>
                             <apex:outputpanel rendered="{!IF(val.typeofSelect == 'dimension',true,false)}">
                                    <apex:outputpanel rendered="{!IF(val.filterCon == 'Contains',true,false)}">
                            <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                                <div class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                        <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="selectedIds" value="{!val.minVal}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                            </li>
                            </apex:outputpanel>
                                <apex:outputpanel rendered="{!IF(val.filterCon != 'Contains',true,false)}">
                                    <li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;">
                                <div class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">{!val.Betweens}</div>
                                        <div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>
                                        <input type="hidden" class="typeofSelect" value="{!val.typeofSelect}" />
                                        <input type="hidden" class="selectedIds" value="{!val.minVal}" />
                                        <input type="hidden" class="filterCon" value="{!val.filterCon}" />
                                        <input type="hidden" class="selectedfield" value="{!val.selectedfield}"  />
                                        <input type="hidden" class="fieldapi" value="{!val.FieldAPI}"  />
                                        
                            </li>
                                    </apex:outputpanel>
                                    
                            </apex:outputpanel>
                            </apex:repeat>
                        </ul>
                    </div>
                                               </div>     
                                            <!-- Row 4-->
                                             <apex:outputpanel rendered="{!AddFiltersShow}">
                                           <apex:outputpanel id="NewIdsq">
                       <apex:repeat value="{!KPIDetils}" var="KPIFilterRec"> 
                                     <apex:repeat value="{!KPIFilterRec.AddFilter}" var="AddFilter"> 
                <div class="slds-grid slds-wrap slds-grid--pull-padded" style="margin-top: 1%;float:left;width:70%">
                      
                       <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" >
                         <div class="slds-form slds-form--inline" style="text-align: left;">
                              <label class="slds-form-element__label" for="FilterLogic">Filter Logic: </label>
                              <div class="slds-form-element__control" style="width: 50%;">
                                
                                                
                                                  <script>
                                                    if('{!isTrue}' == 'true'){
                                        
                                                    closeSelectPopup();
                                                       }
                                                    </script>
                                 <apex:inputText value="{!AddFilter.userLogic}" styleclass="slds-input"/> 
                                 <apex:outputpanel rendered="{!isError}">
                             <div id="error" style="padding-left:3px;color: #d74c3b;"> Please Enter Valid Filter Condition. </div>
                             </apex:outputpanel>  
                             <apex:outputtext value="Advanced Filter Conditions: (1 AND 2) OR 3" />                              
                            
                                            
                              </div>
                            </div>
                       </div>
                   </div>
                   </apex:repeat>
                  
                   </apex:repeat>
                   </apex:outputpanel> 
                                          <!-- <div class="slds-grid slds-wrap slds-grid--pull-padded" style="margin-top: 1%;width:30%">
                                               <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" >
                                                   <table>
                                                       <tr >
                                                         <td style="padding: 10px; text-align: right;">
                                                             <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Filters',true,false)}">
                                                              
                                                                        
                                                                        <button type="button" style="margin-right: 10px;width: 26%;" onClick="closeSelectPopup();" status="status" >Close</button>
                                                                        <button type="button" style="width: 42%;" onClick="NewSelectPopup();" status="status" >Add Filter</button>
                                                               </apex:outputpanel>
                                                            
                                                         </td> 
                                                     </tr>
                                                   </table>
                                               </div>
                                           </div> 
                                            </apex:outputpanel>-->
                                            
                                            <div class="slds-modal__footer" style="margin-top:80px" >
                                                <div class="slds-x-small-buttons--horizontal">
                                                    <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Filters',true,false)}">
                                                               <button type="button" Class="slds-button slds-button--neutral" style="width: 11%;" onClick="closeSelectPopup();" status="status" >Cancel</button>
                                                                <button type="button" class="slds-button slds-button--neutral slds-button--brand" style="width: 11%;" onClick="NewSelectPopup();" status="status" >Add Filter</button>
                                                               </apex:outputpanel>
                                                    </div>
                                                    </div>
                                                    </apex:outputpanel>
                   
                                            <apex:outputpanel rendered="{!EditFiltersShow}">
                                                 <apex:outputpanel id="NewIdsqEdit">
                       <apex:repeat value="{!KPIDetils}" var="KPIFilterRec"> 
                                         <apex:repeat value="{!KPIFilterRec.EditFilter}" var="AddFilter"> 
                <div class="slds-grid slds-wrap slds-grid--pull-padded" style="margin-top: 1%;float:left;width:70%">
                      
                       <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" >
                         <div class="slds-form slds-form--inline" style="text-align: left;">
                              <label class="slds-form-element__label" for="FilterLogic">Filter Logic: </label>
                              <div class="slds-form-element__control" style="width: 50%;">
                                
                                                
                                                  <script>
                                                    if('{!isFalse}' == 'true'){
                                        
                                                    closeSelectPopup();
                                                       }
                                                    </script>
                                 <apex:inputText value="{!AddFilter.userLogic}" styleclass="slds-input"/> 
                                 <apex:outputpanel rendered="{!isErrorEdit}">
                             <div id="error" style="padding-left:3px;color: #d74c3b;"> Please Enter Valid Filter Condition. </div>
                             </apex:outputpanel>  
                             <apex:outputtext value="Advanced Filter Conditions: (1 AND 2) OR 3" />                              
                            
                                            
                              </div>
                            </div>
                       </div>
                   </div>
                   </apex:repeat>
                 
                   </apex:repeat>
                   </apex:outputpanel> 
                                          <!-- <div class="slds-grid slds-wrap slds-grid--pull-padded" style="margin-top: 1%;width:30%">
                                               <div class="slds-p-horizontal--small slds-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12" >
                                                   <table>
                                                       <tr>   
                                                         <td style="padding: 10px; text-align: right;">
                                                             <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Filters',true,false)}">
                                                                       
                                                                       
                                                                       <button type="button"   style="margin-right: 31px;width: 36%;" onClick="closeSelectPopup();" status="status" >Cancel</button>
                                                                        <button type="button" class="slds-button slds-button--neutral slds-button--brand" style="margin-right: 10px;width: 40%;" onClick="NewSelectPopupEdit();" status="status" >Submit</button>
                                                                        
                                                                       
                                                                        
                                                                </apex:outputpanel>
                                                               
                                                            
                                                         </td> 
                                                     </tr>
                                                   </table>
                                               </div>
                                           </div>
                                            </apex:outputpanel>-->
                                            
                                            <div class="slds-modal__footer" style="margin-top:80px" >
                                                <div class="slds-x-small-buttons--horizontal">
                                                     <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Filters',true,false)}">
                                                                     <button type="button" class="slds-button slds-button--neutral"  style="margin-right: 1%;width: 12%;" onClick="closeSelectPopup();" status="status" >Cancel</button>
                                                                      <button type="button" class="slds-button slds-button--neutral slds-button--brand" style="width: 12%;" onClick="NewSelectPopupEdit();" status="status" >Submit</button>
                                                                </apex:outputpanel>
                                                    </div>
                                                    </div>
                                            </apex:outputpanel>
    
                                          </div>              
                                       </div>  
                                     </div>
                                     
                                   </div>     
                              
                            
                              
                            </apex:outputpanel> 
                      
                    
                    
                    </apex:outputpanel>
                    
                               
            </apex:outputpanel>
    
    <!-- Filters-->
     
    </div>

                 <apex:outputpanel rendered="{!IF(SelectedButtonValue != 'Filters',true,false)}">
                 <div class="slds-modal__footer">
                      <div class="slds-x-small-buttons--horizontal">
                                   
                                        <button type="button" class="slds-button slds-button--neutral" onClick="closeSelectPopup();" status="status" >Cancel</button>
                                        <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Dimensions',true,false)}">
                                         <button type="button" class="slds-button slds-button--neutral slds-button--brand" onClick="MeasDateSelectPopup('Dimensions');" status="status" >Submit</button>
                                        </apex:outputpanel>
                                        <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Datefield',true,false)}">
                                         <button type="button" class="slds-button slds-button--neutral slds-button--brand" onClick="MeasDateSelectPopup('Datefield');" status="status" >Submit</button>
                                         </apex:outputpanel>
                                        <apex:outputpanel rendered="{!IF(SelectedButtonValue == 'Measures',true,false)}">
                         
                                         <button type="button" class="slds-button slds-button--neutral slds-button--brand" onClick="MeasDateSelectPopup('Measures');" status="status" >Submit</button>
                                         </apex:outputpanel> 
                          
                       </div>    
                    </div>
                     </apex:outputpanel>
                </div>
            </div>
            </apex:outputPanel>   
        </div>  
    </div>
    <div class="myapp" style="background-color: white;padding-top:15px;padding-bottom:15px;">
                            <div class="slds-col slds-no-flex">
                                <div class="slds-button-group" role="group" style="display:block"> 
                                    <table>
                                        <tr>
                                             <td width="30%">
                                                        
                                            </td>   
                                            <td width="40%">
                                            <!--  <apex:outputpanel rendered="{!Enablevalue}" >
                                              <center> <button type="button" Class="managebutton slds-button--neutral" id="button12" onclick="openGeneratePopup()" style="background: white;color: rgb(77, 77, 77);;font-weight:bold" status="status" disabled="true">Create Dashboard </button>  </center>
                                              </apex:outputpanel> 
                                              <apex:outputpanel rendered="{!!Enablevalue}" > -->
                                               <center> 
                                                <button type="button" Class="managebutton slds-button--neutral" id="button12" onclick="openGeneratePopup()" style="background: white;color: rgb(77, 77, 77);;font-weight:bold" status="status" >Create Dashboard </button>
                                               <!-- <button type="button" Class="managebutton slds-button--neutral" id="button12" onclick="openConfigPopup()" style="background: white;color: rgb(77, 77, 77);;font-weight:bold" status="status" >Save Configuration </button>  -->
                                               </center>
                                             <!-- </apex:outputpanel>-->
                                            </td>
                                            <td width="30%">
                                             <!--   <apex:commandbutton styleClass="slds-button slds-button--neutral" action="{!CloneFromPrevious}" style="float:left;background-color: #ccc;color: rgb(77, 77, 77);;font-weight:bold" rerender="Forms" value="Clone From Previous Run" status="status"/>
                                               -->
        
                                            </td>
                                            
                                           
                                        </tr>
                                    </table> 
                                   
                                </div>
                            </div>  
                        </div>
                    
    </div>  

    <input type="hidden" Name="RowNumbers" id="RowNumbers"/>
       <input type="hidden" Name="FilterNamesandVal" id="FilterNamesandVal"/>
       <input type="hidden" Name="FilterNamesandIds" id="FilterNamesandIds"/>
        <input type="hidden" Name="FilterNamesvalues" id="FilterNamesvalues"/>
<input type="hidden" Name="Dataset" id="Dataset"/>
<input type="hidden" Name="Rowtrue" id="Rowtrue"/>
<input type="hidden" Name="Count" id="Count"/>

<input type="hidden" Name="SUMName" id="SUMName"/>
<input type="hidden" Name="DimenCount" id="DimenCount"/>
<input type="hidden" Name="DimenName" id="DimenName"/>

<input type="hidden" Name="Rowsumtrue" id="Rowsumtrue"/>
<input type="hidden" Name="RowDimtrue" id="RowDimtrue"/>
<input type="hidden" Name="SUM" id="SUM"/>

        <input type="hidden"  Name="RowNumber" id="RowNumber" /> 
         <input type="hidden"  Name="Downvalues" id="Downvalues" /> 
         <input type="hidden"  Name="Downcount" id="Downcount" /> 
         <input type="hidden"  Name="DownvaluesDate" id="DownvaluesDate" /> 
         <input type="hidden"  Name="DowncountDate" id="DowncountDate" /> 
         <input type="hidden"  Name="DownvaluesDim" id="DownvaluesDim" /> 
         <input type="hidden"  Name="DowncountDim" id="DowncountDim" /> 
        <input type="hidden"  Name="EditTopic" id="EditTopic" /> 
        <input type="hidden"  Name="EditDim" id="EditDim" /> 
         <input type="hidden"  Name="MeasTopic" id="MeasTopic" />   
        <input type="hidden"  Name="counterWrap" id="counterWrap" />  
        <input type="hidden"  Name="KPIDimen" id="KPIDimen" />
        <input type="hidden"  Name="KPIDimen" id="KPIDimen" />
        <input type="hidden"  Name="KPIFilterName" id="KPIFilterName" /> 
        <input type="hidden"  Name="AddFilName" id="AddFilName" />    
        <input type="hidden" Name="RowNumberFilter" id="RowNumberFilter" /> 
        <input type="hidden" Name="RowNumberCount" id="RowNumberCount" /> 
        <input type="hidden" Name="FilterEdit" id="FilterEdit" /> 
        <apex:actionFunction name="ActEditFilters" action="{!FilterMethodEdit}" rerender="OppselectPopup" status="status" oncomplete="Newpop();"/>    
        <apex:actionFunction name="DateNames" action="{!DateNames}" rerender="MyForm,Sectionthis,MeasuresId" status="status"/>
        <apex:actionFunction name="editdatelabel" action="{!SaveEditLabels}"  rerender="FormNew,Forms" status="status"/>
        <apex:actionFunction name="editdimlabel" action="{!SaveDimLabels}"  rerender="FormNew,Forms" status="status"/>
        <apex:actionFunction name="editmeaslabel" action="{!SaveMeasLabels}"  rerender="FormNew,Forms" status="status" oncomplete="toggleMeasuresEdit('1','0Fb36000000H8iHCAS','0Fc360000010Yy6CAE',event);"/>
        
        <apex:actionFunction name="selectopp" rerender="OppselectPopup"/>
        <apex:actionFunction name="ActDimension" action="{!ReportList}" rerender="OppselectPopup" status="status" oncomplete="NewDimPop()"/>
        <apex:actionFunction name="ActDateField" action="{!DateFieldMethod}" rerender="OppselectPopup" status="status" oncomplete="NewDatePop()"/>
        <apex:actionFunction name="ActMeasures" action="{!MeasureMethod}" rerender="OppselectPopup,OppsetMeasures" status="status"/>
        <apex:actionFunction name="ActFilters" action="{!FilterMethod}" rerender="OppselectPopup,OppsetFilters" status="status"  oncomplete="filterPopUpModel();"/>
        <apex:actionFunction name="refreshSelected"  rerender="MyForm,Forms,NewForms" action="{!Previous}" status="status" oncomplete="filterPopUpModeltwo()"/>   
        <apex:actionFunction name="AddFilter"  rerender="MyForm,Forms" action="{!AddFilter}" status="status"/>
        <apex:actionFunction name="RemoveFilters"  rerender="Forms" action="{!RemoveFilters}" status="status" oncomplete="functionsNew();"/>
        <apex:actionFunction name="AddFilterLogic"  rerender="NewIdsq,NewIdsqEdit" action="{!AddFilterLogic}" status="status"/>
        <input type="hidden" Name="AddFilterLogicValue" id="AddFilterLogicValue" /> 
        
        <input type="hidden" id="DeleteKPI" name="DeleteKPI"/>
         <input type="hidden" id="Menuitemsval" name="Menuitemsval"/>
        <input type="hidden" id="DeleteFil" name="DeleteFil" />
        <apex:actionFunction name="RemoveKPIS"  rerender="myForm" action="{!RemoveKPIS}" oncomplete="funCalTab()" status="status"/>
        
         <apex:actionFunction name="EditLabelClass" action="{!EditLabelClass}" rerender="OppEditPopup" status="status" oncomplete="NewMeaslabel()"/>
         <apex:actionFunction name="EditDimClass" action="{!EditDimClass}" rerender="OppEditPopup" status="status" oncomplete="NewMeaslabel()"/>
         <apex:actionFunction name="EditMeasClass" action="{!MeasLabelClass}" rerender="OppEditPopup" status="status" oncomplete="NewMeaslabel()"/>
         <apex:actionFunction name="AddFilterNew" action="{!AddFilterNew}" rerender="NewIdsq" status="status"/>
         <apex:actionFunction name="updateFilterNew" action="{!updateFilterNew}" rerender="NewIdsqEdit" status="status" />
         <apex:actionFunction name="NewDimensionClass"  rerender="DimRecords" status="status" />
         <apex:actionFunction name="ConnectSfdc" action="{!ConnectSfdc}" rerender="purId" status="status" />
                         <input type="hidden" id="getProductName" name="getProductName" />
                         <apex:actionFunction name="Cancelclose" action="{!Cancelclose}"  rerender="MyForm,Forms" status="status" />
                         <apex:actionFunction name="ErrorMethod" action="{!ErrorMethod}"  rerender="MessageId" status="status" oncomplete="showErrorMessage()"/>
        </div>
             </apex:outputpanel>
                </apex:outputpanel>

                <script>
                
                function showPopupHeader() {
                    var x = document.getElementById("popupHeader");
                        x.style.display = "block";
                }
                function hidePopupHeader() {
                    var x = document.getElementById("popupHeader");
                        x.style.display = "none";
                }
                var Geograpgh= '';
                var Geograpghs;
                var timeoutId;
                function OpenBargraphpopup(vals,valss,evl){
                    console.log(evl.pageY);
                    var pageY=evl.pageY;
                    if (!timeoutId) { 
                         timeoutId = setTimeout(function(){
                             //alert("pageY"+ pageY);
                             $("#myPopup").css('top',pageY);  
                             $("#myPopup").toggle();
                            
                            timeoutId = null;
                            Geograpgh = vals;
                            Geograpghs = valss
                            //alert('data '+data);
                            data = [];
                            //   alert('data2 '+data);
                                
                                  data = data.sort(function (a, b) {
                                                    return d3.ascending(a.value, b.value);
                                                })
                                                
                               // alert(document.getElementById("graphic").innerHTML);
                                document.getElementById("graphic").innerHTML = "";
                                        //set up svg using margin conventions - we'll need plenty of room on the left for labels
                                       
                                 var popup = document.getElementById('myPopup');
                                popup.classList.toggle("show");
                               // document.getElementById("ShowDim").style.overflow = "auto";
                               // document.getElementById("CHV"+vals).style.display = "none";
                                
                             angular.element(document.getElementById('anguController')).scope().onfiltersearchRecordsGraph();
                            
                            
                            return true;
                            
                         }, 500);
                    }
                } 
                
                function TimeVal(vals,valss){
                     if (timeoutId) {
                            window.clearTimeout(timeoutId);
                            timeoutId = null;
                          //document.getElementById("ShowDim").style.overflow = "hidden";
                            document.getElementById("graphic").innerHTML = "";
                            var popup = document.getElementById('myPopup');
                            popup.classList.remove("show");
                            x.style.display = "none";  
                        }
                }
                
            function myFunction() {
              var input, filter, table, tr, td, i;
              input = document.getElementById("myInput");
              filter = input.value.toUpperCase();
              table = document.getElementById("myTable");
              tr = table.getElementsByTagName("tr");
              for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                  if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                  } else {
                    tr[i].style.display = "none";
                  }
                }       
              }
            }
            
            function functionsNew(){
                $("#FilterbyItmes ul").html("");
            }
    </script>  
     <script>   
               function filterPopUpModeltwo(){
                    $('#MenuItemsEdit li').appendTo($('#MenuItems1 ul'));
                   filterPopUpModel();
                   
                    var itemsrec = 0;
                        if($("#MenuItems1 li").length != undefined ){
                            for(var i=1;i<= $("#MenuItems1 li").length;i++){
                                 itemsrec = i;
                        }
                    }
                    if(itemsrec == 0 ){
                        var divs = document.getElementById("paddingIds");
                        divs.style.padding = "0px";
                        divs.style.border = "0px solid white";
                    }
                    else{
                        var divs = document.getElementById("paddingIds");
                        divs.style.padding = "1px";
                        divs.style.border = "1px solid white";
                    }
                    toggleMeasuresEdit('1','0Fb36000000H8iHCAS','0Fc360000010Yy6CAE',event);  
                 
                   
                   
               }     
               function DimensionNmes(btn) {
                   var property = document.getElementById(btn);
                       if (property.className !== 'toggled') {
                       document.getElementById('RowValues').value = '1';                            
                       }
                       else {                                    
                        document.getElementById('RowValues').value = '0';
                       }
              }
                
            </script>
            
            <script>
                function btnColor(btn, color,Row,Data) {
                    document.getElementById('RowNumbers').value = Row;
                            document.getElementById('Dataset').value = Data;
                            document.getElementById('Count').value = 'Count';
                            var property = document.getElementById(btn);
                                if (property.className !== 'toggled') {
                                   
                                   property.style.backgroundColor=color;
                                    property.style.color="white";
                                    property.className = 'toggled'
                        document.getElementById('Rowtrue').value = 'true';
                                }
                                else {
                                    
                                    property.style.backgroundColor = "White";
                                    property.style.color = "#0070d2";
                                    property.className = '';
                                    
                          document.getElementById('Rowtrue').value = 'false';
                                }
                                 DateNames();
                 }
                
            </script>
            <script>
                function btnColorCount(btn, color,Row,Data) {
                                 document.getElementById('RowNumbers').value = Row;
                                document.getElementById('Dataset').value = Data;
                                document.getElementById('Count').value = 'Count';
                                var property = document.getElementById(btn);
                                    if (property.className !== 'toggled') {
                                       property.style.backgroundColor = "White";
                                        property.style.color = "#0070d2";
                                      
                                        property.className = 'toggled'
                                        document.getElementById('Rowtrue').value = 'false';
                                    }
                                    else {
                                        
                                         property.style.backgroundColor="#0070d2";
                                        property.style.color="white";
                                        property.className = '';
                                        
                                          document.getElementById('Rowtrue').value = 'true';
                                    }
                                     DateNames();
                 }
                
            </script>
                <script>       
                function btnColor1(btn, color,Rows,Datas,Sums) {
                                document.getElementById('SUM').value = Sums;
                                document.getElementById('SUMName').value = Datas;
                                document.getElementById('RowNumbers').value =Rows;
                                document.getElementById('Count').value = 'Count';
                                var property = document.getElementById(btn);
                                    if (property.className !== 'toggled') {
                                       
                                        property.style.backgroundColor=color;
                                        property.style.color="white";
                                        property.className = 'toggled'
                                         document.getElementById('Rowsumtrue').value = 'false';
                                        
                                    }
                                    else {
                                       
                                        property.style.backgroundColor = "White";
                                        property.style.color = "#0070d2";
                                        property.className = '';
                                        
                                          document.getElementById('Rowsumtrue').value = 'true';
                                         
                                    }
                                     DateNames();
                 }
                
            </script>
                <script>       
                function btnColorSum(btn, color,Rows,Datas,Sums) {
                                 
                                  document.getElementById('SUM').value = Sums;
                                document.getElementById('SUMName').value = Datas;
                                document.getElementById('RowNumbers').value =Rows;
                                document.getElementById('Count').value = 'Count';
                                var property = document.getElementById(btn);
                                    if (property.className !== 'toggled') {
                                        property.style.backgroundColor = "white";
                                        property.style.color = "#0070d2";
                                        property.className = 'toggled'
                                        
                                          document.getElementById('Rowsumtrue').value = 'true';
                                        
                                        
                                    }
                                    else {
                                       property.style.backgroundColor="#0070d2";
                                        property.style.color="white";
                                        property.className = ''
                                         document.getElementById('Rowsumtrue').value = 'false';
                                       
                                         
                                    }
                                     DateNames();
                 }
                
            </script>
                <script>
                function btnColor2(btn, color,Rows,Datas,Sums) {
                                 
                                document.getElementById('DimenCount').value = 'count';
                                document.getElementById('DimenName').value =Datas;
                                document.getElementById('RowNumbers').value = Rows;
                                var property = document.getElementById(btn);
                                    if (property.className !== 'toggled') {
                                    
                                        property.style.backgroundColor=color;
                                        property.style.color="white";
                                        property.className = 'toggled'
                                         document.getElementById('RowDimtrue').value = 'true';
                                         
                                    }
                                    else {
                                        
                                        property.style.backgroundColor = "White";
                                        property.style.color = "#0070d2";
                                        property.className = '';
                                        
                                          document.getElementById('RowDimtrue').value = 'false';
                                          
                                    }
                                     DateNames();
                 }
                
            </script>
                <script>
                function btnColorDim(btn, color,Rows,Datas,Sums) {
                    document.getElementById('DimenCount').value = 'count';
                    document.getElementById('DimenName').value =Datas;
                    document.getElementById('RowNumbers').value = Rows;
                    var property = document.getElementById(btn);
                        if (property.className !== 'toggled') {
                        
                            property.style.backgroundColor = "White";
                            property.style.color = "#0070d2";
                            property.className = 'toggled'
                            document.getElementById('RowDimtrue').value = 'false';
                        }
                        else {
                            property.style.backgroundColor=color;
                            property.style.color="white";
                            property.className = '';
                            document.getElementById('RowDimtrue').value = 'true';
                        }
                         DateNames();
                 }
                
            </script>
            <script>
           
             function validatefunction(Names){
                            var KPINameUI = document.getElementById('inputids').value;

                             if(KPINameUI != ''){  
                                document.getElementById('hiddensection').value= KPINameUI;
                                var MeasureRec = $("#MenuItems1 ul").html();
                                
                            //    document.getElementById('boxvalue').value = boxid;
                                document.getElementById("error1").innerHTML = "";
                                if(Names == 'date'){
                                    document.getElementById('Menuitemsval').value= MeasureRec;
                                 editdatelabel(); 
                                }
                                if(Names == 'dimension'){
                                    document.getElementById('Menuitemsval').value= MeasureRec;
                                    editdimlabel(); 
                                }
                                if(Names == 'measure'){
                                    editmeaslabel(); 
                                }
                             }
                            else{
                                document.getElementById("error1").innerHTML = "Error: You must enter a value";
                            }
                        }
             
            
             
            </script>
                
            
            
            
              <script>     
        function openGeneratePopup(){
            var MeasureRec = $("#MenuItems1 ul").html();
            //alert($("#MenuItems1 li").length);
           if(MeasureRec != undefined && $("#MenuItems1 li").length > 0){
               document.getElementById('Menuitemsval').value= MeasureRec;
                ErrorMethod();
           }
           else{
               document.getElementById('DashboardDBId').style.display = 'block';
           }
        }

        function closeGeneratePopup(){      
            document.getElementById("GeneratePopup").className = document.getElementById("GeneratePopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
            
            return false;
        }  
        
        function openGenerateLabelPopup(){
            document.getElementById("tstpopupLabel").className = document.getElementById("tstpopupLabel").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )
            
            return true;
        }

        function closeGenerateLabelPopup(){      
            document.getElementById("tstpopupLabel").className = document.getElementById("tstpopupLabel").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
            
            return false;
        }  
        
         function openSingleTemplatePopup(){
            document.getElementById("tstpopupTemplate").className = document.getElementById("tstpopupTemplate").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )
            
            return true;
        }

        function closeSingleTemplatePopup(){      
            document.getElementById("tstpopupTemplate").className = document.getElementById("tstpopupTemplate").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
            
            return false;
        }  
        
        

        function saveDashboard(){
            var KPISection = document.getElementById('DashboardName').value;  
            var KPDesc = document.getElementById('DashboardDesc').value;
            var MeasureRec = $("#MenuItems1 ul").html();
           if(KPISection != '' ){   
                document.getElementById('hiddenDashboardName').value= KPISection;
                document.getElementById('hiddenDashboardDesc').value= KPDesc;
                document.getElementById('Menuitemsval').value= MeasureRec;
                document.getElementById("errordash").innerHTML = "";
                //boxOveriew();
                 openpurchaseDB('01t41000004IXkgAAG');
            } 
            else{
                if(KPISection == ''){
                document.getElementById("errordash").innerHTML = "Error: You must enter a value";
                }
                
            }
                          
        } 
        
        function singleDashboard(){
            var KPISection = document.getElementById('SingleName').value;
            var MeasureRec = $("#MenuItems1 ul").html();
            if(KPISection != ''){   
                document.getElementById('hiddenSingleName').value= KPISection;          
                document.getElementById("errorsingle").innerHTML = "";  
                document.getElementById('Menuitemsval').value= MeasureRec;
                Save();
            }
            else{
                if(KPISection == ''){
                document.getElementById("errorsingle").innerHTML = "Error: You must enter a value";
                }               
            }
                          
        } 
        </script>
        <script type="text/javascript">
       
        
        function funCalTab(){
        var v = document.getElementById('hiddenKPI').value;
        document.getElementById(v).click();
        }

    function confirmKPIDelete(RowNumber,RemoveFIlter,dataset) {
       if(confirm('Do you want to proceed?') ) {
         document.getElementById('DeleteKPI').value = RowNumber;
         document.getElementById('DeleteFil').value = RemoveFIlter;
         RemoveKPIS();
    }
    returnfalse;
    }
    
              
                function openLabelPopup(name,value){ 
                    document.getElementById("tstpopupLabel").className =
                    document.getElementById("tstpopupLabel").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )  
                    
                    document.getElementById("error1").innerHTML = "";


                    if(value == 'DateFields'){ 
                       // document.getElementById("inputids").value = name; 
                        document.getElementById("EditTopic").value = name; 

                        EditLabelClass();
                    } 
                    if(value == 'Dimensions'){
                      //  document.getElementById("inputids").value = name; 
                        document.getElementById("EditDim").value = name; 
                        EditDimClass();
                    }
                    if(value == 'Measures'){
                        var MeasureRec = $("#MenuItems1 ul").html();
                        var delKey=$(name).closest('li').find('.editSelected').val();   
                      delKey = delKey.replace('wqstn','');
                        document.getElementById('Menuitemsval').value= MeasureRec;
                        document.getElementById("MeasTopic").value = delKey;
                     //   document.getElementById("inputids").value = delKey; 
                        EditMeasClass();
                    }
                              
                    return true;
                } 
                
               
                function openSelectPopup(value){
                    document.getElementById('{!$Component.SelectedButtonValue}').value = value;
                    document.getElementById("SelectPopup").className =
                    document.getElementById("SelectPopup").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )               
                    //selectopp();
                    
                    if(value == 'Dimensions'){
                     ActDimension();
                     //showDimension();
                    }
                    if(value == 'Datefield'){
                    ActDateField();
                    //showDates();
                    }  
                    if(value == 'Measures'){
                    ActMeasures();
                    }  
                    if(value == 'Filters'){
                      
                    ActFilters();
                    }                                                         
                    
                    return true;                
                }
                function closeSelectPopup(){
                    document.getElementById("SelectPopup").className =
                    document.getElementById("SelectPopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )               
                    var MeasureRec = $("#MenuItems1 ul").html();
                    
                    document.getElementById('Menuitemsval').value= MeasureRec;
                    refreshSelected();
                    
                    
                   <!--@himanshu //Hide PopUp --->
                   filterPopUpModel();
                    
                    return true;                
                }
                
                function closepop(){
                   var MeasureRec = $("#MenuItems1 ul").html();
                    
                    document.getElementById('Menuitemsval').value= MeasureRec;
                    refreshSelected();
                   filterPopUpModel();
                    
                                
                }
                
                function NewSelectPopup(){               
                   var Filter = document.getElementById('FilterNames').value;
                   var Slection =   $("#FilterbyItmes ul").html();
                   
                   if(Filter != '' && Slection != ''){
                        document.getElementById("FilterNamesandVal").value = Slection; 
                        
                        document.getElementById("FilterNamesvalues").value = Filter; 
                         document.getElementById("error12").innerHTML = ""; 
                         document.getElementById("errorCond").innerHTML = ""; 
                        AddFilterNew();
                          
                        return true;
                   }
                   else{
                        if(Filter == ''){
                            document.getElementById("error12").innerHTML = "Error: You Must Enter Value";
                        }else{
                            document.getElementById("error12").innerHTML = ""; 
                        }
                        if(Slection == ''){
                            document.getElementById("errorCond").innerHTML = "Error: You Must Enter At Least one Filter"; 
                        }else{
                         document.getElementById("errorCond").innerHTML = "";
                }
                   }
                                    
                }
                
                 function NewSelectPopupEdit(){                      
                    var Filter = document.getElementById('FilterNames').value;
                   var Slection =   $("#FilterbyItmes ul").html();
                
                     if(Filter != '' && Slection != '' ){
                    document.getElementById("FilterNamesandVal").value = Slection; 
                    document.getElementById("FilterNamesvalues").value = Filter; 
                      document.getElementById("error12").innerHTML = ""; 
                         document.getElementById("errorCond").innerHTML = ""; 
                    updateFilterNew();
                                     
                    
                    return true; 
                     }
                     else{
                         if(Filter == ''){
                            document.getElementById("error12").innerHTML = "Error: You Must Enter Value";
                        }else{
                            document.getElementById("error12").innerHTML = ""; 
                        }
                        if(Slection == ''){
                            document.getElementById("errorCond").innerHTML = "Error: You Must Enter At Least one Filter"; 
                        }else{
                         document.getElementById("errorCond").innerHTML = "";
                }
                     }
                }
                
               
        </script>   
         <Script>
 function confirmPayment(RowNumber,RemoveFIlter,rowcount) {
         if(confirm('Do you want to proceed?') ) {
         document.getElementById('RowNumberDel').value = RowNumber;
         document.getElementById('RemoveFilterDel').value = RemoveFIlter;
         document.getElementById('hidrowcount').value = rowcount;
         RemoveFilters();
    }
    returnfalse;
    }
  function openEditPopup(RowNumber,AddFilName,rowcount){
     document.getElementById('{!$Component.SelectedButtonValue}').value = "Filters";
    document.getElementById('RowNumberCount').value = rowcount;
    document.getElementById('FilterEdit').value = 'FilterEdit';
    
    document.getElementById('RowNumberFilter').value = RowNumber;
  
    document.getElementById('AddFilName').value = AddFilName;
 
    //document.getElementById('FilterNames').value = AddFilName;
     
    document.getElementById("SelectPopup").className =
    document.getElementById("SelectPopup").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )  

    ActEditFilters();  
     
     
    return true;                
}

function newFilterClass(){
    var Values =  document.getElementById('AddFilName').value;
    document.getElementById('FilterNames').value = Values;
}

</Script>
<script language="Javascript">
            var activeRow = 0;
            var activeRowDate = 0;
            var activeRowDim = 0; 
            function setActiveRow(el,Rows,values) {
                document.getElementById('Downcount').value = Rows;
                document.getElementById('Downvalues').value = values;
                var rows = document.getElementById('movingTable').rows;
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i] == el) {
                        rows[i].style.backgroundColor = "lightgrey";
                        activeRow = i;
                    } else {
                        rows[i].style.backgroundColor = "white";
                    }
                }
            }
            
           
            function setActiveRowDim(el,Rows,values) {
                document.getElementById('DowncountDim').value = Rows;
                document.getElementById('DownvaluesDim').value = values;
                var rows = document.getElementById('movingTableDim').rows;
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i] == el) {
                        rows[i].style.backgroundColor = "lightgrey";
                        activeRow = i;
                    } else {
                        rows[i].style.backgroundColor = "white";
                    }
                }
            }

           

        </script>
                        
          

               
                
                
     

    
<apex:outputpanel id="NewForms">
         <!-- Is Process Spinner -->
            <div class="pagespinner" id="IsProcessSpinner" style="display:none">
            <div class="loading-analytics-container" data-reactid=".3">
                <svg class="loading-analytics" data-reactid=".3.0" viewBox="-255 347 100 100" x="0px" y="0px">
                    <path class="bar-1" d="M-207.1,398.7c-1.7-1.9-2.7-4.5-2.6-7.3c0.3-5.1,4.4-9.2,9.5-9.5c2.8-0.1,5.4,0.9,7.3,2.6c0.2,0.2,0.5,0.2,0.7,0l2.8-2.8 c0.2-0.2,0.2-0.5,0-0.7c-2.8-2.6-6.6-4.2-10.7-4c-7.9,0.3-14.3,6.6-14.5,14.5c-0.1,4.1,1.4,7.9,4,10.7c0.2,0.2,0.5,0.2,0.7,0 l2.8-2.8C-206.9,399.2-206.9,398.9-207.1,398.7z" data-reactid=".3.0.0"></path>
                    <path class="bar-2" d="M-200.2,372c-11.3,0.3-20.2,9.7-19.6,21.1c0.6,10.4,9.2,18.7,19.6,18.9c5.5,0.1,10.5-2.1,14.2-5.6c0.2-0.2,0.5-0.2,0.7,0 l2.9,2.9c0.2,0.2,0.2,0.5,0,0.7c-4.6,4.4-10.9,7.1-17.8,7c-13.4-0.3-24.3-11.2-24.5-24.6c-0.2-13.8,10.8-25.1,24.5-25.4 c0.3,0,0.5,0.2,0.5,0.5v4C-199.7,371.8-199.9,372-200.2,372z" data-reactid=".3.0.1"></path>
                    <path class="bar-3" d="M-178.9,413.5c-5.3,5.1-12.4,8.3-20.3,8.5c-16.4,0.3-30.2-12.9-30.6-29.3c-0.1-2.8,0.3-5.5,0.9-8c0.1-0.3-0.1-0.5-0.4-0.6 l-3.9-1c-0.3-0.1-0.5,0.1-0.6,0.4c-0.7,2.9-1.1,6-1.1,9.1c0.3,19.1,16,34.5,35.1,34.5c9.5,0,18.1-3.8,24.3-10c0.2-0.2,0.2-0.5,0-0.7 l-2.8-2.8C-178.5,413.4-178.7,413.3-178.9,413.5z" data-reactid=".3.0.2"></path>
                </svg>
            </div>
        </div>
 <!--@@ Himanshu tak -->
 <script>
      var addFilterTO={}; 
       var updateRef;
       var selectedarr={};
       var selectedItemscount=0;
       var selectItems=''; 
       var fieldapi='';
       var folderId='{!CurrentVersionId}';
       var dataSetId='{!SelectKPIValue}';
       var selurlid='{!CurrentVersionUrl}';
       var dataSetLayout='';
       var DimensionsApis={}  ;
       var datesApis={}  ;
       
       
            var selectedElements={};
             var ref;
             var isUpdate=false;
             var checkPanelLoad={};
             var selectedPanel;

       var sid = '{!$Api.Session_ID}';
       var instance_url = '{!$Site.BaseUrl}';
        var body;
        $('#MenuItemsEdit li').appendTo($('#MenuItems1 ul'));
        var app = angular.module('demoajax', ['ngMaterial']);
        app.controller('Demo', function($scope,$http) {
            
             //Show Spinner
             $("#IsProcessSpinner").show();
             
                $http({
                    url: "/services/data/v39.0/wave/datasets",
                    method: "GET",
                    headers: {
                       "Authorization": "OAuth " + sid
                    }
                })
                .then(function(response) {
                  
                    
                    $(".dataSetLayout").html(dataSetLayout);
                   
                    //Hide Spinner
                    $("#IsProcessSpinner").hide();
                }, 
                function(response) { 
                      // alert("failed");
                });
                
                
              $scope.onGetRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                  
                 var MeasuresLayout='';
                 var Measures=[];
                 var dates=[];
                 var datesLayout='';
                 var DimensionsLayout='';
                 var DimensionsLayoutone='';
                 var Dimensions=[];
                 var MeasuresApi={};
                 var DimensionsApi={};
                 var datesApi={}
                  var adddimensTO={};
                 var adddimeasTO ={};
                 var adddatessTO ={};
                 var Measorg = {};
                 var Dimensionsorgs= {};
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
                            
                           for(var i=0;i<response.data.measures.length;i++){
                               // if(response.data.measures[i]['description']!=undefined && response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                    Measorg[response.data.measures[i]['label']]=response.data.measures[i]['origin']; 
                                //}
                                
                            }
                            for(var i=0;i<response.data.dates.length;i++){
                                dates[i]=response.data.dates[i]['alias'];
                                datesApi[response.data.dates[i]['alias']]=response.data.dates[i].fields['epochSecond'];
                               
                                
                            }
                             for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                                Dimensionsorgs[response.data.dimensions[i]['label']]=response.data.dimensions[i]['origin']; 
                                
                            }
                            
                            //Sort Records 
                            Measures.sort();
                            dates.sort();
                            Dimensions.sort();
                              
                             
                            
                             $('#FilterbyItmes li').filter(
                            function(){
                                    var keyFields = $(this).closest('li').find('.fieldapi').val()+$(this).closest('li').find('.selectedfield').val() ;
                                    var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                                    keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                                    adddatessTO[keyFieldss] = keyFieldss; 
                                
                            });
                            
                           
                            //Create Layout  
                            for(var i=0;i<Measures.length;i++){
                                    var keyFieldss = MeasuresApi[Measures[i]]+Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(Measures[i]!=undefined && adddatessTO[keyFieldss] == undefined && Measorg[Measures[i]]!= undefined){
                                      
                                        MeasuresLayout+='<a onclick="filteritemsAll(this)" class="measure" id='+MeasuresApi[Measures[i]]+'>';
                                        MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" />';
                                        MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" />';
                                
                                        MeasuresLayout+='<label data-tooltip-on-truncation="true"  >'+Measures[i]+'</label>';
                                        MeasuresLayout+='<span class="valuesbtn" >';
                                        MeasuresLayout+='<span class="chevronLeftIcon" >';
                                        MeasuresLayout+='<svg ></svg>';
                                        MeasuresLayout+='</span>';
                                        MeasuresLayout+='<b class="chevronLabel" ></b>';
                                        MeasuresLayout+='<svg class="icon" >';
                                        MeasuresLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                        MeasuresLayout+='</svg></span></a>';
                                    }
                                    if(Measures[i]!=undefined && adddatessTO[keyFieldss] != undefined && Measorg[Measures[i]]!= undefined){
                                      
                                        MeasuresLayout+='<a onclick="filteritemsAll(this)" class="measure" id='+MeasuresApi[Measures[i]]+'>';
                                        MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" />';
                                        MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" />';
                                
                                        MeasuresLayout+='<label data-tooltip-on-truncation="true"  >'+Measures[i]+'</label>';
                                        MeasuresLayout+='<span class="valuesbtn" >';
                                        MeasuresLayout+='<span class="chevronLeftIcon" >';
                                        MeasuresLayout+='<svg ></svg>';
                                        MeasuresLayout+='</span>';
                                        MeasuresLayout+='<b class="chevronLabel" ></b>';
                                        MeasuresLayout+='<svg class="icon" >';
                                        MeasuresLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                        MeasuresLayout+='</svg></span></a>';
                                    }
                                    
                               }
                            $(".MeasuresLayout").html(MeasuresLayout);
                            
                            //For Date Fields 
                            for(var i=0;i<dates.length;i++){
                                var keyFieldss = datesApi[dates[i]]+dates[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                if(dates[i]!=undefined && adddatessTO[keyFieldss] == undefined){ 
                                    datesLayout+='<a class="dimension date" onclick="filteritemsAll(this)" id='+datesApi[dates[i]]+'>';
                                    datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.DateLabel}" width="15px" height="10px" />';
                                    datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="15px" height="10px" />';
                              
                                    datesLayout+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayout+='<span class="valuesbtn" >';
                                    datesLayout+='<span class="chevronLeftIcon" >';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#date"></use>';
                                    datesLayout+='</svg>';
                                    datesLayout+='</span>';
                                    datesLayout+='<b class="chevronLabel" >scale</b>';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayout+='</svg></span></a>';
                                }
                                if(dates[i]!=undefined && adddatessTO[keyFieldss] != undefined){ 
                                    datesLayout+='<a class="dimension date" onclick="filteritemsAll(this)" id='+datesApi[dates[i]]+'>';
                                    datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.DateLabel}" width="15px" height="10px" />';
                                    datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="15px" height="10px" />';
                              
                                    datesLayout+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayout+='<span class="valuesbtn" >';
                                    datesLayout+='<span class="chevronLeftIcon" >';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#date"></use>';
                                    datesLayout+='</svg>';
                                    datesLayout+='</span>';
                                    datesLayout+='<b class="chevronLabel" >scale</b>';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayout+='</svg></span></a>';
                                }
                            }      
                            
                            $(".datesLayout").html(datesLayout);
                            
                             //For Dimensions Layout 
                                 
                               
                            for(var i=0;i<Dimensions.length;i++){
                                 var keyFieldss = DimensionsApi[Dimensions[i]] +Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                   
                                if(Dimensions[i]!=undefined && adddatessTO[keyFieldss] == undefined && Dimensionsorgs[Dimensions[i]]!= undefined){ 
                                    DimensionsApi[Dimensions[i]]
                                    DimensionsLayout+='<a onclick="filteritemsAll(this)" onmouseover="OpenBargraphpopup(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" onmouseout="TimeVal(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" class="dimension" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" />';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" />';
                            
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayout+='<span class="valuesbtn" >';
                                    DimensionsLayout+='<span class="chevronLeftIcon" >';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#filter-list"></use>';
                                    DimensionsLayout+='</svg>';
                                    DimensionsLayout+='</span>';
                                    DimensionsLayout+='<b class="chevronLabel" >filter</b>';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';
                                    
                                 }
                                  if(Dimensions[i]!=undefined && adddatessTO[keyFieldss] != undefined && Dimensionsorgs[Dimensions[i]]!= undefined){ 
                                    DimensionsApi[Dimensions[i]]
                                    DimensionsLayout+='<a onclick="filteritemsAll(this)" onmouseover="OpenBargraphpopup(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" onmouseout="TimeVal(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" class="dimension" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" />';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" />';
                            
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayout+='<span class="valuesbtn" >';
                                    DimensionsLayout+='<span class="chevronLeftIcon" >';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#filter-list"></use>';
                                    DimensionsLayout+='</svg>';
                                    DimensionsLayout+='</span>';
                                    DimensionsLayout+='<b class="chevronLabel" >filter</b>';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';
                                    
                                 }
                                   
                                 
                            }     
                           $(".DimensionsLayout").html(DimensionsLayout);  
                           
                           $('.popup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                     
                     $scope.onGetDimRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                 var DimensionsLayout='';
                 var DimensionsLayoutone='';
                 var Dimensions=[]; 
                 var adddimensTO={};
                  var Dimensionsorgs= {};
                        
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
   
                             for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApis[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];  
                                Dimensionsorgs[response.data.dimensions[i]['label']]=response.data.dimensions[i]['origin']; 
                               // alert(response.data.dimensions[i]['origin']);
                            }
                            
                            Dimensions.sort();
                          
                            
                            $('#DimensionsbyItmes li').filter(
                            function(){
                                    var keyFields =  $(this).closest('li').find('.selectedfield').val();
                                    var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                                    keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                                    adddimensTO[keyFieldss] = keyFieldss; 
                                
                            }); 
                             //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var Dimes = DimensionsApis[Dimensions[i]].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                if(Dimensions[i]!=undefined && adddimensTO[Dimes]==undefined && Dimensionsorgs[Dimensions[i]]!= undefined){ 
                                 //   alert('if' + response.data.dimensions[i]['origin']);
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitems(this)" onmouseover="OpenBargraphpopup(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" onmouseout="TimeVal(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)"  class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blo'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="dis'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    
                                    DimensionsLayoutone+='</a>';                                   
                                 
                                } 
                                if(Dimensions[i]!=undefined && adddimensTO[Dimes]!=undefined && Dimensionsorgs[Dimensions[i]]!= undefined){ 
                                   // alert('else' + response.data.dimensions[i]['origin']);
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitems(this)" onmouseover="OpenBargraphpopup(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" onmouseout="TimeVal(\''+DimensionsApis[Dimensions[i]]+'\','+i+',event)" class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blo'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="dis'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                   
                                    DimensionsLayoutone+=' </a>';                                   
                                 
                                } 
                            }
                           $("#DimensionsLayoutone").html(DimensionsLayoutone); 
                           
                            var itemsrec;
                            for(var i=1;i<= $("#DimensionsbyItmes li").length;i++){
                                 itemsrec = i;
                                 $("#NumberIds").html(itemsrec);
                                 
                            }
                           
                         //  $('.OppselectPopup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                     
            $scope.onGetDateRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                
                 var dates=[];
                 var datesLayoutone=''; 
                 var adddatesTo ={};
                 
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
                          
                            for(var i=0;i<response.data.dates.length;i++){
                                dates[i]=response.data.dates[i]['alias'];
                                datesApis[response.data.dates[i]['alias']]=response.data.dates[i].fields['epochSecond'];             
                            }
                            
                            dates.sort();  
                             
                                    $('#DatesByItmesval li').filter(
                                    function(){
                                    var keyFields = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','');
                                    
                                    var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                                    keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                                    adddatesTo[keyFieldss] = keyFieldss; 
                                
                            }); 
                            //For Date Fields 
                            for(var i=0;i<dates.length;i++){
                                var Dimes = datesApis[dates[i]].replace('_sec_epoch','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                   
                                if(dates[i]!=undefined && adddatesTo[Dimes] == undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitems(this)" id='+datesApis[dates[i]]+'>';
                                    datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="block'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="date'+Dimes+'"/>';
                                  
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                     datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                                
                                if(dates[i]!=undefined && adddatesTo[Dimes] != undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitems(this)" id='+datesApis[dates[i]]+'>';
                                    datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="block'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="date'+Dimes+'"/>';
                                  
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                     datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                            }                            
                            $(".datesLayoutoneone").html(datesLayoutone);  
                            
                                var itemsrec;
                                for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                                     itemsrec = i;
                                     $("#NumberdateIds").html(itemsrec);
                                     
                            }
                           
                           $('.popup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                     
                     
                     
                $scope.onGetMeasureRecords= function() {
                    
                    //delete checkPanelLoad[selectedPanel];
                    if(checkPanelLoad[selectedPanel]==undefined){
                        checkPanelLoad[selectedPanel]=selectedPanel;    
                         selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                        $http({
                            url: selurlid+'/xmds/main',
                            method: "GET",
                            headers: {   
                            "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {  
                            var MeasuresApi={};
                            var Measures=[];              
                            var Dimensions=[];
                            var DimensionsApi={};
                            var DimensionsLayout='';
                            var MeasuresLayout='';
                            var InputlayoutId = '';
                            var adddimTo = {};
                            var addmesTo = {};
                             var MeasInputlayoutId = '';
                             var Measorg = {};
                             var Dimensionsorgs= {};
                               
                             var DimInputlayoutId = '';
                             var CountInputlayoutId = '';
                            for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                                Dimensionsorgs[response.data.dimensions[i]['label']]=response.data.dimensions[i]['origin']; 
                            }
                            //Sort Records 
                            Dimensions.sort();
                            
                            //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var Dimse = Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                                if(Dimensions[i]!=undefined && Dimensionsorgs[Dimensions[i]]!= undefined){ 
                                    DimensionsLayout+='<a class="dimension" onclick="filteritems(this,'+selectedPanel+')" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="NewAll'+Dimse+'"/>';
                                     DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals'+Dimse+'"/>';
                                    
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Dimensions[i]+'</label><span ></span></a>';
                                }   
                               
                            } 
                            $("#DimensionsPanelLayout"+selectedPanel).html(DimensionsLayout);
                           
                           
                            //***************************************End DimensionsPanelLayout**************
                           
                            //Measures Layout
                            for(var i=0;i<response.data.measures.length;i++){
                                if(response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                    Measorg[response.data.measures[i]['label']]=response.data.measures[i]['origin']; 
                                }  
                             }
                             
                             //Sort Measures Records 
                                Measures.sort();
                                
                             //Create Layout   Measures
                             
                             
                             
                             //Default 
                                    
                               MeasuresLayout+='<a class="measureRows measure" onclick="filteritems(this,'+selectedPanel+')" id="Rows">';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAllRows"/>';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="AnalsRows" />';
                                            
                               MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >Rows</label><span ></span></a>';
                              
                                
                                for(var i=0;i<Measures.length;i++){
                                    var Dimse = Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                                        if(Measures[i]!=undefined && Measorg[Measures[i]]!= undefined){
                                            MeasuresLayout+='<a class="measureCount  measure" onclick="filteritems(this,'+selectedPanel+')" id='+MeasuresApi[Measures[i]]+'>';
                                            MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll'+Dimse+'"/>';
                                             MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals'+Dimse+'" />';
                                            MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Measures[i]+'</label><span ></span></a>';
                                       
                                }  
                                }
                                 
                            
                                
                               $("#MeasuresPanelLayout"+selectedPanel).html(MeasuresLayout); 
     
                                         for(var i=0;i<Measures.length;i++){
                                            MeasInputlayoutId +=  '<option value="'+MeasuresApi[Measures[i]]+'">'+MeasuresApi[Measures[i]]+'</option>';
                                         }
                                      
                                        
                             $("#MeasInputlayoutIds").html(MeasInputlayoutId); 
                                     
                                        for(var i=0;i<Measures.length;i++){
                                            DimInputlayoutId +=  '<option value="'+MeasuresApi[Measures[i]]+'">'+MeasuresApi[Measures[i]]+'</option>';
                                         }
                                         for(var i=0;i<Dimensions.length;i++){
                                            DimInputlayoutId +=  '<option value="'+DimensionsApi[Dimensions[i]]+'">'+DimensionsApi[Dimensions[i]]+'</option>';
                                         }
                             $("#DimInputlayoutIds").html(DimInputlayoutId); 
                             
                             
                                        CountInputlayoutId +=  '<option value="Rows">Rows</option>';
                                       
                            $("#CountInputlayoutIds").html(CountInputlayoutId); 
                            
                                        InputlayoutId +='<select id="NewId" onchange="NewFunctionClass()">';
                                        InputlayoutId +=  '<option value="count">count</option>';
                                        InputlayoutId +=  '<option value="sum">sum</option>';
                                        InputlayoutId +=  '<option value="avg">avg</option>';
                                        InputlayoutId +=  '<option value="max">max</option>';
                                        InputlayoutId +=  '<option value="min">min</option>';
                                        InputlayoutId +=  '<option value="unique">unique</option>';
                                        InputlayoutId +=  '<option value="median">median</option>';
                                        InputlayoutId +=  '<option value="last">last</option>';
                                        InputlayoutId +=  '<option value="stddev">stddev</option>';
                                        InputlayoutId += '<option value="stddevp">stddevp</option>';
                                        InputlayoutId += '<option value="var">var</option>';
                                        InputlayoutId += '<option value="varp">varp</option>';
                                        InputlayoutId +='</select>';
                                        InputlayoutId +='<select id="CountInputlayoutIds" style="margin: 2px;width:60%" onchange="FunctionValues()">';
                                        InputlayoutId +='<option value="">--None--</option>';
                                        InputlayoutId +='<option value="Rows">Rows</option>';
                                        InputlayoutId +='</select>';
                                        InputlayoutId +='<select id="MeasInputlayoutIds" style="margin: 2px;width:60%" onchange="FunctionValues()">';
                                        InputlayoutId +='<option value="">--None--</option>';
                                        for(var i=0;i<Measures.length;i++){
                                            InputlayoutId +='<option value="'+MeasuresApi[Measures[i]]+'">'+MeasuresApi[Measures[i]]+'</option>';
                                        }
                                        InputlayoutId +='</select>';
                                        InputlayoutId +='<select id="DimInputlayoutIds" style="margin: 2px;width:60%"onchange="FunctionValues()">';
                                        InputlayoutId +='<option value="">--None--</option>';
                                        for(var i=0;i<Measures.length;i++){
                                            InputlayoutId +=  '<option value="'+MeasuresApi[Measures[i]]+'">'+MeasuresApi[Measures[i]]+'</option>';
                                         }
                                         for(var i=0;i<Dimensions.length;i++){
                                            InputlayoutId +=  '<option value="'+DimensionsApi[Dimensions[i]]+'">'+DimensionsApi[Dimensions[i]]+'</option>';
                                         }
                                        InputlayoutId +='</select>';
                                        InputlayoutId += '<textarea rows="6" cols="29" id="InputlayoutId" style="margin-bottom:3px"/>';
                                        InputlayoutId += '<button type="button" Class="slds-button slds-button--neutral" onclick="onmeasureClose12()">Cancel</button><button type="button" class="slds-button slds-button--neutral slds-button--brand" onclick="filteritems(this,'+selectedPanel+')">Apply</button>';
                                       
                             $("#InputPanelLayout"+selectedPanel).html(InputlayoutId);
                             
                              //  $("#CountInputlayoutIds").show();
                              //  $("#MeasInputlayoutIds").hide();
                              //  $("#DimInputlayoutIds").hide();
                             //Hide Process Spinner 
                              $("#IsProcessSpinner"+selectedPanel).css('display','none');
                              
                               $("#MeasuresPanelLayout"+selectedPanel).prev().show();
                                $("#MeasuresPanelLayout"+selectedPanel).show();
                                $("#DimensionsPanelLayout"+selectedPanel).hide();
                                $("#DimensionsPanelLayout"+selectedPanel).prev().hide();
                                $("#InputPanelLayout"+selectedPanel).hide();
                                $("#InputPanelLayout"+selectedPanel).prev().hide();
                                
                                 $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                                $('#MenuItems1 li').filter(
                                function(){
                                     var key=selectedPanel+$(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val(); 
                                    selectedElements[key] = $(this).closest('li').find('.parentSelected').val();  
                                      
                                }
                                );
                                    
                                selectedItemsFills('count');
                                 $("#DimensionsPanelLayout"+selectedPanel).prev().hide();
                                $("#DimensionsPanelLayout"+selectedPanel).hide();

                        },
                        function(response) { 
                           //  alert("failed");
                        }); 
                     }else{
                          //Hide Process Spinner 
                                $("#IsProcessSpinner"+selectedPanel).css('display','none');
                                $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                          $("#DimensionsPanelLayout"+selectedPanel).prev().hide();      
                          $("#DimensionsPanelLayout"+selectedPanel).hide();  
                     }       
                }     
                
                
                 $scope.onGetMeasureRecordsedit= function() {
                    //delete checkPanelLoad[selectedPanel];   
                          selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                        $http({
                            url: selurlid+'/xmds/main',
                            method: "GET",
                            headers: {
                            "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {  
                            var MeasuresApi={};
                            var Measures=[];              
                            var Dimensions=[];
                            var DimensionsApi={};
                            var DimensionsLayout='';
                            var MeasuresLayout='';
                            var adddimTo = {};
                            var addmesTo = {};
                            for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                            }
                            //Sort Records 
                            Dimensions.sort();
                            
                            //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var Dimse = Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                                if(Dimensions[i]!=undefined ){ 
                                    DimensionsLayout+='<a class="dimension" onclick="filteritems(this,'+selectedPanel+')" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="NewAll'+Dimse+'"/>';
                                     DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals'+Dimse+'"/>';
                                    
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Dimensions[i]+'</label><span ></span></a>';
                                }   
                               
                            } 
                            $("#DimensionsPanelLayout"+selectedPanel).html(DimensionsLayout);
                           
                            //***************************************End DimensionsPanelLayout**************
                           
                            //Measures Layout
                            for(var i=0;i<response.data.measures.length;i++){
                                if(response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                }  
                             }
                             
                             //Sort Measures Records 
                                Measures.sort();
                                
                             //Create Layout   Measures
                             
                             
                             
                             //Default 
                                    
                               MeasuresLayout+='<a class="measureRows measure" onclick="filteritems(this,'+selectedPanel+')" id="Rows">';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAllRows"/>';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="AnalsRows" />';
                                            
                               MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >Rows</label><span ></span></a>';
                              
                                
                                for(var i=0;i<Measures.length;i++){
                                    var Dimse = Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");;
                                        if(Measures[i]!=undefined ){
                                            MeasuresLayout+='<a class="measureCount  measure" onclick="filteritems(this,'+selectedPanel+')" id='+MeasuresApi[Measures[i]]+'>';
                                            MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll'+Dimse+'"/>';
                                             MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals'+Dimse+'" />';
                                            MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Measures[i]+'</label><span ></span></a>';
                                       
                                }  
                                }
                                
                               $("#MeasuresPanelLayout"+selectedPanel).html(MeasuresLayout);  
                                         
                            
                             //Hide Process Spinner 
                              $("#IsProcessSpinner"+selectedPanel).css('display','none');
                              
                               $("#MeasuresPanelLayout"+selectedPanel).prev().show();
                                $("#MeasuresPanelLayout"+selectedPanel).show();
                                $("#DimensionsPanelLayout"+selectedPanel).hide();
                                $("#DimensionsPanelLayout"+selectedPanel).prev().hide();
                                
                                 $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel"+selectedPanel).find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                                $('#MenuItems1 li').filter(
                                function(){
                                     var key=selectedPanel+$(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val(); 
                                    selectedElements[key] = $(this).closest('li').find('.parentSelected').val();  
                                      
                                }
                                );
                                    
                                selectedItemsFills('count');
                                 $("#DimensionsPanelLayout"+selectedPanel).prev().hide();
                                $("#DimensionsPanelLayout"+selectedPanel).hide();

                        },
                        function(response) { 
                           //  alert("failed");
                        });  
                         
                }               
           
            
                     
                     $scope.onGetFilterRecords= function() {
                         //Show Spinner 
                         $("#IsProcessSpinner").show();
                         if(selectItems=="measure"){
                             //alert('measure');
                              body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = foreach q generate min('"+fieldapi+"') as '_min', max('"+fieldapi+"') as '_max';"};
                               
                             //alert('body' + body);
                         }else if(selectItems=="dimension"){
                              
                              body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                               
                          }else if(selectItems=="date"){
                           body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = foreach q generate min('"+fieldapi+"') as '_min', max('"+fieldapi+"') as '_max';"};
                            
                           
                          
                          } 
                            $http({
                                url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                                
                                if(selectItems=="measure"){
                                  //  alert('vnidjvndk'+ response.data.results.records[0]._min +'  ' +response.data.results.records[0]._max);
                                  $("#minVal").val(response.data.results.records[0]._min);
                                    $("#maxVal").val(response.data.results.records[0]._max);
                                        
                                }else if(selectItems=="dimension"){
                                     $(".Dimensionspopup").hide();
                                    var DimensionsitemsHtml='';
                                    for(var i=0;i<response.data.results.records.length;i++){
                                        DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                        DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';
                                        DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                        DimensionsitemsHtml+='</a>';
                                    }
                                     $(".selnum").html("Show Selected (0)");
                                    $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
                                     $("#DimensionsHtmlItems").html(DimensionsitemsHtml);
                                }else if(selectItems=="date"){
                         
                                    $("#fromDate").val(createDate(response.data.results.records[0]._min));
                                    
                                    $("#toDate").val(createDate(response.data.results.records[0]._max));
                                }
                                
                                //hide Spinner 
                                 $("#IsProcessSpinner").hide();
                            }, 
                            function(response) { 
                                   //alert("failed");
                                   //Show Spinner 
                                   $("#IsProcessSpinner").hide();
                         
                            });
                       } 
                   
                    $scope.onDimensionsUpdate= function() {
                       body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                         
                    $http({
                                url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                               
                                // $(".Dimensionspopup").hide();
                                var DimensionsitemsHtml='';
                                for(var i=0;i<response.data.results.records.length;i++){
                                    DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                    DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';
                                    DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                    DimensionsitemsHtml+='</a>';
                                }
                                $(".selnum").html("Show Selected (0)");
                                $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
                                
                                var arrSelecids={};
                                var selectIds=$(updateRef).parent().find('.selectedIds').val();
                        
                                if(selectIds!=undefined){
                                    selectIds=selectIds.split(',');
                                    for(var i=0;i<selectIds.length;i++){
                                        arrSelecids[selectIds[i]]=selectIds[i];
                                    }
                                   
                                   var arrSelectids={};
                                    for(var i=0;i<selectIds.length;i++){
                                        arrSelectids[selectIds[i]]=selectIds[i];
                                    }
                                    if(selectIds.length>0){
                                        $("#DimensionsitemsHtml .expanded-list-dim-value-checkbox").each(function( index ) {
                                            if(arrSelectids[$(this).parent().find('.dimvalue').html()]!=undefined){
                                                $(this).attr('checked', true); 
                                                $(this).prop('checked', true);
                                            }
                                            });
                                    } 
                                }
                        
                                 $(".selectors").css('display',''); 
                                //hide Spinner 
                                 $("#IsProcessSpinner").hide();
                            }, 
                            function(response) { 
                                  // alert("failed");
                                   //Show Spinner 
                                   $("#IsProcessSpinner").hide();
                         
                            });
                    } 
                   $scope.addSelectedDimensions= function() {
                         //Show Spinner 
                         $("#IsProcessSpinner").show();
                            
                            $http({
                                 url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                               
                                //Hide Spinner 
                                 $("#IsProcessSpinner").hide();
                                  var selectedItemcount=0;
                                  $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                                    if($(this).prop('checked')){
                                        selectedItemcount++;
                                    }
                                });
                                
                                //Add Items 
                                var items='<li style="width: 100%;margin-top: 10px;background-color: #E6ECF2;padding:3px;border-radius: 6px;">'+fieldapi+' : ('+selectedItemcount+') : ('+$(".DimensionspopupBtn").find('span').html()+')</li>';
                                $("#FilterbyItmes ul").append(items);

                            }, 
                            function(response) {                  
                               //Hide Spinner 
                                $("#IsProcessSpinner").hide();
                            });
                       }     
                         $scope.onfiltersearchRecords= function() {
                             
                             if($("#filterDimInput").val()!=""){
                                 body={"query":"q = load \""+dataSetId+"/"+folderId+"\";q = filter q by '"+fieldapi+"' matches \""+$("#filterDimInput").val().trim()+"\";q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as '"+fieldapi+"';q = limit q 1000;"};    
                              }else{  
                                      body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                            
                               }  
                                $http({
                                     url:"/services/data/v39.0/wave/query",  
                                    method: "POST",
                                    data: body,
                                    headers: {
                                       "Authorization": "OAuth " + sid
                                    }
                                })

                                .then(function(response) {
                                $("#DimensionsitemsHtml").html('');
                                    var DimensionsitemsHtml='';
                                   
                                        for(var i=0;i<response.data.results.records.length;i++){
                                            if($("#filterDimInput").val().trim()!="" && response.data.results.records[i][fieldapi]!=undefined){
                                                  DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                  DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';
                                                  DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i][fieldapi]+'</label>';
                                                  DimensionsitemsHtml+='</a>';

                                             }else{
                                                   if(response.data.results.records[i]['Id']!=undefined){  
                                                       DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                       DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';                              
                                                       DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                                       DimensionsitemsHtml+='</a>';
                                                   }
                                             }
                                        }
                                         $(".selnum").html("Show Selected (0)");
                                        $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
    
                                }, 
                                function(response) {                  
                                   //Hide Spinner 
                                    $("#IsProcessSpinner").hide();
                                   
                                });
                            }       

                            $scope.onfiltersearchRecordsDim= function() { 
                             
                             if($("#myInput").val()!="" ){
                                 body={"query":"q = load \""+dataSetId+"/"+folderId+"\";q = filter q by '"+fieldapi+"' matches \""+$("#myInput").val().trim()+"\";q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as '"+fieldapi+"';"};    
                              }else{  
                                      body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';"};
                            
                               }  
                                $http({
                                     url:"/services/data/v39.0/wave/query",  
                                    method: "POST",
                                    data: body,
                                    headers: {
                                       "Authorization": "OAuth " + sid
                                    }
                                })

                                .then(function(response) {
                                $("#DimensionsitemsHtml").html('');
                                    var DimensionsitemsHtml='';
                                   
                                        for(var i=0;i<response.data.results.records.length;i++){
                                            if($("#myInput").val().trim()!="" && response.data.results.records[i][fieldapi]!=undefined){
                                                  DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                  DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';
                                                  DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  onclick="singleSelectDimensionNew(this)">'+response.data.results.records[i][fieldapi]+'</label>';
                                                  DimensionsitemsHtml+='</a>';

                                             }else{
                                                   if(response.data.results.records[i]['Id']!=undefined){  
                                                       DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                       DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox newclass'+i+'" type="checkbox" readonly="" />';                              
                                                       DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  onclick="singleSelectDimensionNew(this)">'+response.data.results.records[i]['Id']+'</label>';
                                                       DimensionsitemsHtml+='</a>';
                                                   }
                                             }
                                        }
                                         $(".selnum").html("");
                                        $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
    
                                }, 
                                function(response) {                  
                                   //Hide Spinner 
                                    $("#IsProcessSpinner").hide();
                                   
                                });
                            } 
                            
                            

                       
                             $scope.onfiltersearchRecordsGraph= function() { 
                                  
                                 body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+Geograpgh+"';q = foreach q generate '"+Geograpgh+"' as 'Id';"};                      
                                    $http({
                                    url:"/services/data/v39.0/wave/query",  
                                    method: "POST",
                                    data: body,
                                    headers: {
                                       "Authorization": "OAuth " + sid
                                    }
                                })
                                .then(function(response) {
                                var DimensionsGraph=[];
                                 var DimensionsGraphs=[];
                                 var DimensionsGraphss=[];
                                 
                                         for(var i=0;i<response.data.results.records.length;i++){     
                                             DimensionsGraph[i] = response.data.results.records[i]['Id'] ;
                                              
                                        }
                                 
                                 var j=0;
                                 DimensionsGraph.sort();
                            //   for(var i=0;i<DimensionsGraph.length;i++){
                                     document.getElementById("colageId").innerHTML = DimensionsGraph.length;
                                     document.getElementById("dimensionName").innerHTML = Geograpgh;
                                        var bodys = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by '"+Geograpgh+"';q = foreach q generate count() as 'count';"};                      
                                        
                                            $http({
                                                url:"/services/data/v39.0/wave/query",  
                                                method: "POST",
                                                data: bodys,
                                                headers: {
                                                   "Authorization": "OAuth " + sid
                                                }
                                            })
                                            
                                            .then(function(response) {
                                                 
                                                for(var i=0;i<response.data.results.records.length;i++){
                                                   // alert(response.data.results.records[i]['count']);  
                                                   data.push({name : DimensionsGraph[i],value: response.data.results.records[i]['count']}); 
                                                }
                                                
                                             //  if(j == DimensionsGraph.length){
                                                   
                                                data = data.sort(function (a, b) {
                                                    return d3.ascending(a.value, b.value);
                                                })
                                                
                                                if(data.length > 5){
                                                    data = data.slice(1).slice(-5);
                                                }
                                        //set up svg using margin conventions - we'll need plenty of room on the left for labels
                                        var margin = {
                                            top: 2,
                                            right: 50,  
                                            bottom: 2,
                                            left:80
                                        };
                                
                                        var width = 380 - margin.left - margin.right,
                                            height = 100 - margin.top - margin.bottom;
                                
                                        var svg = d3.select("#graphic").append("svg")
                                            .attr("width", width + margin.left + margin.right)
                                            .attr("height", height + margin.top + margin.bottom)
                                            .append("g")
                                            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
                                
                                        var x = d3.scale.linear()
                                            .range([0, width])
                                            .domain([0, d3.max(data, function (d) {
                                                return d.value;
                                            })]);
                                
                                        var y = d3.scale.ordinal()
                                            .rangeRoundBands([height, 0], .1)
                                            .domain(data.map(function (d) {
                                                return d.name;
                                            }));
                                
                                        //make y axis to show bar names
                                        var yAxis = d3.svg.axis()
                                            .scale(y)
                                            //no tick marks
                                            .tickSize(0)
                                            .orient("left");
                                
                                        var gy = svg.append("g")
                                            .attr("class", "y axis")
                                            .call(yAxis)
                                
                                        var bars = svg.selectAll(".bar")
                                            .data(data)
                                            .enter()
                                            .append("g")
                                
                                        //append rects
                                        bars.append("rect")
                                            .attr("class", "bar")
                                            .attr("y", function (d) {
                                                return y(d.name);
                                            })
                                            .attr("height", y.rangeBand())
                                            .attr("x", 0)
                                            .attr("width", function (d) {
                                                return x(d.value);
                                            });
                                
                                        //add a value label to the right of each bar
                                        bars.append("text")
                                            .attr("class", "label")
                                            //y position of the label is halfway down the bar
                                            .attr("y", function (d) {
                                                return y(d.name) + y.rangeBand() / 2 + 4;
                                            })
                                            //x position is 3 pixels to the right of the bar
                                            .attr("x", function (d) {
                                                return x(d.value) + 3;
                                            })
                                            .text(function (d) {
                                                return d.value;
                                            });
                                              // }
                                               
                                            });
                                      //  }         
                                
                                });
                                     
                                 }
                             
                             
                });
        
         //Filter Records 
         function filterMeasuresRecords() {
            var input, filter;
            input = document.getElementById("filterinput");
            filter = input.value.toUpperCase();
            var DimensionsitemsHtml = document.getElementById("DimensionsitemsHtml");
            var labelval = DimensionsitemsHtml.getElementsByTagName("label");
            for (i = 0; i < labelval.length; i++) {
             if (labelval[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
                    labelval [i].parentElement.style.display = "";
                } else {
                    labelval [i].parentElement.style.display = "none";   
                }
            }   
        }
 
        //Filter Main Items 
         function filterRecords() {
            var input = document.getElementById('myInput');
            var filter = input.value.toUpperCase();
            $( "a" ).each(function( index ) {
              var a=$(this).find('label').html();
                if(a!=undefined){
                    if (a.toUpperCase().indexOf(filter) > -1) {
                        $(this).css("display","");
                    } else {
                        $(this).css("display","none");
                    }
                }
            });
            
        }
        //Select Object DataSet 
        function selectedObjectDataSet(urlid,foldersid,datasetsid){
             folderId=foldersid;
             dataSetId=datasetsid;
             selurlid=urlid;
         }
         
         //Next Button
         function slideback(){
                $(".filterSearch").hide();
                $(".fieldsRecords").show();
                $(".selecteddimText").html('Add a Filter');
                $( ".slidebackbtn" ).hide();
                $(".filterPanelDimensions").hide();
                $(".filterPanelMeasures").hide();
                $(".filterPanelDates").hide();
                $(".Dimensionspopup").hide();
         }
         //Filter Items
         
         function moveitems(obj){
             //alert('hiiiiii');
             var Keys = DimensionsApis[$(obj).find('label').html()];
              var keyFields = $(obj).parent().find('.selectedfield').val(); 
        
              delete addFilterTO[Keys];
              $('#DimensionsbyItmes li').filter(
                   
                function(){
                        if(Keys == $(this).closest('li').find('.selectedfield').val()){
                        
                        addFilterTO[Keys] = Keys;
                    }
                    else if(keyFields+' '== $(this).closest('li').find('.selectedfield').val()){
                       addFilterTO[Keys] = Keys;
                    }
                    
                });
                
              if(addFilterTO[Keys]==undefined){
                    addFilterTO[Keys]=Keys;
             selectItems=$(obj).find('label').html();
             
             var items;
             items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;"  onClick="setActiveRow(this)">';
                items += '<div class="DimeItemDev" onclick="editDimModel(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" width="26px" height="12px" /></div><p style="margin-left:30px;margin-top:-25px">' + selectItems+'</p>';
                 items+='<input type="hidden" class="selectedfield" value="'+DimensionsApis[selectItems]+'"/>';
                items += '</li>';
              $("#DimensionsbyItmes ul").append(items).sort();
             
                var itemsrec;
                for(var i=1;i<= $("#DimensionsbyItmes li").length;i++){
                     itemsrec = i;
                     $("#NumberIds").html(itemsrec);
                     
                     
                }
               $('#DimensionsbyItmes li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val(); 
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                      
                        var divs = document.getElementById('dis'+NewDims);
                        var divvals = document.getElementById('blo'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                    
                });
         }
         }
         
         function movedateitems(obj){
             var Keys = $(obj).find('label').html();
              var keyFields = datesApis[$(obj).find('label').html()].replace('_sec_epoch',''); 
              delete addFilterTO[keyFields];
              $('#DatesByItmesval li').filter(
                function(){
                    if(keyFields == $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        addFilterTO[keyFields] = keyFields;
                    }
                    else if(keyFields+' '== $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                       addFilterTO[keyFields] = keyFields;
                    }
                });
             
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
             selectItems=$(obj).find('label').html();
             
             var items;
             items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onClick="setActiveRowdate(this)">';
                items += '<div class="dateFivDiv" onclick="editDateModel(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" width="26px" height="12px" /></div><p style="margin-left:30px;margin-top:-25px">' + selectItems+'</p>';
                 items+='<input type="hidden" class="selectedfield" value="'+datesApis[selectItems]+'"/>';
                items += '</li>';
              $("#DatesByItmesval ul").append(items).sort();
              var itemsrec;
                for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                     itemsrec = i;
                     $("#NumberdateIds").html(itemsrec);
                     
                }
                 $('#DatesByItmesval li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','');
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('date'+NewDims);
                        var divvals = document.getElementById('block'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                    
                });
         }
         }
         function editDimModel(obj){
             selectItems=$(obj).parent().find('.selectedfield').val();
             
             var items;
              items = $(obj).find('label').html();
              
              $('#DimensionsbyItmes li').filter(
                function(){
                    if(selectItems == $(this).closest('li').find('.selectedfield').val()){
                        
                        $(this).remove();
                    }
                    else if(selectItems+' '== $(this).closest('li').find('.selectedfield').val()){
                        $(this).remove();
                         
                    }
                });
                delete addFilterTO[selectItems];
                var Dims = selectItems.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                 var divs = document.getElementById('dis'+Dims);
                        var divvals = document.getElementById('blo'+Dims);
                        divs.style.display="none";
                        divvals.style.display="block";
                
                var itemsrec = 0;
                if($("#DimensionsbyItmes li").html() != undefined){
                    for(var i=1;i<= $("#DimensionsbyItmes li").length;i++){
                         itemsrec = i;
                         $("#NumberIds").html(itemsrec);
                    }
                }
                else{
                    $("#NumberIds").html(itemsrec);
                }
         }
         function editDateModel(obj){
             
             selectItems=$(obj).parent().find('.selectedfield').val().replace('_sec_epoch','');
            
              $('#DatesByItmesval li').filter(
                function(){
                    if( $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','') == selectItems){
                        $(this).remove();
                    }
                    else if(selectItems+' '== $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        $(this).remove();
                    }
                });
                 delete addFilterTO[selectItems];
                 var Dims = selectItems.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                 var divs = document.getElementById('date'+Dims);
                        var divvals = document.getElementById('block'+Dims);
                        divs.style.display="none";
                        divvals.style.display="block";
                 var itemsrec = 0;
                 if($("#DatesByItmesval li").html() != undefined){
                    for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                         itemsrec = i;
                         $("#NumberdateIds").html(itemsrec);
                         
                    }
                 }
                 else{
                     $("#NumberdateIds").html(itemsrec);
                 }
         }
         function filteritemsAll(obj){
             selectItems=$(obj).attr('class');
             if(selectItems!="measure" && selectItems!="dimension"){
                 selectItems='date';
             }
             $(".selecteddimText").html($(obj).find('label').html());
             if(selectItems=="dimension"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").toggle();
                    $(".fieldsRecords").toggle();
                    $( ".slidebackbtn" ).toggle();
                    $(".filterPanelDimensions").show();
                    $(".filterPanelMeasures").hide();
                    $(".filterPanelDates").hide();
                    $(".Dimensionspopup").hide();
                    $(".DimensionspopupBtn").find('span').html('Equals');
                    $(".allCheck").prop('checked', false);
                    $(".addDimensionsBtn").show();
                    $(".updateDimensionsBtn").hide();
                    //HImanshu Start 
                    $("#DimensionsitemsHtml").show();
                    $("#filterContains").parent().hide();
                    $("#filterDimInput").parent().show();
                    $("#filterDimInput").parent().next().show();
                    $("#contdimstion").hide();
                    $("#contdimstion").parent().css('background-color','');
                    $(".addDimensionsBtn").attr('onclick','addDimensions()');
                    $(".addDimensionsBtn").removeClass('disabled');
                    $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                    $(".updateDimensionsBtn").removeClass('disabled');
                    //Himanshu End 
                
                    //Fill Records          
                    angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
             }else if(selectItems=="measure"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").toggle();
                    $(".fieldsRecords").toggle();
                    $( ".slidebackbtn" ).toggle();
                    $(".filterPanelDimensions").hide();
                    $(".filterPanelMeasures").show();
                    $(".filterPanelDates").hide();
                    $(".Measuresdropdownbutton").find('span').html('Between');
                    $("#minVal").show();
                    $("#maxVal").show();           
                    $(".fromTOVal").show();           
                    $(".TOVal").show();
                    $(".Measurespopup").hide();
                    $(".updateMeasures").hide();
                    $(".addMeasures").show();
                    if($("#maxVal").parent().hasClass('w50')==false){
                        $("#maxVal").parent().addClass('w50'); 
                     }
                //alert('Fill Records');          
                   angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
               }else if(selectItems=="date"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").show();
                    $(".fieldsRecords").hide();
                    $( ".slidebackbtn" ).show();
                    $(".filterPanelDimensions").hide();
                    $(".filterPanelMeasures").hide();
                    $(".filterPanelDates").show();
                    $(".Absolutedate").hide();
                    $(".addNewDateBtn").show();
                    $(".updateDateBtn").hide();
                    $("#fromDate").show();
                    $("#toDate").show();
                    $(".fromTOVal").show();
                    $(".TOVal").show();
                    $(".Datedropdownbutton").find('span').html('Between');
                      //Fill Records          
                   angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
               }
         }
         
         //Fill Select Dimension items in query 
         function filterDimensions(){
           
            var qSreing ='';
            var allKeys=Object.keys(selectedarr)+'';
            var res = allKeys.split(","); 
            for(var i=0;i<res.length;i++){
                  
                if(i==(res.length-1)){
                   qSreing+='\"'+res[i]+'\"';
                }else{
                    qSreing+='\"'+res[i]+'\",';
                }
            }
            
            body = { 'query':'q = load \"'+dataSetId+"/"+folderId+'\";'+"q = group q by all;q = filter q by '"+fieldapi+"' in ["+qSreing+"];q = group q by all; q = foreach q generate count() as 'count';q = limit q 1000;"};
        }
        
      
        //Show DropdownBox 
        function dropdownBoxListtoggle(obj,itemListName,btnname){
            $("#minVal").show();
            $("#maxVal").show();
            $(".fromTOVal").show();
            $(".TOVal").show();
            if($("#maxVal").parent().hasClass('w50')==false){
                $("#maxVal").parent().addClass('w50'); 
            }
                
            if($(obj).hasClass('item')){
               $("."+btnname).find('span').html($(obj).find('label').html());
            }
            $("."+itemListName).toggle();
            
            if($(obj).find('label').html()=='Is Not Null' || $(obj).find('label').html()=='Is Null'){
                $("#minVal").hide();
                $("#maxVal").hide();
                $(".fromTOVal").hide();
                $(".TOVal").hide();
            }else if($(obj).find('label').html()=='Greater Than' 
                    || $(obj).find('label').html()=='Greater Than Or Equal To'
                    || $(obj).find('label').html()=='Equals'
                    || $(obj).find('label').html()=='Does Not Equal'){
                $("#maxVal").hide();
                $(".TOVal").hide();
                $(".fromTOVal").hide();
            }else if($(obj).find('label').html()=='Less Than' || $(obj).find('label').html()=='Less Than Or Equal To'){
                $("#minVal").hide();
                $(".TOVal").hide();
                 $("#maxVal").parent().removeClass('w50');
                $(".fromTOVal").hide();
            }else{
                $("#maxVal").parent().addClass('w50');
            }
            
            if(btnname=='Datedropdownbutton'){
                    $("#fromDate").hide();
                    $("#toDate").hide();
                    $(".fromTOVal").hide();
                    $(".TOVal").hide();
                    
                if($(".Absolutedateval").html()=="Between"){
                    $("#fromDate").show();
                    $("#toDate").show();
                    $(".fromTOVal").show();
                    $(".TOVal").show();
                    if($("#toDate").parent().hasClass('floatleft')==false){
                        $("#toDate").parent().addClass('floatleft');
                    }
                }else if($(".Absolutedateval").html()=="Greater Than Or Equal To"){
                     $("#fromDate").show();
                }else if($(".Absolutedateval").html()=="Less Than Or Equal To"){
                     $("#toDate").show();
                     $("#toDate").parent().removeClass('floatleft');
                }
            }
            //HImanshu New Update Start
            if(btnname=="DimensionspopupBtn" && $(".DimensionspopupBtn").find('span').html()=="Contains" ){
                $("#contdimstion").show();
                $("#contdimstion").parent().css('background-color','#FAF9F8');
                $("#filterContains").parent().show();
                $("#DimensionsitemsHtml").hide();
                $("#filterDimInput").parent().hide();
                $("#filterDimInput").parent().next().hide();
                $(".addDimensionsBtn").attr('onclick','');
                $(".addDimensionsBtn").addClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','');
                $(".updateDimensionsBtn").addClass('disabled');
                $("#filterContains").val('');
            }else if(btnname=="DimensionspopupBtn" && $(".DimensionspopupBtn").find('span').html()!="Contains" ){
                $("#DimensionsitemsHtml").show();
                $("#filterContains").parent().hide();
                $("#filterDimInput").parent().show();
                $("#filterDimInput").parent().next().show();
                $("#contdimstion").hide();
                $("#contdimstion").parent().css('background-color','');
                $(".addDimensionsBtn").attr('onclick','addDimensions()');
                $(".addDimensionsBtn").removeClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                $(".updateDimensionsBtn").removeClass('disabled');
            }
             //HImanshu New end  Start
             
           //Fill Records          
           //angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
        } 
        //Hide Show Dim Contains 
        function checklengthContains(){
            if($("#filterContains").val().trim().length>1){
                $(".addDimensionsBtn").attr('onclick','addDimensions()');
                $(".addDimensionsBtn").removeClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                $(".updateDimensionsBtn").removeClass('disabled');
                $("#contdimstion").hide();
            }else{
                $(".addDimensionsBtn").attr('onclick','');
                $(".addDimensionsBtn").addClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','');
                $(".updateDimensionsBtn").addClass('disabled');
                $("#contdimstion").show();
            }
        }

        //Select UnSelect itemsDimensionsSelUnSel
        function itemsDimensionsSelUnSel(){
            if($(".allCheck").is(':checked')){
                 $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').prop('checked', true);
                 
                  $( "#DimensionsitemsHtml .dimvalue" ).each(function( index ) {
                 
                      selectedarr[$(this).html()]=$(this).html();
                  });
                 
                $(".selnum").html("Show Selected ("+$('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').length+")");
                filterDimensions();
              }else{
                 $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').prop('checked', false);
                    $(".selnum").html("Show Selected ("+0+")");
                     
                     //remove items old selected
                     
                      var allKeys=Object.keys(selectedarr)+'';
                      var res = allKeys.split(","); 
                      for(var i=0;i<res.length;i++){
                          delete selectedarr[res[i]];
                      }
              }
        }
        //Single Select Dimension
        function singleSelectDimension(obj){
             var selectItemsString='';
               if($(obj).find('.expanded-list-dim-value-checkbox').prop('checked')){
                 selectedarr[$(obj).find('.dimvalue').html()]=$(obj).find('.dimvalue').html();
                 
                }else{
                     selectedarr[$(obj).find('.dimvalue').html()]=$(this).find('.dimvalue').html();
                     delete selectedarr[$(obj).find('.dimvalue').html()];
                }
                var countofSelected=0;
                var i= 0;
                $("#DimensionsitemsHtml .expanded-list-dim-value-checkbox" ).each(function( index ) {
                    if($('.newclass'+i).is(':checked')){
                        countofSelected++;
                        
                    }
                    i++;
                });
                
                
                $(".selnum").html("Show Selected ("+countofSelected+")");
                
                filterDimensions();
        }
         $( document ).ready(function() {
                  filterPopUpModel();
        });
        
        
        function filterPopUpModel(){
             $(".filterPanelDates").hide();
                $('.popup').hide();
                $(".filterSearch").hide();
                $( ".slidebackbtn" ).hide();
                $(".dropdownListmenu").hide();
                $(".withoutfromTOVal").hide();
                $(".Dimensionspopup").hide();
                
        }
        
        function showFilter(){
            slideback();
             angular.element(document.getElementById('anguController')).scope().onGetRecords();
        }
        function showDimension(){
            slideback();
            
             angular.element(document.getElementById('anguController')).scope().onGetDimRecords();
        }
        
        function showDates(){
            slideback();
             
             angular.element(document.getElementById('anguController')).scope().onGetDateRecords();
        }
        function showFilterone(){
            slideback();
            NewDataset1();
           // alert('Neww val' + dataSetId + ' ' + folderId);
             angular.element(document.getElementById('anguController')).scope().onGetRecords();
        }
     
        //Add Measures Items
        function addMeasuresItems(){
              var keyFields=selectItems+$(".selecteddimText").html()+$(".Measuresdropdownbutton").find('span').html()+$("#minVal").val()+'-'+$("#maxVal").val();   
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
                    var items;
                    if($(".Measuresdropdownbutton").find('span').html()=="Between"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' '+$("#minVal").val()+' - '+$("#maxVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' > '+$("#minVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' >= '+$("#minVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' < '+$("#maxVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' <= '+$("#maxVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Equals"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' = '+$("#minVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Does Not Equal"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' != '+$("#minVal").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Null"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' Is Null </div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Not Null"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' Is Not Null </div>';
                    }
        
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="minVal" value="'+$("#minVal").val()+'"/>';
                    items+='<input type="hidden" class="maxVal" value="'+$("#maxVal").val()+'"/>';
                    items+='<input type="hidden" class="filterCon" value="'+$(".Measuresdropdownbutton").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                    $("#FilterbyItmes ul").append(items);
                    addItems();
                
                    
            }
           //toggle Window 
            slideback();
            $('.popup').toggle(500);
        }
        
            function addItems(){    
                var itemsrec='';
                for(var i=0;i<$("#FilterbyItmes .slds-scrollable li").length;i++){
                     itemsrec+=(i+1)+' AND ';
                }
                if(itemsrec!=''){
                    itemsrec=itemsrec.substring(0,itemsrec.length-4);
                }

                $(".slds-scrollable li").each(function( index ) {
                  $(this).find('.index').css('display','inline');   
                  $(this).find('.index').html(' ('+(index+1)+') ');
                });            
                
                document.getElementById('AddFilterLogicValue').value = itemsrec;
                AddFilterLogic();
               /// $("#"+indexpanel+"FilterLogic").val(itemsrec);
           }

        //Update 
        function editFilterModel(obj){
                    updateRef=obj;
                    if($(obj).parent().find('.typeofSelect').val()=="measure"){
                        if($(obj).parent().find('.minVal').val()==undefined){
                            $("#minVal").val(0);
                        }else{
                        
                            $("#minVal").val($(obj).parent().find('.minVal').val());
                        }
                        
                        if($(obj).parent().find('.maxVal').val()==undefined){
                            $("#maxVal").val(0);
                        }else{
                        $("#maxVal").val($(obj).parent().find('.maxVal').val());
                        }
                        
                        
                        $(".Measuresdropdownbutton").find('span').html($(obj).parent().find('.filterCon').val());
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        //Show Panel
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").hide();
                        $(".filterPanelMeasures").show();
                        $(".filterPanelDates").hide();
                        
                        $("#minVal").show();
                        $("#maxVal").show();           
                        $(".fromTOVal").show();           
                        $(".TOVal").show();
                        $(".Measurespopup").hide();
                
                        //Show All 
                         $("#minVal").show();
                         $("#maxVal").show();
                         $(".fromTOVal").show();
                         $(".TOVal").show();
                            
                        //Items Show 
                        if($(obj).parent().find('.filterCon').val()=='Is Not Null' || $(obj).parent().find('.filterCon').val()=='Is Null'){
                                $("#minVal").hide();
                                $("#maxVal").hide();
                                $(".fromTOVal").hide();
                                $(".TOVal").hide();
                            }else if($(obj).parent().find('.filterCon').val()=='Greater Than' 
                                    ||$(obj).parent().find('.filterCon').val()=='Greater Than Or Equal To'
                                    || $(obj).parent().find('.filterCon').val()=='Equals'
                                    || $(obj).parent().find('.filterCon').val()=='Does Not Equal'){
                                $("#maxVal").hide();
                                $(".TOVal").hide();
                                $(".fromTOVal").hide();
                            }else if($(obj).parent().find('.filterCon').val()=='Less Than' || $(obj).parent().find('.filterCon').val()=='Less Than Or Equal To'){
                                $("#minVal").hide();
                                $(".TOVal").hide();
                                 $("#maxVal").parent().removeClass('w50');
                                $(".fromTOVal").hide();
                            }else{
                                $("#maxVal").parent().addClass('w50');
                            }
                        //Show Hide Btn
                         $(".updateMeasures").show();
                        $(".addMeasures").hide();
                         setTimeout(function(){
                             $(".Measurespopup").hide();
                     }, 500);
                    }else if($(obj).parent().find('.typeofSelect').val()=="dimension"){
                      
                        $(".addDimensionsBtn").hide();
                        $(".updateDimensionsBtn").show();
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").show();
                         $("#filterContains").parent().hide();
                          $("#contdimstion").parent().hide();
                        $(".filterPanelMeasures").hide();
                        $(".filterPanelDates").hide();
                        $(".Dimensionspopup").hide();
                        $(".DimensionspopupBtn").find('span').html($(obj).parent().find('.filterCon').val());
                        fieldapi=$(obj).parent().find('.fieldapi').val();
                        updateRef=obj;
                        angular.element(document.getElementById('anguController')).scope().onDimensionsUpdate();
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        
                        
                        
                        if($(".DimensionspopupBtn").find('span').html()=="Contains" ){
                            $("#contdimstion").show();
                            $("#contdimstion").parent().css('background-color','#FAF9F8');
                            $("#filterContains").parent().show();
                            $("#DimensionsitemsHtml").hide();
                            $("#filterDimInput").parent().hide();
                            $("#filterDimInput").parent().next().hide();
                            $(".addDimensionsBtn").attr('onclick','');
                            $(".addDimensionsBtn").addClass('disabled');
                            
                            $("#filterContains").val($(obj).parent().find('.selectedIds').val());
                            if($("#filterContains").val().trim().length>1){
                                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                                $(".updateDimensionsBtn").removeClass('disabled');
                            }else{
                                $(".updateDimensionsBtn").attr('onclick','');
                                $(".updateDimensionsBtn").addClass('disabled');
                            }
                        }
                        else{
                             $("#filterContains").parent().hide();
                          $("#contdimstion").parent().hide();
                          $("#contdimstion").hide();
                        }
                        
                      
                        setTimeout(function(){
                             $(".Dimensionspopup").hide();  
                        }, 500);
                    }else if($(obj).parent().find('.typeofSelect').val()=="date"){
                    
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").hide();
                        $(".filterPanelMeasures").hide();
                        $(".filterPanelDates").show();
                        $(".addNewDateBtn").hide();
                        $(".updateDateBtn").show();
                        $(".Datedropdownbutton").find('span').html($(obj).parent().find('.filterCon').val());
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        $("#fromDate").val($(obj).parent().find('.fromDate').val());
                        $("#toDate").val($(obj).parent().find('.toDate').val());
                    }
                    
                    //toggle Window 
                    $('.popup').toggle(500);
                    
                }
            //Update measure
           function updatemeasure(){
           var  keyFieldss=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(".Measuresdropdownbutton").find('span').html()+$("#minVal").val()+'-'+$("#maxVal").val();              
            if(addFilterTO[keyFieldss] == undefined){
                    if($(".Measuresdropdownbutton").find('span').html()=="Between"){
                     $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' '+$("#minVal").val()+' - '+$("#maxVal").val());
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' > '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' >= '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' < '+$("#maxVal").val());
                    
                        
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than Or Equal To"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' <= '+$("#maxVal").val());
                    
                        
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Equals"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' = '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Does Not Equal"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' != '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Null"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' Is Null ');
                    
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Not Null"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' Is Not Null');
        
                    }
                  var keyFields=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val()+$(updateRef).parent().find('.minVal').val()+'-'+$(updateRef).parent().find('.maxVal').val();  
                  if(addFilterTO[keyFields]!=undefined){
                    delete addFilterTO[keyFields];
                    keyFields=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(".Measuresdropdownbutton").find('span').html()+$("#minVal").val()+'-'+$("#maxVal").val();  
                    addFilterTO[keyFields]=keyFields;
                  }
                $(updateRef).parent().find('.minVal').val($("#minVal").val());
                $(updateRef).parent().find('.maxVal').val($("#maxVal").val());
                $(updateRef).parent().find('.filterCon').val($(".Measuresdropdownbutton").find('span').html());
                slideback();
                var oldval=$(updateRef).parent().find('.MeasuresDivItems').html();
                var indexdiv="<div class='index'></div>";
                //$(updateRef).parent().find('.MeasuresDivItems').html(indexdiv+oldval);
                $(updateRef).parent().find('.MeasuresDivItems').html(oldval);
                addItems();
                }
                $(".Measurespopup").hide();
                $('.popup').toggle(500);
                
           }
            
         //Add dimensionItems
            function addDimensions(){
            var countOfVal=0;
            var selectedIds='';
            var items;
                $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                    if($(this).prop('checked')){
                        selectedIds+=$(this).parent().find('.dimvalue').html()+',';
                        countOfVal++;
                    }
                });
              if(countOfVal>0){  
                  var keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html()+selectedIds;  
                  if(addFilterTO[keyFields]==undefined ){
                        addFilterTO[keyFields]=keyFields;
                        //HImanshu
                        if($(".DimensionspopupBtn").find('span').html()!='Contains'){
                            if(countOfVal<5){   
                                items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+':'+selectedIds.substring(0,selectedIds.length-1)+'</div>';
                            }else{
                                items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div  class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+':Include '+countOfVal+' Values</div>';
                            }
                            items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                            items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                            items+='<input type="hidden" class="selectedIds" value="'+selectedIds+'"/>';
                            items+='<input type="hidden" class="filterCon" value="'+$(".DimensionspopupBtn").find('span').html()+'"/>';
                           
                           
                            items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                             items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                            $("#FilterbyItmes ul").append(items);
                         }
                         // Himanshu Edn 
                  } 
              }
              //Himanshu 
                 var keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html();  
              if($(".DimensionspopupBtn").find('span').html()=='Contains' && addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
                    selectedIds=$("#filterContains").val().trim(); 
                    items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div  class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' matches '+$("#filterContains").val().trim()+' </div>';
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="selectedIds" value="'+selectedIds+'"/>';
                    items+='<input type="hidden" class="filterCon" value="'+$(".DimensionspopupBtn").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                    $("#FilterbyItmes ul").append(items);
               }   
              //HImanshu End 
           //Close WIndow 
            addItems(); 
            slideback();
            $('.popup').toggle(500);     
            }
            //Update Dimensions
            function UpdateDimensions(){
            
                          
                     var countOfVal=0; 
                     var selectedIds='';
                    $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                        if($(this).prop('checked')){
                            selectedIds+=$(this).parent().find('.dimvalue').html()+',';
                            countOfVal++;
                        }
                    });
                    var keyFieldss=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html()+selectedIds;
                        
                 if(addFilterTO[keyFieldss] == undefined){
                    if(countOfVal>0){
                        if(countOfVal<5){   
                           
                            $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+':'+selectedIds.substring(0,selectedIds.length-1));
                        }else{
                            $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+':Include '+countOfVal+' Values');
                        }   
                          var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val() +  $(updateRef).parent().find('.selectedIds').val();  
                          if(addFilterTO[keyFields]!=undefined){
                            delete addFilterTO[keyFields];
                            keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html() + selectedIds;  
                            addFilterTO[keyFields]=keyFields;
                          }
                          $(updateRef).parent().find('.selectedIds').val(selectedIds);
                          $(updateRef).parent().find('.filterCon').val($(".DimensionspopupBtn").find('span').html());
                    }
                    if($(".DimensionspopupBtn").find('span').html()=='Contains'){
                       $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+' matches '+$("#filterContains").val().trim()+' ');
           
                         var keyFields=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val()+$(updateRef).parent().find('.selectedIds').val();  
                          if(addFilterTO[keyFields]!=undefined){
                            delete addFilterTO[keyFields];
                            keyFields=$(updateRef).parent().find('.typeofSelect').val()+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html()+selectedIds;  
                            addFilterTO[keyFields]=keyFields;
                          }  
                           $(updateRef).parent().find('.selectedIds').val( $("#filterContains").val().trim());
                          $(updateRef).parent().find('.filterCon').val($(".DimensionspopupBtn").find('span').html());
                    }
                  //Close WIndow
                  
                slideback();
                
                var oldval=$(updateRef).parent().find('.DimeItemDev').html();
                var indexdiv="<div class='index'></div>";
                //$(updateRef).parent().find('.DimeItemDev').html(indexdiv+oldval);
                $(updateRef).parent().find('.DimeItemDev').html(oldval);
                addItems(); 
                } 
                 $('.popup').toggle(500);                
          }
          
          
        //Add addDateCal
            function addDateCal(){
             var keyFields=selectItems+$(".selecteddimText").html()+$(".Datedropdownbutton").find('span').html();  
                   
             if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
                    var items;
                   if($(".Datedropdownbutton").find('span').html()=="Less Than Or Equal To"){
                      
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' <= '+createDateFormate($("#toDate").val())+' </div>';
                    }else if($(".Datedropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' >= '+createDateFormate($("#fromDate").val())+' </div>';
                   }else{
                         items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' '+createDateFormate($("#fromDate").val())+ ' - '+createDateFormate($("#toDate").val())+' </div>';
              
                   }
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="fromDate" value="'+$("#fromDate").val()+'"/>';
                    items+='<input type="hidden" class="toDate" value="'+$("#toDate").val()+'"/>';
                    items+='<input type="hidden" class="filterCon" value="'+$(".Datedropdownbutton").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'" /></li>';
                    $("#FilterbyItmes ul").append(items);
                    addItems();
               }
               slideback();
                $('.popup').toggle(500); 
                
                
            }
            
         //Update measure
            function updateDate(){
                if($(".Datedropdownbutton").find('span').html()=="Less Than Or Equal To"){
                   $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' <= '+createDateFormate($("#toDate").val()));
                   
                 }else if($(".Datedropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                     $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' >= '+createDateFormate($("#fromDate").val()));
                
                }else{
                      $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' '+createDateFormate($("#fromDate").val())+ ' - '+createDateFormate($("#toDate").val()));
                
                }
                var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val();  
                  if(addFilterTO[keyFields]!=undefined){
                    delete addFilterTO[keyFields];
                    keyFields=selectItems+$(".selecteddimText").html()+$(".Datedropdownbutton").find('span').html();  
                    addFilterTO[keyFields]=keyFields;
                  }
                          
                $(updateRef).parent().find('.fromDate').val($("#fromDate").val());
                $(updateRef).parent().find('.toDate').val($("#toDate").val());
                $(updateRef).parent().find('.filterCon').val($(".Datedropdownbutton").find('span').html());
               
               //Hide Filter Panel
                slideback();
                $('.popup').toggle(500);
               var oldval=$(updateRef).parent().find('.dateFivDiv').html();
                var indexdiv="<div class='index'></div>";
                //$(updateRef).parent().find('.dateFivDiv').html(indexdiv+oldval);
                $(updateRef).parent().find('.dateFivDiv').html(oldval);
                addItems();                
            }
            //Date Calculate
            function createDate(dateval){
                var date_string;
                var myObj = $.parseJSON('{"date_created":'+dateval+'}'),
                myDate = new Date(1000*myObj.date_created);
                var f = new Date(1000*myObj.date_created);
                
              
                var dateday=''; 
                var monthday='';
                if(f.getMonth()<10){
                     monthday='0'+f.getMonth();
                }else{
                     monthday=f.getMonth();
                }
                if(f.getDate()<10){
                     dateday='0'+f.getDate();
                }else{
                    dateday=f.getDate();
                }
                
                 date_string = f.getFullYear() + "-" + monthday + "-" + dateday;
                return date_string;
            }
            function filterDimensionsRecords(){
                angular.element(document.getElementById('anguController')).scope().onfiltersearchRecords();   
            }
            function removeItems(obj){
                var keyFields=$(obj).parent().find(".typeofSelect").val()+$(obj).parent().find(".selectedfield").val()+$(obj).parent().find(".filterCon").val();  
                if(confirm('Are You Sure')){
                    $(obj).parent().remove();
                   delete addFilterTO[keyFields];
                }
                addItems();
             }
             function createDateFormate(ndate){
                 if(ndate!=''){
                    var today = new Date(ndate);
                    var dd = today.getDate();
                    var mm = today.getMonth()+1; //January is 0!
                    
                    var yyyy = today.getFullYear();
                    if(dd<10){
                        dd='0'+dd;
                    } 
                    if(mm<10){
                        mm='0'+mm;
                    } 
                    var today = mm+'/'+dd+'/'+yyyy;
                    return today;
                    }else{
                        return '';
                    }
             }
        </script>
         <script>
        function EditFilters(){
                   // alert('Hiiii');
                $(".slds-scrollable li").each(function( index ) {
                var classname=$(this).find('div').attr('class');
                var html=$(this).find('.'+classname).html();
                var indexpo=html.indexOf('/div&gt;');
            
                html=html.substr(indexpo+8,html.length);
            
                html="<div class='index' style='display: inline;'>("+(index+1)+")</div> "+html;
            
                $(this).find('.'+classname).html(html);
                });
        }
         </script>
       
       </apex:outputpanel> 
        <script>
         function newFilterClass(){
                var Values =  document.getElementById('AddFilName').value;
                document.getElementById('FilterNames').value = Values;
            }
                function Newpop(){
                   $('#FilterbyItmesIdEdit li').appendTo($('#FilterbyItmes ul'));

                   newFilterClass();
                   updateEditRecords();
                   filterPopUpModel();
                }
                
                function NewDimPop(){
                   $('#DimensionsbyItmesEdit li').appendTo($('#DimensionsbyItmes ul'));
                   showDimension();
                }
                function NewDatePop(){
                   $('#DatesByItmesvalEdit li').appendTo($("#DatesByItmesval ul"));
                   showDates();
                   
                }
              function updateEditRecords(){
                $(".slds-scrollable li").each(function( index ) {
                var classname=$(this).find('div').attr('class');
                var html=$(this).find('.'+classname).html();
                html="<div class='index' style='display: inline;'>("+(index+1)+")</div> "+html;
            
                $(this).find('.'+classname).html(html);
                }); 
                
             }
                 
                </script>
                
                 <script language="Javascript">
                    var activeRow = 0;
        
                    function setActiveRow(el) {
                        var rows = $('#movingTable li');
                        //var rows = document.getElementById('movingTable').Value;
                       
                        for (var i = 0; i < rows.length; i++) {
                            if (rows[i] == el) {
                                rows[i].style.backgroundColor = "lightgrey";
                                activeRow = i;
                            } else {
                                rows[i].style.backgroundColor = "white";
                            }
                        }
                    }

                    function moveActiveRow(move) {
                         var rows = $('#movingTable li');
                        var oldRow = rows[activeRow].innerHTML;
                        var newRow = rows[activeRow + move].innerHTML;
                        rows[activeRow].innerHTML = newRow;
                        rows[activeRow + move].innerHTML = oldRow;
                        setActiveRow(rows[activeRow + move]);
                    }

                </script>
                <script language="Javascript">
                    var activeRows = 0;
        
                    function setActiveRowdate(el) {
                        var rows = $('#movingTableDate li');
                        //var rows = document.getElementById('movingTable').Value;
                       
                        for (var i = 0; i < rows.length; i++) {
                            if (rows[i] == el) {
                                rows[i].style.backgroundColor = "lightgrey";
                                activeRows = i;
                            } else {
                                rows[i].style.backgroundColor = "white";
                            }
                        }
                    }

                    function moveActiveRowdate(move) {
                         var rows = $('#movingTableDate li');
                        var oldRow = rows[activeRows].innerHTML;
                        var newRow = rows[activeRows + move].innerHTML;
                        rows[activeRows].innerHTML = newRow;
                        rows[activeRows + move].innerHTML = oldRow;
                        setActiveRowdate(rows[activeRows + move]);
                    }
                    
                      function MeasDateSelectPopup(item) {
                         // alert(item);
                          if(item == 'Dimensions'){
                              var dimtype = $("#DimensionsbyItmes ul").html();
                              document.getElementById('DimhiddenKPI').value = dimtype;
                             // alert('dimtype '+ dimtype);
                              DimensionsNew();
                          }
                          if(item == 'Datefield'){
                               var datetype = $("#DatesByItmesval ul").html();
                              document.getElementById('DatehiddenKPI').value = datetype;
                             // alert('datetype '+ datetype);
                              DatesNew();
                              
                          }
                      }
                      
                      
                      
                        
             
       
            //toggleMeasures
            function toggleMeasures(panelid,dtSetId,Fdid,e){
                delete checkPanelLoad[panelid];   
                isUpdate=false;
                selectedPanel=panelid;
                
               
               
               $("#MeasuresPanel"+panelid).toggle();
                selectedItemsFills('count');
                 
                //Show Process Spinner 
                $("#IsProcessSpinner"+panelid).css('display','');
                
                //Fill Records  
                angular.element(document.getElementById('anguController')).scope().onGetMeasureRecords();
                if (!e) var e = window.event; 
                e.cancelBubble = true;
                if (e.stopPropagation) e.stopPropagation()
                
                
            }
              function toggleMeasuresEdit(panelid,dtSetId,Fdid,e){
                delete checkPanelLoad[panelid];   
                isUpdate=false;
                selectedPanel=panelid;
                
               
               
               $("#MeasuresPanel"+panelid).toggle();
                selectedItemsFills('count');
                 
                //Show Process Spinner 
                $("#IsProcessSpinner"+panelid).css('display','');
                
                //Fill Records  
                angular.element(document.getElementById('anguController')).scope().onGetMeasureRecords();
               
                
                
            }
            //Filter Main Items
             function onfilterRecords(panelId) {
            
                var input = document.getElementById('myInput'+panelId);
                var filter = input.value.toUpperCase();
                $( ".selectors"+panelId+" a " ).each(function( index ) {
                  var a=$(this).find('label').html();
                    if(a!=undefined){
                        if (a.toUpperCase().indexOf(filter) > -1) {
                            $(this).css("display","");
                        } else {
                            $(this).css("display","none");
                        }
                    }
                });
                
            }
            
            
            function removeItemstwo(obj,panel,removselItems,e){
                 
                 if(confirm('Are You Sure')){
                 }
            }
            
            function removeItemsone(obj,panel,removselItems,e){
              
                    if(confirm('Are You Sure')){
                       
                       var selectedParVar=$(obj).closest('li').find('.parentSelected').val();
                      
                            
                        var delKey=panel+$(obj).closest('li').find('.parentSelected').val()+$(obj).closest('li').find('.itemSelected').val();
                        delete selectedElements[delKey];
                         $(obj).closest('li').remove();
                         
                         
                        
                        
                        if(selectedParVar=='unique'){
                             $("#DimensionsPanelLayout"+panel).prev().show();
                             $("#DimensionsPanelLayout"+panel).show();
                        
                        }else{
                             $("#DimensionsPanelLayout"+panel).prev().hide();
                             $("#DimensionsPanelLayout"+panel).hide();
                        }
                        
                        var itemsrec = 0;
                                if($("#MenuItems1 li").length != undefined ){
                                    for(var i=1;i<= $("#MenuItems1 li").length;i++){
                                         itemsrec = i;
                                }
                            }
                            if(itemsrec == 0 ){
                                var divs = document.getElementById("paddingIds");
                                divs.style.padding = "0px";
                                divs.style.border = "0px solid white";
                            }
                            else{
                                var divs = document.getElementById("paddingIds");
                                divs.style.padding = "1px";
                                divs.style.border = "1px solid white";
                            }
                            
                         selectedItemsFills(selectedParVar);
                         //closepop();
                        
                        if (!e) var e = window.event; 
                          e.cancelBubble = true;
                          if (e.stopPropagation) e.stopPropagation()
                         
                          
                           
                    }
                }
                
                function filteritems(obj,panel){
                   if($(obj).hasClass('disabled')==false){ 

                        var selectedParent= $("#MeasuresPanel"+panel).find('.vertical').find('.selected').html();
                        if(selectedParent=='Count'){
                            selectedParent='count';
                        }
                        if(selectedParent=='Sum'){
                            selectedParent='sum';
                        }
                        if(selectedParent=='Average'){
                            selectedParent='avg';
                        }
                        if(selectedParent=='Maximum'){
                            selectedParent='max';
                        }
                        if(selectedParent=='Minimum'){
                            selectedParent='min';
                        }
                        if(selectedParent=='Stddev'){
                            selectedParent='stddev';
                        }
                        if(selectedParent=='Stddevp'){
                            selectedParent='stddevp';
                        }
                        if(selectedParent=='Var'){
                            selectedParent='var';
                        }
                        if(selectedParent=='Varp'){
                            selectedParent='varp';
                        }
                        if(selectedParent=='Unique'){
                            selectedParent='unique';
                        }
                        if(selectedParent=='Median'){
                            selectedParent='median';
                        }
                        if(selectedParent=='First'){
                            selectedParent='first';
                        }
                        if(selectedParent=='Last'){
                            selectedParent='last';
                        }
                        var itemsrec =0;
                            for(var i=1;i<= $("#MenuItems1 li").length;i++){  
                                 itemsrec = i;
                                 
                                 
                            }
                          var Strings;
                          if(selectedParent !='Calculate'){
                            Strings = $(obj).find('label').html().replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                            Strings = Strings.replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '');
                          }
                              
                        
                         var IsNew = false;
                        if(isUpdate){
                             var oldkey=panel+$(ref).parent().find('.parentSelected').val()+$(ref).parent().find('.itemSelected').val(); 
                             delete selectedElements[oldkey];
                             if(selectedParent !='Calculate'){
                                $(ref).parent().html('<div onmouseover="ShowMeasures(\''+selectedParent+Strings+'\')" onmouseout="hideMeasures(\''+selectedParent+Strings+'\') "><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+$(obj).find('label').html()+'"/><input type="hidden" class="editSelected" value="'+selectedParent+'('+$(obj).find('label').html()+')"/><input type="hidden" class="editApi" value="'+selectedParent+Strings+'" /><div class="liclasses" onclick="editItems(this,'+panel+',event)"> '+selectedParent+'('+$(obj).find('label').html()+')'+'<span style="cursor: pointer;float:right;display:none" id="'+selectedParent+Strings+'"><img style="cursor:pointer;position:relative; z-index:2;" title="Edit" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup(this,\'Measures\')"/><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+$(obj).find('label').html()+'\',event)" width="23px" height="12px" /></span> </div></div>');
                             }
                             else{
                                    var vls = document.getElementById("InputlayoutId").value;
                                    var endString = vls.replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '');
                                    endString = endString.replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '');
                                    
                                    Strings = endString.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                   
                                     $(ref).parent().html('<div onmouseover="ShowMeasures(\''+selectedParent+Strings+'wqstn\')" onmouseout="hideMeasures(\''+selectedParent+Strings+'wqstn\') "><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+endString+'"/><input type="hidden" class="editSelected" value="'+vls+'wqstn"/><input type="hidden" class="editApi" value="'+selectedParent+Strings+'wqstn" /><div class="liclasses" onclick="editItems(this,'+panel+',event)"> '+vls+'<span style="cursor: pointer;float:right;display:none" id="'+selectedParent+Strings+'wqstn"><img style="cursor:pointer;position:relative; z-index:2;" title="Edit" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup(this,\'Measures\')"/><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+vls+'\',event)" width="23px" height="12px" /></span> </div></div>');
                                
                             }
                             isUpdate=false;
                             IsNew = true;
                        }else{
                            if(itemsrec <5) {
                                
                                if(selectedParent !='Calculate'){
                                    $("#MenuItems"+panel).find('ul').append('<li ><div onmouseover="ShowMeasures(\''+selectedParent+Strings+'\')" onmouseout="hideMeasures(\''+selectedParent+Strings+'\') "><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+$(obj).find('label').html()+'"/><input type="hidden" class="editSelected" value="'+selectedParent+'('+$(obj).find('label').html()+')"/><input type="hidden" class="editApi" value="'+selectedParent+Strings+'" /><div class="liclasses" onclick="editItems(this,'+panel+',event)"> '+selectedParent+'('+$(obj).find('label').html()+')'+'<span style="cursor: pointer;float:right;display:none" id="'+selectedParent+Strings+'"><img style="cursor:pointer;position:relative; z-index:2;" title="Edit" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup(this,\'Measures\')"/><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+$(obj).find('label').html()+'\',event)" width="23px" height="12px" /></span> </div></div></li>');
                            
                                }
                                else{
                                   
                                    var vls = document.getElementById("InputlayoutId").value;
                                    var endString = vls.replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '');
                                    endString = endString.replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '').replace('\'', '');
                                    Strings = endString.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                   
                                    $("#MenuItems"+panel).find('ul').append('<li ><div onmouseover="ShowMeasures(\''+selectedParent+Strings+'wqstn\')" onmouseout="hideMeasures(\''+selectedParent+Strings+'wqstn\') "><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+endString+'"/><input type="hidden" class="editSelected" value="'+vls+'wqstn"/><input type="hidden" class="editApi" value="'+selectedParent+Strings+'wqstn" /><div class="liclasses" onclick="editItems(this,'+panel+',event)"> '+vls+'<span style="cursor: pointer;float:right;display:none" id="'+selectedParent+Strings+'wqstn"><img style="cursor:pointer;position:relative; z-index:2;" title="Edit" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup(this,\'Measures\')"/><img style="cursor:pointer;position:relative; z-index:2;" title="Delete" src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+endString+'\',event)" width="23px" height="12px" /></span> </div></div></li>');
                               
                                }
                            }
                        
                         else{
                                var selectedParVar=$(obj).closest('li').find('.parentSelected').val();
                               $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                                         $(this).removeClass('selected');
                                });
                                    
                                $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                                    if($(this).html()==selectedParVar){
                                        $(this).addClass('selected');
                                    }
                                });
                                    
                                var delKey=panel+selectedParent+$(obj).find('label').html();
                                delete selectedElements[delKey];
                                 $(obj).closest('li').remove();
                                 
                                 
                                
                                
                                if(selectedParent=='unique'){
                                     $("#DimensionsPanelLayout"+panel).prev().show();
                                     $("#DimensionsPanelLayout"+panel).show();
                                
                                }else{
                                     $("#DimensionsPanelLayout"+panel).prev().hide();
                                     $("#DimensionsPanelLayout"+panel).hide();
                                } 
                                     alert('You cannot Enter more than 5 Measures');
                                 }
                        }
                        
                        if(itemsrec < 5 || IsNew == true){
                        $('#MenuItems1 li').filter(
                        function(){
                              
                                if($(this).closest('li').find('.parentSelected').val() != 'Calculate'){
                                var keyFieldsAll = $(this).closest('li').find('.itemSelected').val().replace(/[^a-zA-Z ]/g, "");
                                var keyFields = $(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val();
                                var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                keyFieldsAll = keyFieldsAll.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                var div = document.getElementById('NewAll'+keyFieldsAll);
                                
                                var divs = document.getElementById('Anals'+keyFieldsAll);
                                div.style.display = "none";
                                divs.style.display = "block";
                            
                                }
                            
                        }); 
                        
                            var itemsrec = 0;
                                if($("#MenuItems1 li").length != undefined ){
                                    for(var i=1;i<= $("#MenuItems1 li").length;i++){
                                         itemsrec = i;
                                }
                            }
                            if(itemsrec == 0 ){
                                var divs = document.getElementById("paddingIds");
                                divs.style.padding = "0px";
                                divs.style.border = "0px solid white";
                            }
                            else{
                                var divs = document.getElementById("paddingIds");
                                divs.style.padding = "1px";
                                divs.style.border = "1px solid white";
                            }
                          
                        var key;
                         if(selectedParent !='Calculate'){
                             key=panel+selectedParent+$(obj).find('label').html();
                         }
                         else{
                              var vls = document.getElementById("InputlayoutId").value;
                                    
                             key=panel+selectedParent+vls;
                         }
                       
                        selectedElements[key]=selectedParent;
                        selectedItemsFills(selectedParent);
                        }
                         if(selectedParent =='Calculate'){
                        $(".popup").hide();
                         }
                        
                     }   
                }
                
                function ShowMeasures(about)
                     {
                         
                        var div = document.getElementById(about);
                       div.style.display = "inline";
                       div.style.position = "relative";
                     
                      } 
                      function hideMeasures(about)
                     {
                        
                        var div = document.getElementById(about);
                        div.style.display = "none";
                    
                     
                      } 
                
                function PopupEdit(panel){
                    selectedPanel=panel;
                    $('#MenuItemsEdit li').appendTo($('#MenuItems1 ul')); 
                    angular.element(document.getElementById('anguController')).scope().onGetMeasureRecordsedit();
                    filterPopUpModel();
                }
                function editItems(obj,panel,e){
                    
                    selectedPanel=panel;
                    $('#MenuItems1 li').filter(
                        function(){
                             var key=selectedPanel+$(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val(); 
                            
                            selectedElements[key] = $(this).closest('li').find('.parentSelected').val();  
                              
                        }
                        );
                        
                    ref=obj;
                    isUpdate=true;
                    
                    $("#MeasuresPanel"+panel).show();
                    $("#MeasuresPanel"+panel).prev().show();
                     $("#MeasuresPanelLayout"+panel).prev().show();
                    $("#MeasuresPanelLayout"+panel).show();
                    $("#InputPanelLayout"+panel).hide();
                    $("#InputPanelLayout"+panel).prev().hide();
                    
                    if($(obj).closest('li').find('.parentSelected').val()=='unique'){
                         $("#DimensionsPanelLayout"+panel).prev().show();
                         $("#DimensionsPanelLayout"+panel).show();
                    
                    }else if($(obj).closest('li').find('.parentSelected').val()){
                         $("#DimensionsPanelLayout"+panel).prev().hide();
                         $("#DimensionsPanelLayout"+panel).hide();
                    }
                    if($(obj).closest('li').find('.parentSelected').val()=='Calculate'){
                        // $("#MeasuresPanel"+panelid).toggle();
                        $("#MeasuresPanelLayout"+panel).prev().hide();
                        $("#MeasuresPanelLayout"+panel).hide();
                        $("#DimensionsPanelLayout"+panel).prev().hide();
                        $("#DimensionsPanelLayout"+panel).hide();
                       
                        $("#InputPanelLayout"+panel).prev().show();
                        $("#InputPanelLayout"+panel).show();
                        
                        $("#CountInputlayoutIds").show();
                        $("#MeasInputlayoutIds").hide();
                        $("#DimInputlayoutIds").hide();
                       
                        var dl = $(obj).closest('li').find('.editSelected').val().replace('wqstn','');
                         
                        document.getElementById("InputlayoutId").value = $(obj).closest('li').find('.editSelected').val().replace('wqstn','');
                          
                    }
                    
                    $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                         $(this).removeClass('selected');
                    });
                        
                    $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                        selectedParent = $(this).html();
                       
                        if(selectedParent=='Count'){
                            selectedParent='count';
                        }
                        if(selectedParent=='Sum'){
                            selectedParent='sum';
                        }
                        if(selectedParent=='Average'){
                            selectedParent='avg';
                        }
                        if(selectedParent=='Maximum'){
                            selectedParent='max';
                        }
                        if(selectedParent=='Minimum'){
                            selectedParent='min';
                        }
                        if(selectedParent=='Stddev'){
                            selectedParent='stddev';
                        }
                        if(selectedParent=='Stddevp'){
                            selectedParent='stddevp';
                        }
                        if(selectedParent=='Var'){
                            selectedParent='var';
                        }
                        if(selectedParent=='Varp'){
                            selectedParent='varp';
                        }
                        if(selectedParent=='Unique'){
                            selectedParent='unique';
                        }
                        if(selectedParent=='Median'){
                            selectedParent='median';
                        }
                        if(selectedParent=='First'){
                            selectedParent='first';
                        }
                        if(selectedParent=='Last'){
                            selectedParent='last';
                        }
                        if(selectedParent==$(obj).closest('li').find('.parentSelected').val()){
                            $(this).addClass('selected');
                        }
                    });
                    
                    
                    
                    
                     selectedItemsFills($(obj).closest('li').find('.parentSelected').val());
                        if (!e) var e = window.event; 
                        e.cancelBubble = true;
                        if (e.stopPropagation) e.stopPropagation()
                }
                function ParentItemsSelected(obj,panel){
                    var selectedParent= $(obj).html();
                        if(selectedParent=='Count'){
                            selectedParent='count';
                        }
                        if(selectedParent=='Sum'){
                            selectedParent='sum';
                        }
                        if(selectedParent=='Average'){
                            selectedParent='avg';
                        }
                        if(selectedParent=='Maximum'){
                            selectedParent='max';
                        }
                        if(selectedParent=='Minimum'){
                            selectedParent='min';
                        }
                        if(selectedParent=='Stddev'){
                            selectedParent='stddev';
                        }
                        if(selectedParent=='Stddevp'){
                            selectedParent='stddevp';
                        }
                        if(selectedParent=='Var'){
                            selectedParent='var';
                        }
                        if(selectedParent=='Varp'){
                            selectedParent='varp';
                        }
                        if(selectedParent=='Unique'){
                            selectedParent='unique';
                        }
                         if(selectedParent=='Median'){
                            selectedParent='median';
                        }
                        if(selectedParent=='First'){
                            selectedParent='first';
                        }
                        if(selectedParent=='Last'){
                            selectedParent='last';
                        }
                    if(selectedParent !='unique' && selectedParent !='Calculate'){
                        $("#MeasuresPanelLayout"+panel).prev().show();
                        $("#MeasuresPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).hide();
                        $("#DimensionsPanelLayout"+panel).prev().hide();
                        $("#InputPanelLayout"+panel).hide();
                        $("#InputPanelLayout"+panel).prev().hide();
                    }
                    else if(selectedParent =='Calculate'){
                        $("#MeasuresPanelLayout"+panel).prev().hide();
                        $("#MeasuresPanelLayout"+panel).hide();
                        $("#DimensionsPanelLayout"+panel).hide();
                        $("#DimensionsPanelLayout"+panel).prev().hide();
                        $("#InputPanelLayout"+panel).show();
                        $("#InputPanelLayout"+panel).prev().show();
                        
                         $("#CountInputlayoutIds").show();
                                $("#MeasInputlayoutIds").hide();
                                $("#DimInputlayoutIds").hide();
                    }
                    else{
                        $("#MeasuresPanelLayout"+panel).prev().show();
                        $("#MeasuresPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).prev().show();
                        $("#InputPanelLayout"+panel).hide();
                        $("#InputPanelLayout"+panel).prev().hide();
                    }
                    
                    $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                      $(this).removeClass('selected');
                    });
                     $(obj).addClass('selected');
                     
                      selectedItemsFills(selectedParent);
                     
                }
                
                function selectedItemsFills(parentSel){

                    if(parentSel != 'Calculate' && parentSel !='unique'){
                        $("#MeasuresPanelLayout"+selectedPanel).find('label').each(function( index ) {
                            var key=selectedPanel+parentSel+$( this ).html(); 
        
                            var keyFields = parentSel+$( this ).html().replace(/[^a-zA-Z ]/g, "");
                            var keyFieldsAll = $( this ).html().replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                                    var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                
                            if(selectedElements[key]==undefined){
                                $(this).closest('a').removeClass('disabled');
                                var div = document.getElementById('NewAll'+keyFieldsAll);
                                    var divs = document.getElementById('Anals'+keyFieldsAll);
                                    div.style.display = "block";
                                    divs.style.display = "none";
                            }else{
                                $(this).closest('a').addClass('disabled');
                                    var div = document.getElementById('NewAll'+keyFieldsAll);
                                    var divs = document.getElementById('Anals'+keyFieldsAll);
                                    div.style.display = "none";
                                    divs.style.display = "block";
                            }
                    
                        });
                    }
                    else if(parentSel=='unique'){   
                         $("#DimensionsPanelLayout"+selectedPanel).find('label').each(function( index ) {
                            var key=selectedPanel+parentSel+$( this ).html();
                            var keyFields = parentSel+$( this ).html().replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                            var keyFieldsAll = $( this ).html().replace(' ','').replace(' ','').replace(' ','').replace(/[^a-zA-Z ]/g, "");
                                 keyFieldsAll = keyFieldsAll.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                            if(selectedElements[key]==undefined){
                                $(this).closest('a').removeClass('disabled');                     
                            }else{
                                $(this).closest('a').addClass('disabled');
                                var div = document.getElementById('NewAll'+keyFieldsAll);
                                var divs = document.getElementById('Anals'+keyFieldsAll);
                                div.style.display = "none";
                                divs.style.display = "block";
                            }
                            
                            
                    
                        });
                    }
                    else if(parentSel=='Calculate'){   
                        
                    }
                    if(parentSel=='count'){
                        $(".measureCount").hide();
                        $(".measureRows").show();
                    }else{
                        $(".measureCount").show();
                        $(".measureRows").hide();
                    }
                    
                    
                    
                }
                
                  function closefunctions(){
           if(confirm('All of your information will be lost and you will be returned to the Home Screen') ){ 
              window.open('/apex/TouchAnalytics_UI','_self');                               
         } 
        
     return false;
    }
                      
       function onmouseClose12() {
         closeSelectPopup();
        }
         function Mouseopen12(e){
             
                if (!e) var e = window.event; 
                e.cancelBubble = true;
                if (e.stopPropagation) e.stopPropagation()
          }  
          
        function onmeasureClose12() {
         $(".popup").hide();
        }
         function measureclose12(e){
             
                if (!e) var e = window.event; 
                e.cancelBubble = true;
                if (e.stopPropagation) e.stopPropagation()
          }  
          
          function showselectedfunction(){
              //alert('Hiiiii');
                document.getElementById('showselected').style.display = "block";
                
                document.getElementById('selectedhide').style.display = "block";
                document.getElementById('selectedShow').style.display = "none";
                //alert('Hiiiii');
                var DimensionsitemsHtmls='';
                
                 $("#DimensionsitemsHtml .expanded-list-dim-value-checkbox" ).each(function( index ) {
                    if($(this).prop('checked')){
                        DimensionsitemsHtmls+='<a>';
                        DimensionsitemsHtmls+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+$(this).parent().find('.dimvalue').html()+'</label>';
                        DimensionsitemsHtmls+='</a>';
                    }
                   
                });
                
                //alert('Hiiiii');
                document.getElementById('hideslected').style.display = "none";
                $("#DimensionsitemsHtmlhide").html(DimensionsitemsHtmls); 
                //alert('Hiiiii');
            }
            function hideselectedfunction(){
               document.getElementById('showselected').style.display = "none";
                document.getElementById('hideslected').style.display = "block";
                document.getElementById('selectedhide').style.display = "none";
                document.getElementById('selectedShow').style.display = "block";
                
             }
             
             function NewFunctionClass(){
       var Newss = document.getElementById('NewId').value;
       if(Newss != 'unique' && Newss != 'count'){
            $("#CountInputlayoutIds").hide();
           $("#MeasInputlayoutIds").show();
           $("#DimInputlayoutIds").hide();
       }
       else if(Newss == 'unique'){
            $("#CountInputlayoutIds").hide();
           $("#MeasInputlayoutIds").hide();
           $("#DimInputlayoutIds").show();
       }
       else if(Newss == 'count'){
            $("#CountInputlayoutIds").show();
           $("#MeasInputlayoutIds").hide();
           $("#DimInputlayoutIds").hide();
       }
    }   
    
    
    function FunctionValues(){
         var Newss = document.getElementById('NewId').value;
         var Newss1 ;
               if(Newss != 'unique' && Newss != 'count'){
                Newss1 = document.getElementById('MeasInputlayoutIds').value;   
                }
               else if(Newss == 'unique'){
                    Newss1 = document.getElementById('DimInputlayoutIds').value;    
               }
               else if(Newss == 'count'){
                    Newss1 = document.getElementById('CountInputlayoutIds').value;  
               }
               
               if(Newss !='' && Newss1 != ''){
                    if(document.getElementById('InputlayoutId').value != ''){
                        document.getElementById('InputlayoutId').value += Newss +'(\''+Newss1+'\')';
                    }
                    else{
                        document.getElementById('InputlayoutId').value = Newss +'(\''+Newss1+'\')';
                    }
               }
          
}

function NewMeaslabel(){
    document.getElementById("inputids").value = document.getElementById('pageId:myForm:KPILabelId').value; 
    
      var input = $("#inputids");
    var len = input.val().length;
    input[0].focus();
    input[0].setSelectionRange(len, len); 
    
}

window.onload = function(){
    toggleMeasuresEdit('1','0Fb36000000H8iHCAS','0Fc360000010Yy6CAE',event);
    onmeasureClose12();
}

function onmeasureClose12() {
         $(".popup").hide();
        }
         function measureclose12(e){
             
                if (!e) var e = window.event; 
                e.cancelBubble = true;
                if (e.stopPropagation) e.stopPropagation()
          } 
          
          
                      function openConfigPopup(){
                            document.getElementById("ConfigEditpopup").className = document.getElementById("ConfigEditpopup").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )  
                            document.getElementById("ConfigurationName").value = val;
                            document.getElementById("Description").value = val1;
                            document.getElementById("HiddenConfigId").value = rw;
                            
                        }
                        
                        function closeConfigEditpop(){
                            document.getElementById("ConfigEditpopup").className =
                            document.getElementById("ConfigEditpopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )               
                            
                            return true; 
                        }
                        
                        function SaveConfiguration(){
                            var ConfigName = document.getElementById("pageId:myForm:ConfigurationName").value;
                            alert(ConfigName);
                            var Desc = document.getElementById("pageId:myForm:Description").value;
                            alert(Desc);
                            document.getElementById("errorConfig1").innerHTML = "";
                            document.getElementById("errorConfig2").innerHTML = "";
                            if(ConfigName != '' && Desc != ''){
                                document.getElementById("HiddenConfig").value = ConfigName;
                                document.getElementById("HiddenDesc").value = Desc;
                                //alert(Desc);
                                UpdateConfiguration();
                            }else if(ConfigName == ''){
                                document.getElementById("errorConfig1").innerHTML = "Error: You Must Enter Value";
                                document.getElementById("errorConfig2").innerHTML = "";
                            }else if(Desc == ''){
                                document.getElementById("errorConfig1").innerHTML = "";
                                document.getElementById("errorConfig2").innerHTML = "Error: You Must Enter Description";
                            }
                            
                        }
                        /*function openAnalytics(){
                            //alert("Hiiiiiii");
            
                            window.open('/analytics/wave/wave.apexp#dashboard/{!AnalyticsDashboardId}'); 
                            //alert("Hiiii");
                            
                        }*/
                        
                        function openpurchaseDB(vals){
                            document.getElementById("configCreate").style.display = "none";
                            document.getElementById("getProductName").value = vals;
                            document.getElementById("purchaseDashboard").className = document.getElementById("purchaseDashboard").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )
                           //document.getElementById("pleasewait").style.display = "block";
                            ConnectSfdc();
                            
                            return true;
                        }
                        
                         function closepurchaseDB(){
                            document.getElementById("purchaseDashboard").className = document.getElementById("purchaseDashboard").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
                             document.getElementById("GeneratePopup").className =
                    document.getElementById("GeneratePopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )               
                   Cancelclose();
                            Newpleaswaitclose();
                            
                            return false;
                        }
                        
                          function closepurchaseDBclone(){
                            document.getElementById("purchaseDashboard").className = document.getElementById("purchaseDashboard").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
                             document.getElementById("GeneratePopup").className =
                    document.getElementById("GeneratePopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )               
                                Newpleaswaitclose();
                            
                            return false;
                        }
                        
                        function closepurchaseDBclone1(){
                            document.getElementById("purchaseDashboard").className = document.getElementById("purchaseDashboard").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )
                             document.getElementById("GeneratePopup").className.replace( /(?:^|\s)slds-fade-in-open(?!\S)/g , ' slds-fade-in-closed' )               
                    document.getElementById("configCreate").style.display = "block";
                            Newpleaswaitclose();
                            
                            return false;
                        }
                        
                               function Newpleaswait(){
                                    document.getElementById("pleasewait").style.display = "block";
                                    submit();
                                 }
             
            function Newpleaswaitclose(){
                document.getElementById("pleasewait").style.display = "none";
             }
             
             function Newpleaswaitcloses(){
                document.getElementById("pleasewait").style.display = "none";
                filterPopUpModel();
             }

                </script>
                
                 <apex:outputPanel id="MessageId">
                         <script>
                             function showErrorMessage(){
                                var mesVal = '{!DashboardDB}';
                                //alert(mesVal);
                                if(mesVal == 'true'){
                                   document.getElementById('DashboardDBId').style.display = 'block'; 
                                }else{
                                    document.getElementById('DashboardDBId').style.display = 'none';
                                    document.getElementById("GeneratePopup").className = document.getElementById("GeneratePopup").className.replace( /(?:^|\s)slds-fade-in-closed(?!\S)/g , ' slds-fade-in-open' )
                                    singleDashboardTheme();
                                    
                                }
                                return true;
                            }
                         </script>
                     </apex:outputPanel>

        </apex:form>         
     
    </body>
     
</html> 
    
</apex:page>