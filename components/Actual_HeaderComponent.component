<apex:component >
 <script>
     var addFilteritemsOld={};
      var addFilterTO={}; 
       var updateRef;
       var selectedarr={};
       var selectedItemscount=0;
       var selectItems=''; 
       var fieldapi='';
       var folderId='0Fc360000010Yy6CAE';
       var dataSetId='0Fb36000000H8iHCAS';
       var selurlid='';
       var dataSetLayout='';
       var DimensionsApis={}  ;
       var datesApis={}  ;
       
       var indexpanel;
       
                   var selectedElements={};
             var ref;
             var isUpdate=false;
             var checkPanelLoad={};
             var selectedPanel;

       
       var sid = '{!$Api.Session_ID}';
       var instance_url = '{!$Site.BaseUrl}';
        var body;
        var app = angular.module('demoajax', ['ngMaterial']);
        app.controller('Demo', function($scope,$http) {
            
             //Show Spinner
             $("#IsProcessSpinner").show();
             
                $http({
                    url: "/services/data/v39.0/wave/datasets",
                    method: "GET",
                    headers: {
                       "Authorization": "OAuth " + sid
                    }
                })
                .then(function(response) {
                  
                    
                    $(".dataSetLayout").html(dataSetLayout);
                   
                    //Hide Spinner
                    $("#IsProcessSpinner").hide();
                }, 
                function(response) { 
                      // alert("failed");
                });
              
                     
                     
                     /************************** New Measures Start********************************/
                           $scope.onGetMeasureRecords= function() {
                               alert('HiiiiiiiiiiiiiiiiMeasddd');
                    //delete checkPanelLoad[selectedPanel];
                    if(checkPanelLoad['1']==undefined){
                        checkPanelLoad['1']=1;    
                         selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                        $http({
                            url: selurlid+'/xmds/main',
                            method: "GET",
                            headers: {
                            "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {  
                            var MeasuresApi={};
                            var Measures=[];              
                            var Dimensions=[];
                            var DimensionsApi={};
                            var DimensionsLayout='';
                            var MeasuresLayout='';
                            var adddimTo = {};
                            var addmesTo = {};
                            for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                            }
                            //Sort Records 
                            Dimensions.sort();
                             alert('HiiiiiiiiiiiiiiiiMeasddd');
                            //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var Dimse = Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                if(Dimensions[i]!=undefined ){ 
                                    DimensionsLayout+='<a class="dimension" onclick="filteritems(this,'1')" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="NewAll1'+Dimse+'"/>';
                                     DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals1'+Dimse+'"/>';
                                    
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Dimensions[i]+'</label><span ></span></a>';
                                }   
                               
                            } 
                            $("#DimensionsPanelLayout1").html(DimensionsLayout);
                           
                            //***************************************End DimensionsPanelLayout**************
                           
                            //Measures Layout
                            for(var i=0;i<response.data.measures.length;i++){
                                if(response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                }  
                             }
                             
                             //Sort Measures Records 
                                Measures.sort();
                                
                             //Create Layout   Measures
                             
                             
                             
                             //Default 
                                	
                               MeasuresLayout+='<a class="measureRows1 measure" onclick="filteritems(this,'1')" id="Rows">';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll1'+'Rows"/>';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals1'+'Rows" />';
                                            
                               MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >Rows</label><span ></span></a>';
                              
                                
                                for(var i=0;i<Measures.length;i++){
                                    var Dimse = Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                        if(Measures[i]!=undefined ){
                                            MeasuresLayout+='<a class="measureCount1  measure" onclick="filteritems(this,'1')" id='+MeasuresApi[Measures[i]]+'>';
                                            MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll1'+Dimse+'"/>';
                                             MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals1'+Dimse+'" />';
                                            MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Measures[i]+'</label><span ></span></a>';
                                       
                                }  
                                }
                                
                               $("#MeasuresPanelLayout1").html(MeasuresLayout);  
                                         
                            
                             //Hide Process Spinner 
                              $("#IsProcessSpinner1").css('display','none');
                              
                               $("#MeasuresPanelLayout1").prev().show();
                                $("#MeasuresPanelLayout1").show();
                                $("#DimensionsPanelLayout1").hide();
                                $("#DimensionsPanelLayout1").prev().hide();
                                
                                 $("#MeasuresPanel1").find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel1").find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                                $('#MenuItems1 li').filter(
                                function(){
                                     var key='1'+$(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val(); 
                                   
                                    selectedElements[key] = key;  
                                      
                                }
                                );
                                    
                                selectedItemsFills('count');
                                 $("#DimensionsPanelLayout1").prev().hide();
                                $("#DimensionsPanelLayout1").hide();

                        },
                        function(response) { 
                             alert("Measures");
                        }); 
                     }else{
                          //Hide Process Spinner 
                                $("#IsProcessSpinner1").css('display','none');
                                $("#MeasuresPanel1").find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel1").find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                          $("#DimensionsPanelLayout1").prev().hide();      
                          $("#DimensionsPanelLayout1").hide();
                     }       
                }     
                
                
                   $scope.onGetMeasureRecordsEdit= function() {
                    //delete checkPanelLoad[selectedPanel];
                    alert('hhhhhhhhhhhhhh');
                    if(checkPanelLoad['2']==undefined){
                        checkPanelLoad['2']=2;    
                         selurlid = '/services/data/v39.0/wave/datasets/'+dataSetIdone+'/versions/'+folderIdone;
                        $http({
                            url: selurlid+'/xmds/main',
                            method: "GET",
                            headers: {
                            "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {  
                            var MeasuresApi={};
                            var Measures=[];              
                            var Dimensions=[];
                            var DimensionsApi={};
                            var DimensionsLayout='';
                            var MeasuresLayout='';
                            var adddimTo = {};
                            var addmesTo = {};
                            for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                            }
                            //Sort Records 
                            Dimensions.sort();
                            
                            //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var Dimse = Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                if(Dimensions[i]!=undefined ){ 
                                    DimensionsLayout+='<a class="dimension" onclick="filteritems(this,'2')" id='+DimensionsApi[Dimensions[i]]+'>';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="NewAll2'+Dimse+'"/>';
                                     DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals2'+Dimse+'"/>';
                                    
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Dimensions[i]+'</label><span ></span></a>';
                                }   
                               
                            } 
                            $("#DimensionsPanelLayout2").html(DimensionsLayout);
                           
                            //***************************************End DimensionsPanelLayout**************
                           
                            //Measures Layout
                            for(var i=0;i<response.data.measures.length;i++){
                                if(response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                }  
                             }
                             
                             //Sort Measures Records 
                                Measures.sort();
                                
                             //Create Layout   Measures
                             
                             
                             
                             //Default 
                                	
                               MeasuresLayout+='<a class="measureRows2 measure" onclick="filteritems(this,'2')" id="Rows">';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll2Rows"/>';
                               MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals2Rows" />';
                                            
                               MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >Rows</label><span ></span></a>';
                              
                                
                                for(var i=0;i<Measures.length;i++){
                                    var Dimse = Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                        if(Measures[i]!=undefined ){
                                            MeasuresLayout+='<a class="measureCount2  measure" onclick="filteritems(this,'2')" id='+MeasuresApi[Measures[i]]+'>';
                                            MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;"   src="{!$Resource.MeasureLabel}" width="17px" height="10px" id="NewAll2'+Dimse+'"/>';
                                             MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="Anals2'+Dimse+'" />';
                                            MeasuresLayout+='<label data-tooltip-on-truncation="true" data-tooltip="#" >'+Measures[i]+'</label><span ></span></a>';
                                       
                                }  
                                }
                                
                               $("#MeasuresPanelLayout2").html(MeasuresLayout);  
                                         
                            
                             //Hide Process Spinner 
                              $("#IsProcessSpinner2").css('display','none');
                              
                               $("#MeasuresPanelLayout2").prev().show();
                                $("#MeasuresPanelLayout2").show();
                                $("#DimensionsPanelLayout2").hide();
                                $("#DimensionsPanelLayout2").prev().hide();
                                
                                 $("#MeasuresPanel2").find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel2").find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                                $('#MenuItems2 li').filter(
                                function(){
                                     var key='2'+$(this).closest('li').find('.parentSelected').val()+$(this).closest('li').find('.itemSelected').val(); 
                                   
                                    selectedElements[key] = key;  
                                      
                                }
                                );
                                    
                                selectedItemsFills('count');
                                 $("#DimensionsPanelLayout2").prev().hide();
                                $("#DimensionsPanelLayout2").hide();

                        },
                        function(response) { 
                             alert("Measures");
                        }); 
                     }else{
                          //Hide Process Spinner 
                                $("#IsProcessSpinner2").css('display','none');
                                $("#MeasuresPanel2").find('.vertical a').each(function( index ) {
                                      $(this).removeClass('selected');
                                 });
                                
                                $("#MeasuresPanel2").find('.vertical a').each(function( index ) {
                                    if($(this).html()=='Count'){
                                        $(this).addClass('selected');
                                    }
                                });
                          $("#DimensionsPanelLayout2").prev().hide();      
                          $("#DimensionsPanelLayout2").hide();
                     }       
                }     
                     
			 /************************** New Measures End********************************/
			
			
		$scope.onGetDimRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                 var DimensionsLayout='';
                 var DimensionsLayoutone='';
                 var Dimensions=[]; 
                 var adddimensTO={};
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
   
                             for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApis[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];                              
                            }
                            Dimensions.sort();
                            $('#DimensionsbyItmesval li').filter(
                    		function(){
                    				var keyFields = $(this).closest('li').find('.selectedfield').val();
                    				var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                    				keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                    				adddimensTO[keyFieldss] = keyFieldss; 
                    			
                    		});	
                             //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                               var Dimes = DimensionsApis[Dimensions[i]].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(Dimensions[i]!=undefined && adddimensTO[Dimes]==undefined){                        
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitems(this)" class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                   DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blo'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="dis'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayoutone+='<span class="valuesbtn" >';
                                    DimensionsLayoutone+='<span class="chevronLeftIcon" >';
                                    DimensionsLayoutone+='</span>';
                                    DimensionsLayoutone+='<svg class="icon" >';
                                    DimensionsLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';                                   
                                 
                            } 
                            if(Dimensions[i]!=undefined && adddimensTO[Dimes]!=undefined){                        
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitems(this)" class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                   DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blo'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="dis'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayoutone+='<span class="valuesbtn" >';
                                    DimensionsLayoutone+='<span class="chevronLeftIcon" >';
                                    DimensionsLayoutone+='</span>';
                                    DimensionsLayoutone+='<svg class="icon" >';
                                    DimensionsLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';                                   
                                 
                            } 
                            }
                           $("#DimensionsLayoutone").html(DimensionsLayoutone); 
                           
                            var itemsrec;
                            for(var i=1;i<= $("#DimensionsbyItmesval li").length;i++){
                                 itemsrec = i;
                                 $("#NumberIds").html(itemsrec);
                                 
                            }
                         //  $('.OppselectPopup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
					 
			 $scope.onGetDimRecordsone= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                 var DimensionsLayout='';
                 var DimensionsLayoutone='';
                 var Dimensions=[]; 
                 var adddimensTO={};
                
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetIdone+'/versions/'+folderIdone;                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
   
                             for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApis[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];                              
                            }
                            Dimensions.sort();
                             alert('Hiiiiiiiiiii4444444444');
                            $('#DimensionsbyItmesvalone li').filter(
                    		function(){
                    				var keyFields = $(this).closest('li').find('.selectedfield').val();
                    				var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                    				keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                    				adddimensTO[keyFieldss] = keyFieldss; 
                    			
                    		});	
                    		 alert('Hiiiiiiiiiii5555555555');
                             //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                               var Dimes = DimensionsApis[Dimensions[i]].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(Dimensions[i]!=undefined && adddimensTO[Dimes]==undefined){                        
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitemsone(this)" class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                   DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blotar'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="distar'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayoutone+='<span class="valuesbtn" >';
                                    DimensionsLayoutone+='<span class="chevronLeftIcon" >';
                                    DimensionsLayoutone+='</span>';
                                    DimensionsLayoutone+='<svg class="icon" >';
                                    DimensionsLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';                                   
                                 
                            } 
                            if(Dimensions[i]!=undefined && adddimensTO[Dimes]!=undefined){                        
                                    DimensionsApis[Dimensions[i]]
                                    DimensionsLayoutone+='<a onclick="moveitemsone(this)" class="dimensions" id='+DimensionsApis[Dimensions[i]]+i+'>';
                                   DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DimensionLabel}" width="17px" height="10px" id="blotar'+Dimes+'"/>';
                                    DimensionsLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="17px" height="10px" id="distar'+Dimes+'"/>';
                                   
                                    DimensionsLayoutone+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayoutone+='<span class="valuesbtn" >';
                                    DimensionsLayoutone+='<span class="chevronLeftIcon" >';
                                    DimensionsLayoutone+='</span>';
                                    DimensionsLayoutone+='<svg class="icon" >';
                                    DimensionsLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';                                   
                                 
                            } 
                            }
                           $("#DimensionsLayouttwo").html(DimensionsLayoutone); 
                           
                            var itemsrec;
                            for(var i=1;i<= $("#DimensionsbyItmesvalone li").length;i++){
                                 itemsrec = i;
                                 $("#NumberIdsone").html(itemsrec);
                                 
                            }
                         //  $('.OppselectPopup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }

					 
			$scope.onGetDateRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                
                 var dates=[];
                 var datesLayoutone=''; 
                 var adddimensTO={};
                 
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
                          
                            for(var i=0;i<response.data.dates.length;i++){
                                dates[i]=response.data.dates[i]['alias'];
                                datesApis[response.data.dates[i]['alias']]=response.data.dates[i].fields['epochSecond'];             
                            }
                            
                            dates.sort();  
                            $('#DatesByItmesval li').filter(
                    		function(){
                    				var keyFields = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','');
                    				var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                    				keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                    				adddimensTO[keyFieldss] = keyFieldss; 
                    			
                    		});	
                            //For Date Fields 
                            for(var i=0;i<dates.length;i++){
                                 var Dimes = datesApis[dates[i]].replace('_sec_epoch','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(dates[i]!=undefined && adddimensTO[Dimes]==undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitems(this)" id='+datesApis[dates[i]]+'>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="block'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="date'+Dimes+'"/>';
                                 
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                    datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                                if(dates[i]!=undefined && adddimensTO[Dimes]!=undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitems(this)" id='+datesApis[dates[i]]+'>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="block'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="date'+Dimes+'"/>';
                                 
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                    datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                            }                            
                            $(".datesLayoutoneone").html(datesLayoutone);  
                            
                                var itemsrec;
                                for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                                     itemsrec = i;
                                     $("#NumberdateIds").html(itemsrec);
                                     
                            }
                           
                           filterPopUpModel();
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                
                $scope.onGetDateRecordsone= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                
                 var dates=[];
                 var datesLayoutone=''; 
                 var adddimensTOone={};
                 
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetIdone+'/versions/'+folderIdone;
                 
                       $http({
                            url: selurlidone+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
                          
                            for(var i=0;i<response.data.dates.length;i++){
                                dates[i]=response.data.dates[i]['alias'];
                                datesApis[response.data.dates[i]['alias']]=response.data.dates[i].fields['epochSecond'];             
                            }
                            
                            dates.sort();  
                            $('#DatesByItmesvalone li').filter(
                    		function(){
                    				var keyFields = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','');
                    				var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                    				keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                    				adddimensTOone[keyFieldss] = keyFieldss; 
                    			
                    		});	
                            //For Date Fields 
                            for(var i=0;i<dates.length;i++){
                                 var Dimes = datesApis[dates[i]].replace('_sec_epoch','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(dates[i]!=undefined && adddimensTOone[Dimes]==undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitemsone(this)" id='+datesApis[dates[i]]+'>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="blocktar'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="datetar'+Dimes+'"/>';
                                 
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                    datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                                if(dates[i]!=undefined && adddimensTOone[Dimes]!=undefined){ 
                                    datesLayoutone+='<a class="dimension date" onclick="movedateitemsone(this)" id='+datesApis[dates[i]]+'>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DateLabel}" width="15px" height="10px" id="blocktar'+Dimes+'"/>';
                                   datesLayoutone+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="15px" height="10px" id="datetar'+Dimes+'"/>';
                                 
                                    datesLayoutone+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayoutone+='<span class="valuesbtn" >';
                                    datesLayoutone+='<span class="chevronLeftIcon" >';
                                    datesLayoutone+='</span>';
                                    datesLayoutone+='<svg class="icon" >';
                                    datesLayoutone+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayoutone+='</svg></span></a>';
                                }
                            }                            
                            $(".datesLayoutonetwo").html(datesLayoutone);  
                            
                                var itemsrec;
                                for(var i=1;i<= $("#DatesByItmesvalone li").length;i++){
                                     itemsrec = i;
                                     $("#NumberdateIdsone").html(itemsrec);
                                     
                            }
                           
                           filterPopUpModel();
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                
                
              $scope.onGetRecords= function() {
                 //Show Spinner
                 $("#IsProcessSpinner").show();
                  
                 var MeasuresLayout='';
                 var Measures=[];
                 var dates=[];
                 var datesLayout='';
                 var DimensionsLayout='';
                 var Dimensions=[];
                 var MeasuresApi={};
                 var DimensionsApi={};
                 
                 var datesApi={}
                   var adddatessTO ={};
                 
                 selurlid = '/services/data/v39.0/wave/datasets/'+dataSetId+'/versions/'+folderId;
                 
                       $http({
                            url: selurlid+"/xmds/system",
                            method: "GET",
                            headers: {
                               "Authorization": "OAuth " + sid
                            }
                        })
                        .then(function(response) {
                            
                           for(var i=0;i<response.data.measures.length;i++){
                               // if(response.data.measures[i]['description']!=undefined && response.data.measures[i]['label']!=undefined ){
                                   
                                    Measures[i]=response.data.measures[i]['label'];
                                    MeasuresApi[response.data.measures[i]['label']]=response.data.measures[i]['field'];
                                //}
                                
                            }
                            for(var i=0;i<response.data.dates.length;i++){
                                dates[i]=response.data.dates[i]['alias'];
                                datesApi[response.data.dates[i]['alias']]=response.data.dates[i].fields['epochSecond'];
                               
                                
                            }
                             for(var i=0;i<response.data.dimensions.length;i++){
                                Dimensions[i]=response.data.dimensions[i]['label'];
                                DimensionsApi[response.data.dimensions[i]['label']]=response.data.dimensions[i]['field'];
                                
                            }
                            
                            //Sort Records 
                            Measures.sort();
                            dates.sort();
                            Dimensions.sort();
                            
                            $('#'+indexpanel+' li').filter(
                        	function(){
                        			var keyFields =	$(this).closest('li').find('.fieldapi').val()+$(this).closest('li').find('.selectedfield').val() ;
                        			var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                        			keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                        			adddatessTO[keyFieldss] = keyFieldss; 
                        		
                        	});
                          
                            //Create Layout  
                            for(var i=0;i<Measures.length;i++){
                                   var keyFieldss = MeasuresApi[Measures[i]]+Measures[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(Measures[i]!=undefined && adddatessTO[keyFieldss] == undefined){
                                        MeasuresLayout+='<a onclick="filteritemsAll(this)" class="measure" id='+MeasuresApi[Measures[i]]+'>';
                                       MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.MeasureLabel}" width="20px" height="17px" />';
                                         MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="20px" height="17px"/>'; 
	
                                        MeasuresLayout+='<label data-tooltip-on-truncation="true"  >'+Measures[i]+'</label>';
                                        MeasuresLayout+='<span class="valuesbtn" >';
                                        MeasuresLayout+='<span class="chevronLeftIcon" >';
                                        MeasuresLayout+='<svg ></svg>';
                                        MeasuresLayout+='</span>';
                                        MeasuresLayout+='<b class="chevronLabel" ></b>';
                                        MeasuresLayout+='<svg class="icon" >';
                                        MeasuresLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                        MeasuresLayout+='</svg></span></a>';
                                    }
                                    if(Measures[i]!=undefined && adddatessTO[keyFieldss] != undefined){
                                        MeasuresLayout+='<a onclick="filteritemsAll(this)" class="measure" id='+MeasuresApi[Measures[i]]+'>';
                                       MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.MeasureLabel}" width="20px" height="17px" />';
                                         MeasuresLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="20px" height="17px" />';
	
                                        MeasuresLayout+='<label data-tooltip-on-truncation="true"  >'+Measures[i]+'</label>';
                                        MeasuresLayout+='<span class="valuesbtn" >';
                                        MeasuresLayout+='<span class="chevronLeftIcon" >';
                                        MeasuresLayout+='<svg ></svg>';
                                        MeasuresLayout+='</span>';
                                        MeasuresLayout+='<b class="chevronLabel" ></b>';
                                        MeasuresLayout+='<svg class="icon" >';
                                        MeasuresLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                        MeasuresLayout+='</svg></span></a>';
                                    }
                                    
                               }
                            $(".MeasuresLayout").html(MeasuresLayout);
                            
                            //For Date Fields 
                            for(var i=0;i<dates.length;i++){
                                var keyFieldss = datesApi[dates[i]]+dates[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(dates[i]!=undefined && adddatessTO[keyFieldss] == undefined){
                                    datesLayout+='<a class="dimension date" onclick="filteritemsAll(this)" id='+datesApi[dates[i]]+'>';
                                       datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DateLabel}" width="19px" height="15px" />';
                                        datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="20px" height="17px" />';
                              	  
                                    datesLayout+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayout+='<span class="valuesbtn" >';
                                    datesLayout+='<span class="chevronLeftIcon" >';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#date"></use>';
                                    datesLayout+='</svg>';
                                    datesLayout+='</span>';
                                    datesLayout+='<b class="chevronLabel" >scale</b>';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayout+='</svg></span></a>';
                                }
                                if(dates[i]!=undefined && adddatessTO[keyFieldss] != undefined){
                                    datesLayout+='<a class="dimension date" onclick="filteritemsAll(this)" id='+datesApi[dates[i]]+'>';
                                       datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DateLabel}" width="19px" height="15px"/>';
                                        datesLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="20px" height="17px" />';
                              	  
                                    datesLayout+='<label data-tooltip-on-truncation="true" >'+dates[i]+'</label>';
                                    datesLayout+='<span class="valuesbtn" >';
                                    datesLayout+='<span class="chevronLeftIcon" >';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#date"></use>';
                                    datesLayout+='</svg>';
                                    datesLayout+='</span>';
                                    datesLayout+='<b class="chevronLabel" >scale</b>';
                                    datesLayout+='<svg class="icon" >';
                                    datesLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"></use>';
                                    datesLayout+='</svg></span></a>';
                                }
                            }      
                            
                            $(".datesLayout").html(datesLayout);
                            
                             //For Dimensions Layout
                            for(var i=0;i<Dimensions.length;i++){
                                var keyFieldss = DimensionsApi[Dimensions[i]] +Dimensions[i].replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                                    if(Dimensions[i]!=undefined && adddatessTO[keyFieldss] == undefined){ 
                                    DimensionsApi[Dimensions[i]]
                                    DimensionsLayout+='<a onclick="filteritemsAll(this)" class="dimension" id='+DimensionsApi[Dimensions[i]]+'>';
                                   DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.DimensionLabel}" width="20px" height="17px" />';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.TA_Label}" width="20px" height="17px" />';
       
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayout+='<span class="valuesbtn" >';
                                    DimensionsLayout+='<span class="chevronLeftIcon" >';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#filter-list"></use>';
                                    DimensionsLayout+='</svg>';
                                    DimensionsLayout+='</span>';
                                    DimensionsLayout+='<b class="chevronLabel" >filter</b>';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';
                                    
                                 }
                                  if(Dimensions[i]!=undefined && adddatessTO[keyFieldss] != undefined){ 
                                    DimensionsApi[Dimensions[i]]
                                    DimensionsLayout+='<a onclick="filteritemsAll(this)" class="dimension" id='+DimensionsApi[Dimensions[i]]+'>';
                                   DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px;display:none"   src="{!$Resource.DimensionLabel}" width="20px" height="17px" />';
                                    DimensionsLayout+='<img style="cursor:pointer;position:relative; z-index:2;margin-left:10px"   src="{!$Resource.TA_Label}" width="20px" height="17px" />';
       
                                    DimensionsLayout+='<label data-tooltip-on-truncation="true"  >'+Dimensions[i]+'</label>';
                                    DimensionsLayout+='<span class="valuesbtn" >';
                                    DimensionsLayout+='<span class="chevronLeftIcon" >';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#filter-list"></use>';
                                    DimensionsLayout+='</svg>';
                                    DimensionsLayout+='</span>';
                                    DimensionsLayout+='<b class="chevronLabel" >filter</b>';
                                    DimensionsLayout+='<svg class="icon" >';
                                    DimensionsLayout+='<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/analytics/wave/web/proto/icons/sprite.analytics.svg#chevronright"> </use></svg></span> </a>';
                                    
                                 }
                            }     
                           $(".DimensionsLayout").html(DimensionsLayout);    
                           $('.popup').toggle(500);
                           // hide Spinner
                           $("#IsProcessSpinner").hide();
                           
                          
                           
                        }, 
                        function(response) { 
                              // alert("Select Any One");
                               //Hide Spinner 
                               $("#IsProcessSpinner").hide();
                        });
                     }
                     
                     $scope.onGetFilterRecords= function() {
                         //Show Spinner 
                         $("#IsProcessSpinner").show();
                         
                         if(selectItems=="measure"){
                              body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = foreach q generate min('"+fieldapi+"') as '_min', max('"+fieldapi+"') as '_max';"};
                               }else if(selectItems=="dimension"){
                              
                              body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                               
                          }else if(selectItems=="date"){
                           body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = foreach q generate min('"+fieldapi+"') as '_min', max('"+fieldapi+"') as '_max';"};
                            
                           
                          
                          } 
                            $http({
                                url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                                
                                if(selectItems=="measure"){
                                
                                  $(".minValAll").val(response.data.results.records[0]._min);
                                    $(".maxValAll").val(response.data.results.records[0]._max);
                                        
                                }else if(selectItems=="dimension"){
                                    
                                     $(".Dimensionspopup").hide();
                                    var DimensionsitemsHtml='';
                                    for(var i=0;i<response.data.results.records.length;i++){
                                        DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                        DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox" type="checkbox" readonly="" />';
                                        DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                        DimensionsitemsHtml+='</a>';
                                    }
                                   
                                    $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
                                }else if(selectItems=="date"){
                         
                                    $(".fromDateAll").val(createDate(response.data.results.records[0]._max));
                                    
                                    $(".toDateAll").val(createDate(response.data.results.records[0]._min));
                                }
                                
                                //hide Spinner 
                                 $("#IsProcessSpinner").hide();
                            }, 
                            function(response) { 
                                  // alert("failed");
                                   //Show Spinner 
                                   $("#IsProcessSpinner").hide();
                         
                            });
                       } 
                    $scope.onDimensionsUpdate= function() {
                       body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                         
                        $http({
                                url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                               
                                // $(".Dimensionspopup").hide();
                                var DimensionsitemsHtml='';
                                for(var i=0;i<response.data.results.records.length;i++){
                                    DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                    DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox" type="checkbox" readonly="" />';
                                    DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                    DimensionsitemsHtml+='</a>';
                                }
                                $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
                                
                                var arrSelecids={};
                                var selectIds=$(updateRef).parent().find('.selectedIds').val();
                        
                                if(selectIds!=undefined){
                                    selectIds=selectIds.split(',');
                                    for(var i=0;i<selectIds.length;i++){
                                        arrSelecids[selectIds[i]]=selectIds[i];
                                    }
                                   
                                   var arrSelectids={};
                                    for(var i=0;i<selectIds.length;i++){
                                        arrSelectids[selectIds[i]]=selectIds[i];
                                    }
                                    if(selectIds.length>0){
                                        $("#DimensionsitemsHtml .expanded-list-dim-value-checkbox").each(function( index ) {
                                            if(arrSelectids[$(this).parent().find('.dimvalue').html()]!=undefined){
                                                $(this).attr('checked', true); 
                                                $(this).prop('checked', true);
                                            }
                                            });
                                    } 
                                }
                        
                                $(".selectors").css('display','');      
                                //hide Spinner 
                                 $("#IsProcessSpinner").hide();
                            }, 
                            function(response) { 
                                  // alert("failed");
                                   //Show Spinner 
                                   $("#IsProcessSpinner").hide();
                         
                            });
                    } 
                   $scope.addSelectedDimensions= function() {
                         //Show Spinner 
                         $("#IsProcessSpinner").show();
                            
                            $http({
                                 url:"/services/data/v39.0/wave/query",  
                                method: "POST",
                                data: body,
                                headers: {
                                   "Authorization": "OAuth " + sid
                                }
                            })
                            .then(function(response) {
                               
                                //Hide Spinner 
                                 $("#IsProcessSpinner").hide();
                                  var selectedItemcount=0;
                                  $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                                    if($(this).prop('checked')){
                                        selectedItemcount++;
                                    }
                                });
                                
                                //Add Items 
                                var items='<li style="width: 100%;margin-top: 10px;background-color: #E6ECF2;padding:3px;border-radius: 6px;">'+fieldapi+' : ('+selectedItemcount+') : ('+$(".DimensionspopupBtn").find('span').html()+')</li>';
                                $("#FilterbyItmes ul").append(items);

                            }, 
                            function(response) {                  
                               //Hide Spinner 
                                $("#IsProcessSpinner").hide();
                            });
                       }     
                         $scope.onfiltersearchRecords= function() {
                             
                             if($("#filterDimInput").val()!=""){
                                 body={"query":"q = load \""+dataSetId+"/"+folderId+"\";q = filter q by '"+fieldapi+"' matches \""+$("#filterDimInput").val().trim()+"\";q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as '"+fieldapi+"';q = limit q 1000;"};    
                              }else{  
                                      body = { 'query':'q = load "'+dataSetId+"/"+folderId+'";'+"q = group q by all;q = group q by '"+fieldapi+"';q = foreach q generate '"+fieldapi+"' as 'Id';q = limit q 1000;"};
                            
                               }  
                                $http({
                                     url:"/services/data/v39.0/wave/query",  
                                    method: "POST",
                                    data: body,
                                    headers: {
                                       "Authorization": "OAuth " + sid
                                    }
                                })

                                .then(function(response) {
                                $("#DimensionsitemsHtml").html('');
                                    var DimensionsitemsHtml='';
                                   
                                        for(var i=0;i<response.data.results.records.length;i++){
                                            if($("#filterDimInput").val().trim()!="" && response.data.results.records[i][fieldapi]!=undefined){
                                                  DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                  DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox" type="checkbox" readonly="" />';
                                                  DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i][fieldapi]+'</label>';
                                                  DimensionsitemsHtml+='</a>';

                                             }else{
                                                   if(response.data.results.records[i]['Id']!=undefined){  
                                                       DimensionsitemsHtml+='<a onclick="singleSelectDimension(this)">';
                                                       DimensionsitemsHtml+='<input class="expanded-list-dim-value-checkbox" type="checkbox" readonly="" />';                              
                                                       DimensionsitemsHtml+='<label class="dimvalue" data-tooltip-on-truncation="true"  >'+response.data.results.records[i]['Id']+'</label>';
                                                       DimensionsitemsHtml+='</a>';
                                                   }
                                             }
                                        }
    
                                        $("#DimensionsitemsHtml").html(DimensionsitemsHtml);
    
                                }, 
                                function(response) {                  
                                   //Hide Spinner 
                                    $("#IsProcessSpinner").hide();
                                   
                                });
                            } 
                            
                           
                });
                
                
                					 
function movedateitemsone(obj){
             var Keys = $(obj).find('label').html();
              var keyFields = datesApis[$(obj).find('label').html()].replace('_sec_epoch',''); 
              delete addFilterTO[keyFields];
              $('#DatesByItmesvalone li').filter(
                function(){
                    if(keyFields == $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        addFilterTO[keyFields] = keyFields;
                    }
                    else if(Keys+' '== $(this).text()){
                       addFilterTO[keyFields] = keyFields;
                    }
                });
             
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
             selectItems=$(obj).find('label').html();
             
             var items;
             items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onClick="setActiveRowdate(this)">';
                items += '<div class="dateFivDiv" onclick="editDateModelone(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" width="26px" height="12px" /></div>' + selectItems;
                 items+='<input type="hidden" class="selectedfield" value="'+datesApis[selectItems]+'"/>';
                items += '</li>';
              $("#DatesByItmesvalone ul").append(items).sort();
              var itemsrec;
                for(var i=1;i<= $("#DatesByItmesvalone li").length;i++){
                     itemsrec = i;
                     $("#NumberdateIdsone").html(itemsrec);
                     
                }
                
                $('#DatesByItmesvalone li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch',''); 
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('blocktar'+NewDims);
                        var divvals = document.getElementById('datetar'+NewDims);
                        divs.style.display="none";
                        divvals.style.display="block"; 
                    
                });
         }
         }
		 
function editDateModelone(obj){
             
             selectItems=$(obj).parent().find('.selectedfield').val().replace('_sec_epoch','');
            
              $('#DatesByItmesvalone li').filter(
                function(){
                    if( $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','') == selectItems){
                        $(this).remove();
                    }
                    else if(selectItems+' '== $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        $(this).remove();
                    }
                });
                 delete addFilterTO[selectItems];
                  NewDims = selectItems.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('blocktar'+NewDims);
                        var divvals = document.getElementById('datetar'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                 var itemsrec;
                 if($("#DatesByItmesvalone li").html() != undefined){
                for(var i=1;i<= $("#DatesByItmesvalone li").length;i++){
                     itemsrec = i;
                     $("#NumberdateIdsone").html(itemsrec);
                     
                }
         }
                else{
                    itemsrec = 0;
                    $("#NumberdateIdsone").html(itemsrec); 
                }
         }
		 
  function filterRecordsDateone(panelId) {
            
                var input = document.getElementById('EInput'+panelId);
               
                var filter = input.value.toUpperCase();
                
                $( ".Dateselectors"+panelId+" a " ).each(function( index ) {
                  var a=$(this).find('label').html();
                  
                    if(a!=undefined){
                        if (a.toUpperCase().indexOf(filter) > -1) {
                            $(this).css("display","");
                        } else {
                            $(this).css("display","none");
                        }
                    }
                });
  }
				
	               var activeRowDate = 0;      
                    function setActiveRowdateone(el) {
                        var rows = $('#movingTableDateone li');
                        //var rows = document.getElementById('movingTable').Value;
                       
                        for (var i = 0; i < rows.length; i++) {
                            if (rows[i] == el) {
                                rows[i].style.backgroundColor = "lightgrey";
                                activeRowDate = i;
                            } else {
                                rows[i].style.backgroundColor = "white";
                            }
                        }
                    }

                    function moveActiveRowdateone(move) {
                         var rows = $('#movingTableDateone li');
                        var oldRow = rows[activeRowDate].innerHTML;
                        var newRow = rows[activeRowDate + move].innerHTML;
                        rows[activeRowDate].innerHTML = newRow;
                        rows[activeRowDate + move].innerHTML = oldRow;
                        setActiveRowdate(rows[activeRowDate + move]);
                    }


         function moveitems(obj){
             var Keys = $(obj).find('label').html();
              var keyFields = DimensionsApis[$(obj).find('label').html()]; 
              delete addFilterTO[keyFields];
              $('#DimensionsbyItmesval li').filter(
                   
                function(){
                        if(keyFields == $(this).closest('li').find('.selectedfield').val()){
                        
                        addFilterTO[keyFields] = keyFields;
                    }
                    else if(Keys+' '== $(this).text()){
                       addFilterTO[keyFields] = keyFields;
                    }
                    
                });
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
             selectItems=$(obj).find('label').html();
             var items;
                items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onClick="setActiveRow(this)">';
                items += '<div class="DimeItemDev" onclick="editDimModel(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" width="26px" height="12px" /></div>' + selectItems;
                 items+='<input type="hidden" class="selectedfield" value="'+DimensionsApis[selectItems]+'"/>';
                items += '</li>';
                
              $("#DimensionsbyItmesval ul").append(items).sort();
                var itemsrec;
                for(var i=1;i<= $("#DimensionsbyItmesval li").length;i++){
                     itemsrec = i;
                     $("#NumberIds").html(itemsrec);
                     
                }
                $('#DimensionsbyItmesval li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val(); 
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('dis'+NewDims);
                        var divvals = document.getElementById('blo'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                    
                });
         }
         }
         
         function movedateitems(obj){
             var Keys = $(obj).find('label').html();
              var keyFields = datesApis[$(obj).find('label').html()].replace('_sec_epoch',''); 
              delete addFilterTO[keyFields];
              $('#DatesByItmesval li').filter(
                function(){
                    if(keyFields == $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        addFilterTO[keyFields] = keyFields;
                    }
                    else if(Keys+' '== $(this).text()){
                       addFilterTO[keyFields] = keyFields;
                    }
                });
             
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
             selectItems=$(obj).find('label').html();
             
             var items;
             items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onClick="setActiveRowdate(this)">';
                items += '<div class="dateFivDiv" onclick="editDateModel(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" width="26px" height="12px" /></div>' + selectItems;
                 items+='<input type="hidden" class="selectedfield" value="'+datesApis[selectItems]+'"/>';
                items += '</li>';
              $("#DatesByItmesval ul").append(items).sort();
              var itemsrec;
                for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                     itemsrec = i;
                     $("#NumberdateIds").html(itemsrec);
                     
                }
                
                $('#DatesByItmesval li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch',''); 
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('block'+NewDims);
                        var divvals = document.getElementById('date'+NewDims);
                        divs.style.display="none";
                        divvals.style.display="block"; 
                    
                });
         }
         }
         function editDimModel(obj){
             selectItems=$(obj).parent().find('.selectedfield').val();
             var items;
              items = selectItems;
              $('#DimensionsbyItmesval li').filter(
                function(){
                    if(items == $(this).closest('li').find('.selectedfield').val()){
                        
                        $(this).remove();
                    }
                    else if(items+' '== $(this).closest('li').find('.selectedfield').val()){
                        $(this).remove();
                         
                    }
                });
                delete addFilterTO[items];
                var Dims = items.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                var divs = document.getElementById('dis'+Dims);
                        var divvals = document.getElementById('blo'+Dims);
                        divs.style.display="none";
                        divvals.style.display="block";
                var itemsrec;
                if($("#DimensionsbyItmesval li").html() != undefined){
                for(var i=1;i<= $("#DimensionsbyItmesval li").length;i++){
                     itemsrec = i;
                     $("#NumberIds").html(itemsrec);
                }
         }
                else{
                    itemsrec = 0;
                    $("#NumberIds").html(itemsrec); 
                }
         }
         function editDateModel(obj){
             
             selectItems=$(obj).parent().find('.selectedfield').val().replace('_sec_epoch','');
            
              $('#DatesByItmesval li').filter(
                function(){
                    if( $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','') == selectItems){
                        $(this).remove();
                    }
                    else if(selectItems+' '== $(this).closest('li').find('.selectedfield').val().replace('_sec_epoch','')){
                        $(this).remove();
                    }
                });
                 delete addFilterTO[selectItems];
                  NewDims = selectItems.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('block'+NewDims);
                        var divvals = document.getElementById('date'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                 var itemsrec;
                 if($("#DatesByItmesval li").html() != undefined){
                for(var i=1;i<= $("#DatesByItmesval li").length;i++){
                     itemsrec = i;
                     $("#NumberdateIds").html(itemsrec);
                     
                }
         }
                else{
                    itemsrec = 0;
                    $("#NumberdateIds").html(itemsrec); 
                }
         }
         
         
         function moveitemsone(obj){
             var Keys = $(obj).find('label').html();
              var keyFields = DimensionsApis[$(obj).find('label').html()]; 
              delete addFilterTO[keyFields];
              $('#DimensionsbyItmesvalone li').filter(
                   
                function(){
                        if(keyFields == $(this).closest('li').find('.selectedfield').val()){
                        
                        addFilterTO[keyFields] = keyFields;
                    }
                    else if(Keys+' '== $(this).text()){
                       addFilterTO[keyFields] = keyFields;
                    }
                    
                });
              if(addFilterTO[keyFields]==undefined){
                    addFilterTO[keyFields]=keyFields;
             selectItems=$(obj).find('label').html();
             var items;
                items = '<li style="cursor: pointer;width: 99%;margin-top:5px;padding: 5px;border-radius: 2px;" onClick="setActiveRow(this)">';
                items += '<div class="DimeItemDev" onclick="editDimModel(this)" style="display: inline;"><img style="cursor:pointer;position:relative; z-index:2;"   src="{!$Resource.Delete}" width="26px" height="12px" /></div>' + selectItems;
                 items+='<input type="hidden" class="selectedfield" value="'+DimensionsApis[selectItems]+'"/>';
                items += '</li>';
                
              $("#DimensionsbyItmesvalone ul").append(items).sort();
                var itemsrec;
                for(var i=1;i<= $("#DimensionsbyItmesvalone li").length;i++){
                     itemsrec = i;
                     $("#NumberIdsone").html(itemsrec);
                     
                }
                $('#DimensionsbyItmesvalone li').filter(
                function(){
                        var NewDims = $(this).closest('li').find('.selectedfield').val(); 
                        NewDims = NewDims.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                        var divs = document.getElementById('distar'+NewDims);
                        var divvals = document.getElementById('blotar'+NewDims);
                        divs.style.display="block";
                        divvals.style.display="none"; 
                    
                });
         }
         }
		 
        function editDimModelone(obj){
             selectItems=$(obj).parent().find('.selectedfield').val();
             var items;
              items = selectItems;
              $('#DimensionsbyItmesvalone li').filter(
                function(){
                    if(items == $(this).closest('li').find('.selectedfield').val()){
                        
                        $(this).remove();
                    }
                    else if(items+' '== $(this).closest('li').find('.selectedfield').val()){
                        $(this).remove();
                         
                    }
                });
                delete addFilterTO[items];
                var Dims = items.replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','').replace(' ','');
                var divs = document.getElementById('distar'+Dims);
                        var divvals = document.getElementById('blotar'+Dims);
                        divs.style.display="none";
                        divvals.style.display="block";
                var itemsrec;
                if($("#DimensionsbyItmesvalone li").html() != undefined){
                for(var i=1;i<= $("#DimensionsbyItmesvalone li").length;i++){
                     itemsrec = i;
                     $("#NumberIdsone").html(itemsrec);
                }
         }
                else{
                    itemsrec = 0;
                    $("#NumberIdsone").html(itemsrec); 
                }
         }
		 
		 
		  //Filter Main Items 
         function filterRecordstar() {
            var input = document.getElementById('myInputtar');
            var filter = input.value.toUpperCase();
            $( "a" ).each(function( index ) {
              var a=$(this).find('label').html();
                if(a!=undefined){
                    if (a.toUpperCase().indexOf(filter) > -1) {
                        $(this).css("display","");
                    } else {
                        $(this).css("display","none");
                    }
                }
            });
            
        }
        
        
         //Filter Records 
         function filterMeasuresRecords() {
            var input, filter;
            input = document.getElementById("filterinput");
            filter = input.value.toUpperCase();
            var DimensionsitemsHtml = document.getElementById("DimensionsitemsHtml");
            var labelval = DimensionsitemsHtml.getElementsByTagName("label");
            for (i = 0; i < labelval.length; i++) {
             if (labelval[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
                    labelval [i].parentElement.style.display = "";
                } else {
                    labelval [i].parentElement.style.display = "none";   
                }
            }   
        }
 
        //Filter Main Items 
         function filterRecords() {
            var input = document.getElementById('myInput');
            var filter = input.value.toUpperCase();
            $( "a" ).each(function( index ) {
              var a=$(this).find('label').html();
                if(a!=undefined){
                    if (a.toUpperCase().indexOf(filter) > -1) {
                        $(this).css("display","");
                    } else {
                        $(this).css("display","none");
                    }
                }
            });
            
        }
        
        
         function filterRecordsnew(panelId) {
            
                var input = document.getElementById('DimInput'+panelId);
               
                var filter = input.value.toUpperCase();
               
                $( ".newselectors"+panelId+" a " ).each(function( index ) {
                  var a=$(this).find('label').html();
                  
                    if(a!=undefined){
                        if (a.toUpperCase().indexOf(filter) > -1) {
                            $(this).css("display","");
                        } else {
                            $(this).css("display","none");
                        }
                    }
                });
                
            }
            
            function filterRecordsDate(panelId) {
            
                var input = document.getElementById('EInput'+panelId);
               
                var filter = input.value.toUpperCase();
                
                $( ".Dateselectors"+panelId+" a " ).each(function( index ) {
                  var a=$(this).find('label').html();
                  
                    if(a!=undefined){
                        if (a.toUpperCase().indexOf(filter) > -1) {
                            $(this).css("display","");
                        } else {
                            $(this).css("display","none");
                        }
                    }
                });
                
            }
            
            
            
           
        //Select Object DataSet 
        function selectedObjectDataSet(urlid,foldersid,datasetsid){
             folderId=foldersid;
             dataSetId=datasetsid;
             selurlid=urlid;
         }
         
         //Next Button
         function slideback(){
                $(".filterSearch").hide();
                $(".fieldsRecords").show();
                $(".selecteddimText").html('Add a Filter');
                $( ".slidebackbtn" ).hide();
                $(".filterPanelDimensions").hide();
                $(".filterPanelMeasures").hide();
                $(".filterPanelDates").hide();
                $(".Dimensionspopup").hide();
         }
         //Filter Items 
         function filteritemsAll(obj){
             selectItems=$(obj).attr('class');
             if(selectItems!="measure" && selectItems!="dimension"){
                 selectItems='date';
             }
             $(".selecteddimText").html($(obj).find('label').html());
             if(selectItems=="dimension"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").toggle();
                    $(".fieldsRecords").toggle();
                    $( ".slidebackbtn" ).toggle();
                    $(".filterPanelDimensions").show();
                    $(".filterPanelMeasures").hide();
                    $(".filterPanelDates").hide();
                    $(".Dimensionspopup").hide();
                    $(".DimensionspopupBtn").find('span').html('Equals');
                    $(".allCheck").prop('checked', false);
                    $(".addDimensionsBtn").show();
                    $(".updateDimensionsBtn").hide();
                    //HImanshu Start 
                    $("#DimensionsitemsHtml").show();
                    $("#filterContains").parent().hide();
                    $("#filterDimInput").parent().show();
                    $("#filterDimInput").parent().next().show();
                    $("#contdimstion").hide();
                    $("#contdimstion").parent().css('background-color','');
                    $(".addDimensionsBtn").attr('onclick','addDimensions()');
                    $(".addDimensionsBtn").removeClass('disabled');
                    $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                    $(".updateDimensionsBtn").removeClass('disabled');
                    //Himanshu End 
                
                    //Fill Records          
                    angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
             }else if(selectItems=="measure"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").toggle();
                    $(".fieldsRecords").toggle();
                    $( ".slidebackbtn" ).toggle();
                    $(".filterPanelDimensions").hide();
                    $(".filterPanelMeasures").show();
                    $(".filterPanelDates").hide();
                    $(".Measuresdropdownbutton").find('span').html('Between');
                    $("#minVal").show();
                    $("#maxVal").show();           
                    $(".fromTOVal").show();           
                    $(".TOVal").show();
                    $(".Measurespopup").hide();
                    $(".updateMeasures").hide();
                    $(".addMeasures").show();
                    if($("#maxVal").parent().hasClass('w50')==false){
                        $("#maxVal").parent().addClass('w50'); 
                     }
                    //Fill Records          
                   angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
               }else if(selectItems=="date"){
                    fieldapi=$(obj).attr('id');
                    $(".filterSearch").show();
                    $(".fieldsRecords").hide();
                    $( ".slidebackbtn" ).show();
                    $(".filterPanelDimensions").hide();
                    $(".filterPanelMeasures").hide();
                    $(".filterPanelDates").show();
                    $(".Absolutedate").hide();
                    $(".addNewDateBtn").show();
                    $(".updateDateBtn").hide();
                    $("#fromDate").show();
                    $("#toDate").show();
                    $(".fromTOVal").show();
                    $(".TOVal").show();
                    $(".Datedropdownbutton").find('span').html('Between');
                      //Fill Records          
                   angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
               }
         }
         
         //Fill Select Dimension items in query 
         function filterDimensions(){
           
            var qSreing ='';
            var allKeys=Object.keys(selectedarr)+'';
            var res = allKeys.split(","); 
            for(var i=0;i<res.length;i++){
                  
                if(i==(res.length-1)){
                   qSreing+='\"'+res[i]+'\"';
                }else{
                    qSreing+='\"'+res[i]+'\",';
                }
            }
            
            body = { 'query':'q = load \"'+dataSetId+"/"+folderId+'\";'+"q = group q by all;q = filter q by '"+fieldapi+"' in ["+qSreing+"];q = group q by all; q = foreach q generate count() as 'count';q = limit q 1000;"};
        }
        
      
        //Show DropdownBox 
        function dropdownBoxListtoggle(obj,itemListName,btnname){
            $("#minVal").show();
            $("#maxVal").show();
            $(".fromTOVal").show();
            $(".TOVal").show();
            if($("#maxVal").parent().hasClass('w50')==false){
                $("#maxVal").parent().addClass('w50'); 
            }
                
            if($(obj).hasClass('item')){
               $("."+btnname).find('span').html($(obj).find('label').html());
            }
            $("."+itemListName).toggle();
            
            if($(obj).find('label').html()=='Is Not Null' || $(obj).find('label').html()=='Is Null'){
                $("#minVal").hide();
                $("#maxVal").hide();
                $(".fromTOVal").hide();
                $(".TOVal").hide();
            }else if($(obj).find('label').html()=='Greater Than' 
                    || $(obj).find('label').html()=='Greater Than Or Equal To'
                    || $(obj).find('label').html()=='Equals'
                    || $(obj).find('label').html()=='Does Not Equal'){
                $("#maxVal").hide();
                $(".TOVal").hide();
                $(".fromTOVal").hide();
            }else if($(obj).find('label').html()=='Less Than' || $(obj).find('label').html()=='Less Than Or Equal To'){
                $("#minVal").hide();
                $(".TOVal").hide();
                 $("#maxVal").parent().removeClass('w50');
                $(".fromTOVal").hide();
            }else{
                $("#maxVal").parent().addClass('w50');
            }
            
            if(btnname=='Datedropdownbutton'){
                    $("#fromDate").hide();
                    $("#toDate").hide();
                    $(".fromTOVal").hide();
                    $(".TOVal").hide();
                    
                if($(".Absolutedateval").html()=="Between"){
                    $("#fromDate").show();
                    $("#toDate").show();
                    $(".fromTOVal").show();
                    $(".TOVal").show();
                    if($("#toDate").parent().hasClass('floatleft')==false){
                        $("#toDate").parent().addClass('floatleft');
                    }
                }else if($(".Absolutedateval").html()=="Greater Than Or Equal To"){
                     $("#fromDate").show();
                }else if($(".Absolutedateval").html()=="Less Than Or Equal To"){
                     $("#toDate").show();
                     $("#toDate").parent().removeClass('floatleft');
                }
            }
            //HImanshu New Update Start
            if(btnname=="DimensionspopupBtn" && $(".DimensionspopupBtn").find('span').html()=="Contains" ){
                $("#contdimstion").show();
                $("#contdimstion").parent().css('background-color','#FAF9F8');
                $("#filterContains").parent().show();
                $("#DimensionsitemsHtml").hide();
                $("#filterDimInput").parent().hide();
                $("#filterDimInput").parent().next().hide();
                $(".addDimensionsBtn").attr('onclick','');
                $(".addDimensionsBtn").addClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','');
                $(".updateDimensionsBtn").addClass('disabled');
                $("#filterContains").val('');
            }else if(btnname=="DimensionspopupBtn" && $(".DimensionspopupBtn").find('span').html()!="Contains" ){
                $("#DimensionsitemsHtml").show();
                $("#filterContains").parent().hide();
                $("#filterDimInput").parent().show();
                $("#filterDimInput").parent().next().show();
                $("#contdimstion").hide();
                $("#contdimstion").parent().css('background-color','');
                $(".addDimensionsBtn").attr('onclick','addDimensions()');
                $(".addDimensionsBtn").removeClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                $(".updateDimensionsBtn").removeClass('disabled');
            }
             //HImanshu New end  Start
             
           //Fill Records          
           //angular.element(document.getElementById('anguController')).scope().onGetFilterRecords();
        } 
        //Hide Show Dim Contains 
        function checklengthContains(){
            if($("#filterContains").val().trim().length>1){
                $(".addDimensionsBtn").attr('onclick','addDimensions()');
                $(".addDimensionsBtn").removeClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                $(".updateDimensionsBtn").removeClass('disabled');
                $("#contdimstion").hide();
            }else{
                $(".addDimensionsBtn").attr('onclick','');
                $(".addDimensionsBtn").addClass('disabled');
                $(".updateDimensionsBtn").attr('onclick','');
                $(".updateDimensionsBtn").addClass('disabled');
                $("#contdimstion").show();
            }
        }

        //Select UnSelect itemsDimensionsSelUnSel
        function itemsDimensionsSelUnSel(){
            if($(".allCheck").is(':checked')){
                 $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').prop('checked', true);
                 
                  $( "#DimensionsitemsHtml .dimvalue" ).each(function( index ) {
                 
                      selectedarr[indexpanel+$(this).html()]=$(this).html();
                  });
                 
                $(".selnum").html("Show Selected ("+$('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').length+")");
                filterDimensions();
              }else{
                 $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').prop('checked', false);
                    $(".selnum").html("Show Selected ("+0+")");
                     
                     //remove items old selected
                     
                      var allKeys=Object.keys(selectedarr)+'';
                      var res = allKeys.split(","); 
                      for(var i=0;i<res.length;i++){
                          delete selectedarr[indexpanel+res[i]];
                      }
              }
        }
        //Single Select Dimension
        function singleSelectDimension(obj){
             var selectItemsString='';
               if($(obj).find('.expanded-list-dim-value-checkbox').prop('checked')){
                 selectedarr[indexpanel+$(obj).find('.dimvalue').html()]=$(obj).find('.dimvalue').html();
                 
                }else{
                     selectedarr[indexpanel+$(obj).find('.dimvalue').html()]=$(this).find('.dimvalue').html();
                     delete selectedarr[indexpanel+$(obj).find('.dimvalue').html()];
                }
                var countofSelected=0;
                $("#DimensionsitemsHtml .expanded-list-dim-value-checkbox" ).each(function( index ) {
                    if($(obj).is(':checked')){
                        countofSelected++;
                    }
                });
                $(".selnum").html("Show Selected ("+countofSelected+")");
                
                filterDimensions();
        }
         $( document ).ready(function() {
                  filterPopUpModel();
        });
        
        
        function filterPopUpModel(){
             $(".filterPanelDates").hide();
                $('.popup').hide();
                $(".filterSearch").hide();
                $( ".slidebackbtn" ).hide();
                $(".dropdownListmenu").hide();
                $(".withoutfromTOVal").hide();
                $(".Dimensionspopup").hide();
        }
        
        function showFilter(index){
            indexpanel=index;
          
            slideback();
            if(indexpanel == "1"){
                NewDataset();
            }
            if(indexpanel == "2"){
                NewDatasettwo();
            }
            if(indexpanel == "3"){
                NewDataset1();
            }
             
             angular.element(document.getElementById('anguController')).scope().onGetRecords();
        }
        
        function showDimension(){
            slideback();
            
             angular.element(document.getElementById('anguController')).scope().onGetDimRecords();
             angular.element(document.getElementById('anguController')).scope().onGetDimRecordsone();
        }
        
        function showDates(){
            slideback();
             
             angular.element(document.getElementById('anguController')).scope().onGetDateRecords();
             angular.element(document.getElementById('anguController')).scope().onGetDateRecordsone();
             
        }
        
      
        
       
        
        
        
       
       
     
        //Add Measures Items
        function addMeasuresItems(){
              var keyFields=selectItems+$(".selecteddimText").html()+$(".Measuresdropdownbutton").find('span').html();   
              if(addFilterTO[indexpanel+keyFields]==undefined){
                    addFilterTO[indexpanel+keyFields]=keyFields;
                    var items;
                    if($(".Measuresdropdownbutton").find('span').html()=="Between"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' '+$(".minValAll").val()+' - '+$(".maxValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' > '+$(".minValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' >= '+$(".minValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' < '+$(".maxValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' <= '+$(".maxValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Equals"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' = '+$(".minValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Does Not Equal"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' != '+$(".minValAll").val()+'</div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Null"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' Is Null </div>';
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Not Null"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="MeasuresDivItems" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' Is Not Null </div>';
                    }
        
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="minVal" value="'+$(".minValAll").val()+'"/>';
                    items+='<input type="hidden" class="maxVal" value="'+$(".maxValAll").val()+'"/>';
                    items+='<input type="hidden" class="filterCon" value="'+$(".Measuresdropdownbutton").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                    $("#"+indexpanel+" ul").append(items);
                    
                    addItems();                    
                    
            }
           //toggle Window 
            slideback();
            $('.popup').toggle(500);
        }

        //Update 
        function editFilterModel(obj){
                    updateRef=obj;
                    if($(obj).parent().find('.typeofSelect').val()=="measure"){
                        if($(obj).parent().find('.minVal').val()==undefined){
                            $(".minValAll").val(0);
                        }else{
                        
                            $(".minValAll").val($(obj).parent().find('.minVal').val());
                        }
                        
                        if($(obj).parent().find('.maxVal').val()==undefined){
                            $(".maxValAll").val(0);
                        }else{
                        $(".maxValAll").val($(obj).parent().find('.maxVal').val());
                        }
                        
                        
                        $(".Measuresdropdownbutton").find('span').html($(obj).parent().find('.filterCon').val());
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        //Show Panel
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").hide();
                        $(".filterPanelMeasures").show();
                        $(".filterPanelDates").hide();
                        
                        $("#minVal").show();
                        $("#maxVal").show();           
                        $(".fromTOVal").show();           
                        $(".TOVal").show();
                        $(".Measurespopup").hide();
                
                        //Show All 
                         $("#minVal").show();
                         $("#maxVal").show();
                         $(".fromTOVal").show();
                         $(".TOVal").show();
                            
                        //Items Show 
                        if($(obj).parent().find('.filterCon').val()=='Is Not Null' || $(obj).parent().find('.filterCon').val()=='Is Null'){
                                $("#minVal").hide();
                                $("#maxVal").hide();
                                $(".fromTOVal").hide();
                                $(".TOVal").hide();
                            }else if($(obj).parent().find('.filterCon').val()=='Greater Than' 
                                    ||$(obj).parent().find('.filterCon').val()=='Greater Than Or Equal To'
                                    || $(obj).parent().find('.filterCon').val()=='Equals'
                                    || $(obj).parent().find('.filterCon').val()=='Does Not Equal'){
                                $("#maxVal").hide();
                                $(".TOVal").hide();
                                $(".fromTOVal").hide();
                            }else if($(obj).parent().find('.filterCon').val()=='Less Than' || $(obj).parent().find('.filterCon').val()=='Less Than Or Equal To'){
                                $("#minVal").hide();
                                $(".TOVal").hide();
                                 $("#maxVal").parent().removeClass('w50');
                                $(".fromTOVal").hide();
                            }else{
                                $("#maxVal").parent().addClass('w50');
                            }
                        //Show Hide Btn
                         $(".updateMeasures").show();
                        $(".addMeasures").hide();
                         setTimeout(function(){
                             $(".Measurespopup").hide();
                     }, 500);
                    }else if($(obj).parent().find('.typeofSelect').val()=="dimension"){
                        $(".addDimensionsBtn").hide();
                        $(".updateDimensionsBtn").show();
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").show();
                         $("#filterContains").parent().hide();
                          $("#contdimstion").parent().hide();
                           $("#filterContains1").parent().hide();
                          $("#contdimstion1").parent().hide();
                           $("#filterContainstwo").parent().hide();
                          $("#contdimstiontwo").parent().hide();
                        $(".filterPanelMeasures").hide();
                        $(".filterPanelDates").hide();
                        $(".Dimensionspopup").hide();
                        $("#DimensionsitemsHtml").show();
                        $(".DimensionspopupBtn").find('span').html($(obj).parent().find('.filterCon').val());
                        fieldapi=$(obj).parent().find('.fieldapi').val();
                        updateRef=obj;
                        angular.element(document.getElementById('anguController')).scope().onDimensionsUpdate();
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        
                        
                        
                        if($(".DimensionspopupBtn").find('span').html()=="Contains" ){
                            $("#contdimstion").show();
                            $("#contdimstion").parent().css('background-color','#FAF9F8');
                            $("#filterContains").parent().show();
                            $("#DimensionsitemsHtml").hide();
                            $("#filterDimInput").parent().hide();
                            $("#filterDimInput").parent().next().hide();
                            $(".addDimensionsBtn").attr('onclick','');
                            $(".addDimensionsBtn").addClass('disabled');
                            
                            $("#filterContains").val($(obj).parent().find('.selectedIds').val());
                            if($("#filterContains").val().trim().length>1){
                                $(".updateDimensionsBtn").attr('onclick','UpdateDimensions()');
                                $(".updateDimensionsBtn").removeClass('disabled');
                            }else{
                                $(".updateDimensionsBtn").attr('onclick','');
                                $(".updateDimensionsBtn").addClass('disabled');
                            }
                        }
                         else{
                             $("#filterContains").parent().hide();
                          $("#contdimstion").parent().hide();
                          $("#contdimstion").hide();
                        }
                        
                      
                        setTimeout(function(){
                             $(".Dimensionspopup").hide();  
                        }, 500);
                    }else if($(obj).parent().find('.typeofSelect').val()=="date"){
                    
                        $(".filterSearch").show();
                        $(".fieldsRecords").hide();
                        $( ".slidebackbtn" ).show();
                        $(".filterPanelDimensions").hide();
                        $(".filterPanelMeasures").hide();
                        $(".filterPanelDates").show();
                        $(".addNewDateBtn").hide();
                        $(".updateDateBtn").show();
                        $(".Datedropdownbutton").find('span').html($(obj).parent().find('.filterCon').val());
                        $(".selecteddimText").html($(obj).parent().find('.selectedfield').val());
                        $(".fromDateAll").val($(obj).parent().find('.fromDate').val());
                        $(".toDateAll").val($(obj).parent().find('.toDate').val());
                    }
                    
                    //toggle Window 
                    $('.popup').toggle(500);
                    
                }
            //Update measure
           function updatemeasure(){
                if($(".Measuresdropdownbutton").find('span').html()=="Between"){
                     $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' '+$("#minVal").val()+' - '+$("#maxVal").val());
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' > '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' >= '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' < '+$("#maxVal").val());
                    
                        
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Less Than Or Equal To"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' <= '+$("#maxVal").val());
                    
                        
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Equals"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' = '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Does Not Equal"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' != '+$("#minVal").val());
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Null"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' Is Null ');
                    
                    
                    }else if($(".Measuresdropdownbutton").find('span').html()=="Is Not Null"){
                         $(updateRef).parent().find('.MeasuresDivItems').html($(".selecteddimText").html()+' Is Not Null');
        
                    }
                  var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val();  
                  if(addFilterTO[keyFields]!=undefined){
                    delete addFilterTO[keyFields];
                    keyFields=selectItems+$(".selecteddimText").html()+$(".Measuresdropdownbutton").find('span').html();  
                    addFilterTO[keyFields]=keyFields;
                  }
                $(updateRef).parent().find('.minVal').val($("#minVal").val());
                $(updateRef).parent().find('.maxVal').val($("#maxVal").val());
                $(updateRef).parent().find('.filterCon').val($(".Measuresdropdownbutton").find('span').html());
                slideback();
                
                var oldval=$(updateRef).parent().find('.MeasuresDivItems').html();
               
                var indexdiv="<div class='index'></div>";
               // $(updateRef).parent().find('.MeasuresDivItems').html(indexdiv+oldval);
                $(updateRef).parent().find('.MeasuresDivItems').html(oldval);
                addItems();
                $(".Measurespopup").hide();
                $('.popup').toggle(500);
           }
            
         //Add dimensionItems
            function addDimensions(){
            var countOfVal=0;
            var selectedIds='';
            var items;
                $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                    if($(this).prop('checked')){
                        selectedIds+=$(this).parent().find('.dimvalue').html()+',';
                        countOfVal++;
                    }
                });
              if(countOfVal>0){  
                  var keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html();  
                  if(addFilterTO[indexpanel+keyFields]==undefined ){
                        addFilterTO[indexpanel+keyFields]=keyFields;
                        //HImanshu
                        if($(".DimensionspopupBtn").find('span').html()!='Contains'){
                            if(countOfVal<5){   
                                items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+':'+selectedIds.substring(0,selectedIds.length-1)+'</div>';
                            }else{
                                items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div  class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+':Include '+countOfVal+' Values</div>';
                            }
                            items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                            items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                            items+='<input type="hidden" class="selectedIds" value="'+selectedIds+'"/>';
                            items+='<input type="hidden" class="filterCon" value="'+$(".DimensionspopupBtn").find('span').html()+'"/>';
                           
                           
                            items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                             items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                            $("#"+indexpanel+" ul").append(items);
                         }
                         // Himanshu Edn 
                  } 
              }
              //Himanshu 
                 var keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html();  
              if($(".DimensionspopupBtn").find('span').html()=='Contains' && addFilterTO[indexpanel+keyFields]==undefined){
                    addFilterTO[indexpanel+keyFields]=keyFields;
                    selectedIds=$("#filterContains").val().trim(); 
                    items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div  class="DimeItemDev" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' matches '+$("#filterContains").val().trim()+' </div>';
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="selectedIds" value="'+selectedIds+'"/>';
                    items+='<input type="hidden" class="filterCon" value="'+$(".DimensionspopupBtn").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'"/></li>';
                    $("#"+indexpanel+" ul").append(items);
               }   
              //HImanshu End 
           //Close WIndow 
            slideback();
            $('.popup').toggle(500);     
            
                addItems();   
            }
            //Update Dimensions
            function UpdateDimensions(){
                     var countOfVal=0; 
                     var selectedIds='';
                    $('#DimensionsitemsHtml .expanded-list-dim-value-checkbox').each(function( index ) {
                        if($(this).prop('checked')){
                            selectedIds+=$(this).parent().find('.dimvalue').html()+',';
                            countOfVal++;
                        }
                    });
                    if(countOfVal>0){
                        if(countOfVal<5){   
                           
                            $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+':'+selectedIds.substring(0,selectedIds.length-1));
                        }else{
                            $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+':Include '+countOfVal+' Values');
                        }   
                          var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val();  
                          if(addFilterTO[indexpanel+keyFields]!=undefined){
                            delete addFilterTO[indexpanel+keyFields];
                            keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html();  
                            addFilterTO[indexpanel+keyFields]=keyFields;
                          }
                          $(updateRef).parent().find('.selectedIds').val(selectedIds);
                          $(updateRef).parent().find('.filterCon').val($(".DimensionspopupBtn").find('span').html());
                    }
                    if($(".DimensionspopupBtn").find('span').html()=='Contains'){
                       $(updateRef).parent().find('.DimeItemDev').html($(".selecteddimText").html()+' matches '+$("#filterContains").val().trim()+' ');
           
                         var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val();  
                          if(addFilterTO[indexpanel+keyFields]!=undefined){
                            delete addFilterTO[indexpanel+keyFields];
                            keyFields=selectItems+$(".selecteddimText").html()+$(".DimensionspopupBtn").find('span').html();  
                            addFilterTO[indexpanel+keyFields]=keyFields;
                          }  
                           $(updateRef).parent().find('.selectedIds').val( $("#filterContains").val().trim());
                          $(updateRef).parent().find('.filterCon').val($(".DimensionspopupBtn").find('span').html());
                    }
                  //Close WIndow
                slideback();
                $('.popup').toggle(500);   
                
                
                var oldval=$(updateRef).parent().find('.DimeItemDev').html();
                var indexdiv="<div class='index'></div>";
               // $(updateRef).parent().find('.DimeItemDev').html(indexdiv+oldval);
                $(updateRef).parent().find('.DimeItemDev').html(oldval);
                addItems();
                
                
          }
          
          
        //Add addDateCal
            function addDateCal(){
             var keyFields=selectItems+$(".selecteddimText").html()+$(".Datedropdownbutton").find('span').html();  
                   
             if(addFilterTO[indexpanel+keyFields]==undefined){
                    addFilterTO[indexpanel+keyFields]=keyFields;
                    var items;
                   if($(".Datedropdownbutton").find('span').html()=="Less Than Or Equal To"){
                      
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' <= '+createDateFormate($(".toDateAll").val())+' </div>';
                    }else if($(".Datedropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                        items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' >= '+createDateFormate($(".fromDateAll").val())+' </div>';
                   }else{
                         items='<li style="cursor: pointer;width: 99%;margin-top:5px;background-color: #E6ECF2;padding: 5px;border-radius: 2px;"><div class="index"></div><div class="dateFivDiv" onclick="editFilterModel(this)" style="display: inline;">'+$(".selecteddimText").html()+' '+createDateFormate($(".toDateAll").val())+ ' - '+createDateFormate($(".fromDateAll").val())+' </div>';
              
                   }
                    items+='<div style="display: inline;float: right;padding-right: 1px;cursor: pointer;" onclick="removeItems(this)">X</div>';
                    items+='<input type="hidden" class="typeofSelect" value="'+selectItems+'"/>';
                    items+='<input type="hidden" class="fromDate" value="'+$(".fromDateAll").val()+'"/>';
                    items+='<input type="hidden" class="toDate" value="'+$(".toDateAll").val()+'"/>';      
                    items+='<input type="hidden" class="filterCon" value="'+$(".Datedropdownbutton").find('span').html()+'"/>';
                    items+='<input type="hidden" class="selectedfield" value="'+$(".selecteddimText").html()+'"/>';
                    items+='<input type="hidden" class="fieldapi" value="'+fieldapi+'" /></li>';
                    $("#"+indexpanel+" ul").append(items);
               }
               slideback();
                $('.popup').toggle(500); 
                addItems();
            }
            
         //Update measure
            function updateDate(){
                if($(".Datedropdownbutton").find('span').html()=="Less Than Or Equal To"){
                   $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' <= '+createDateFormate($("#toDate").val()));
                   
                 }else if($(".Datedropdownbutton").find('span').html()=="Greater Than Or Equal To"){
                     $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' >= '+createDateFormate($("#fromDate").val()));
                
                }else{
                      $(updateRef).parent().find('.dateFivDiv').html($(".selecteddimText").html()+' '+createDateFormate($("#toDate").val())+ ' - '+createDateFormate($("#fromDate").val()));
                
                }
                var keyFields=selectItems+$(".selecteddimText").html()+$(updateRef).parent().find('.filterCon').val();  
                  if(addFilterTO[indexpanel+keyFields]!=undefined){
                    delete addFilterTO[indexpanel+keyFields];
                    keyFields=selectItems+$(".selecteddimText").html()+$(".Datedropdownbutton").find('span').html();  
                    addFilterTO[indexpanel+keyFields]=keyFields;
                  }
                          
                $(updateRef).parent().find('.fromDate').val($("#fromDate").val());
                $(updateRef).parent().find('.toDate').val($("#toDate").val());
                $(updateRef).parent().find('.filterCon').val($(".Datedropdownbutton").find('span').html());
               
               //Hide Filter Panel
                slideback();
                $('.popup').toggle(500);
                
                var oldval=$(updateRef).parent().find('.dateFivDiv').html();
                var indexdiv="<div class='index'></div>";
               // $(updateRef).parent().find('.dateFivDiv').html(indexdiv+oldval);
                 $(updateRef).parent().find('.dateFivDiv').html(oldval);
                addItems();
            }
            //Date Calculate
            function createDate(dateval){
                var date_string;
                var myObj = $.parseJSON('{"date_created":'+dateval+'}'),
                myDate = new Date(1000*myObj.date_created);
                var f = new Date(1000*myObj.date_created);
                
              
                var dateday=''; 
                var monthday='';
                if(f.getMonth()<10){
                     monthday='0'+f.getMonth();
                }else{
                     monthday=f.getMonth();
                }
                if(f.getDate()<10){
                     dateday='0'+f.getDate();
                }else{
                    dateday=f.getDate();
                }
                
                 date_string = f.getFullYear() + "-" + monthday + "-" + dateday;
                return date_string;
            }
            function filterDimensionsRecords(){
                angular.element(document.getElementById('anguController')).scope().onfiltersearchRecords();   
            }
            function removeItems(obj){
                var keyFields=$(obj).parent().find(".typeofSelect").val()+$(obj).parent().find(".selectedfield").val()+$(obj).parent().find(".filterCon").val();  
                if(confirm('Are You Sure')){
                    $(obj).parent().remove();
                   delete addFilterTO[indexpanel+keyFields];
                   
                   addItems();
                }
             }
             function createDateFormate(ndate){
                 if(ndate!=''){
                    var today = new Date(ndate);
                    var dd = today.getDate();
                    var mm = today.getMonth()+1; //January is 0!
                    
                    var yyyy = today.getFullYear();
                    if(dd<10){
                        dd='0'+dd;
                    } 
                    if(mm<10){
                        mm='0'+mm;
                    } 
                    var today = dd+'/'+mm+'/'+yyyy;
                    return today;
                    }else{
                        return '';
                    }
             }
             function addItems(){    
                var itemsrec='';
                
                for(var i=0;i<$("#"+indexpanel+" .slds-scrollable li").length;i++){
                     itemsrec+=(i+1)+' AND ';
                }
                if(itemsrec!=''){
                    itemsrec=itemsrec.substring(0,itemsrec.length-5);
                }
                
                $("#"+indexpanel+"FilterLogic").val(itemsrec);
                $("#"+indexpanel+" .slds-scrollable li").each(function( index ) {
                   // alert('Hiiiii' + index);
                  $(this).find('.index').css('display','inline');   
                  $(this).find('.index').html(' ('+(index+1)+') ');
                });
           }
           
           
           	var activeRow = 0;
        	function setActiveRow(el) {
        		var rows = $('#movingTable li');
        		for (var i = 0; i < rows.length; i++) {
        			if (rows[i] == el) {
        				rows[i].style.backgroundColor = "lightgrey";
        				activeRow = i;
        			} else {
        				rows[i].style.backgroundColor = "white";
        			}
        		}
        	}

        	function moveActiveRow(move) {
        		 var rows = $('#movingTable li');
        		var oldRow = rows[activeRow].innerHTML;
        		var newRow = rows[activeRow + move].innerHTML;
        		rows[activeRow].innerHTML = newRow;
        		rows[activeRow + move].innerHTML = oldRow;
        		setActiveRow(rows[activeRow + move]);
        	}
        	
        	
	
	 /************************** New Measures Start********************************/
	                //toggleMeasures
            function toggleMeasures(panelid){
                alert('Hiiiiiiiiiiiiiiiiiheader'); 
                alert('panelid '+ panelid);
                delete checkPanelLoad[panelid];   
                isUpdate=false;
                selectedPanel=panelid;
                 alert('panelid '+ selectedPanel);
                $("#MeasuresPanel"+panelid).toggle();
                selectedItemsFills('count');
                 alert('Hiiiiiiiiiiiiiiiiiheader');
                //Show Process Spinner 
                $("#IsProcessSpinner"+panelid).css('display','');
                alert('panelid '+ selectedPanel);
                //Fill Records 
                if(panelid == 1){
                angular.element(document.getElementById('anguController')).scope().onGetMeasureRecords();
                }
                
                
                
            }
            function toggleMeasures2(panelid){
                 alert('Hiiiiiiiiiiiiiiiii555555555');
               // alert('panelid '+ panelid);
                delete checkPanelLoad[panelid];   
                isUpdate=false;
                selectedPanel=panelid;
               //  alert('panelid '+ selectedPanel);
                $("#MeasuresPanel"+panelid).toggle();
                selectedItemsFills('count');
                 
                //Show Process Spinner 
                $("#IsProcessSpinner"+panelid).css('display','');
               // alert('panelid '+ selectedPanel);
                //Fill Records 
                
                if(panelid == 2){
                  angular.element(document.getElementById('anguController')).scope().onGetMeasureRecordsEdit();  
                }
                
                
                
            }
            //Filter Main Items
             function onfilterRecords(panelId) {
            
                var input = document.getElementById('myInput'+panelId);
                var filter = input.value.toUpperCase();
              //  alert(filter);
                $( ".selectors"+panelId+" a " ).each(function( index ) {
                  var a=$(this).find('label').html();
                    if(a!=undefined){
                        if (a.toUpperCase().indexOf(filter) > -1) {
                            $(this).css("display","");
                        } else {
                            $(this).css("display","none");
                        }
                    }
                });
                
            }
            
            function removeItemsone(obj,panel,removselItems){
                
                    if(confirm('Are You Sure')){
                       var selectedParVar=$(obj).closest('li').find('.parentSelected').val();
                       $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                                 $(this).removeClass('selected');
                        });
                            
                        $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                            if($(this).html()==selectedParVar){
                                $(this).addClass('selected');
                            }
                        });
                            
                        var delKey=panel+$(obj).closest('li').find('.parentSelected').val()+$(obj).closest('li').find('.itemSelected').val();
                        delete selectedElements[delKey];
                         $(obj).closest('li').remove();
                         
                         
                        
                        
                        if(selectedParVar=='unique'){
                             $("#DimensionsPanelLayout"+panel).prev().show();
                             $("#DimensionsPanelLayout"+panel).show();
                        
                        }else{
                             $("#DimensionsPanelLayout"+panel).prev().hide();
                             $("#DimensionsPanelLayout"+panel).hide();
                        }
                    
                         selectedItemsFills(selectedParVar);
                         
                         
                           isUpdate=false;
                           
                    }
                }
                
                function filteritems(obj,panel){
                    // alert('Hiiiiii' );
                   if($(obj).hasClass('disabled')==false){ 
                     //   alert('Hiiiiii' );
                        var selectedParent= $("#MeasuresPanel"+panel).find('.vertical').find('.selected').html();
                        if(selectedParent=='Count'){
                            selectedParent='count';
                        }
                        if(selectedParent=='Sum'){
                            selectedParent='sum';
                        }
                        if(selectedParent=='Average'){
                            selectedParent='avg';
                        }
                        if(selectedParent=='Maximum'){
                            selectedParent='max';
                        }
                        if(selectedParent=='Minimum'){
                            selectedParent='min';
                        }
                        if(selectedParent=='Stddev'){
                            selectedParent='stddev';
                        }
                        if(selectedParent=='Stddevp'){
                            selectedParent='stddevp';
                        }
                        if(selectedParent=='Var'){
                            selectedParent='var';
                        }
                        if(selectedParent=='Varp'){
                            selectedParent='varp';
                        }
                        if(selectedParent=='Unique'){
                            selectedParent='unique';
                        }
                        if(selectedParent=='Median'){
                            selectedParent='median';
                        }
                        if(selectedParent=='First'){
                            selectedParent='first';
                        }
                        if(selectedParent=='Last'){
                            selectedParent='last';
                        }
                        
                        var itemsrec =0;
                            for(var i=1;i<= $("#MenuItems"+panel+" li").length;i++){  
                                 itemsrec = i;
                                 
                                 
                            }
                              var Strings = $(obj).find('label').html();
                              Strings = Strings.replace(' ','');
                    
                         
                        if(isUpdate){
                          //  alert('Hiiiiii' );
                             var oldkey=panel+$(ref).parent().find('.parentSelected').val()+$(ref).parent().find('.itemSelected').val(); 
                             delete selectedElements[oldkey];
                             var items = '';
                             var newitems = '';
                            if(panel <= '5'){
                                items = '1';
                                newitems = '';
                            }
                          //  alert('Hiiiiii "' +panel+selectedParent+Strings+'"');
                             $(ref).parent().html('<li onmouseover="ShowMeasures(\''+panel+selectedParent+Strings+'\')" onmouseout="hideMeasures(\''+panel+selectedParent+Strings+'\')"><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+$(obj).find('label').html()+'"/><input type="hidden" class="editSelected" value="'+selectedParent+'('+$(obj).find('label').html()+')" /><input type="hidden" class="editApi" value="'+panel+selectedParent+Strings+'" /><div style="cursor: pointer;overflow:hidden;text-overflow:ellipsis;" onclick="editItems(this,'+panel+')"> '+selectedParent+'('+$(obj).find('label').html()+')'+'</div><div style="cursor: pointer;display:none" id="'+panel+selectedParent+Strings+'"><img style="cursor:pointer;position:relative; z-index:2;" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup'+items+'(this,\'Measures'+newitems+'\')"/><img style="cursor:pointer;position:relative; z-index:2;"  src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+$(obj).find('label').html()+'\')" width="26px" height="12px" /></div>');
                             isUpdate=false;   
                        }else{
                            if(itemsrec <3) {
                                 var items = '';
                                 var newitems = '';
                                if(panel <= '5'){
                                    items = '1';
                                    newitems = '';
                                }
                                 $("#MenuItems"+panel).find('ul').append('<li onmouseover="ShowMeasures(\''+panel+selectedParent+Strings+'\')" onmouseout="hideMeasures(\''+panel+selectedParent+Strings+'\')"><input type="hidden" class="parentSelected" value="'+selectedParent+'" /><input type="hidden" class="itemSelected"  value="'+$(obj).find('label').html()+'"/><input type="hidden" class="editSelected" value="'+selectedParent+'('+$(obj).find('label').html()+')"/><input type="hidden" class="editApi" value="'+panel+selectedParent+Strings+'" /><div style="cursor: pointer;overflow:hidden;text-overflow:ellipsis;" onclick="editItems(this,'+panel+')"> '+selectedParent+'('+$(obj).find('label').html()+')'+'</div><div style="cursor: pointer;display:none" id="'+panel+selectedParent+Strings+'"><img style="cursor:pointer;position:relative; z-index:2;" src="{!$Resource.Edit}" width="17px" height="10px" onclick="openLabelPopup'+items+'(this,\'Measures'+newitems+'\')"/><img style="cursor:pointer;position:relative; z-index:2;"  src="{!$Resource.Delete}" onclick="removeItemsone(this,'+panel+',\''+$(obj).find('label').html()+'\')" width="26px" height="12px" /> </div></li>');
                                   }
                        
                         else{
                             alert('You cannot Enter more than 3 Measures');
                         }
                        }
                       // alert($("#MenuItems"+panel+" ul").html());
                        $('#MenuItems'+panel+' li').filter(
                        function(){
                                var keyFieldsAll = $(this).closest('li').find('.itemSelected').val();
                        		var keyFields = panel+$(this).closest('li').find('.itemSelected').val();
                        		var keyFieldss = keyFields.replace(' ','').replace(' ','').replace(' ','');
                        		keyFieldss = keyFieldss.replace(' ','').replace(' ','').replace(' ','');
                        		var div = document.getElementById('NewAll'+keyFieldss);
                        		
                        		var divs = document.getElementById('Anals'+keyFieldss);
                        		div.style.display = "none";
                        		divs.style.display = "block";
                        		
                        	
                        });	
                        
                        
                        
                         
                         
                        
                        var key=panel+selectedParent+$(obj).find('label').html();
                        //alert('keys2'+key)
                        selectedElements[key]=key;
                        
                         
                        
                        $("#MeasuresPanel"+panel).toggle(); 
                        if(panel <= '5'){
                            closepop();
                        }
                        
                     }   
                }
                
                function ShowMeasures(about)
                     {
                       
                    	var div = document.getElementById(about);
                       div.style.display = "block";
                     
                      } 
                      function hideMeasures(about)
                     {
                          
                    	var div = document.getElementById(about);
                    	div.style.display = "none";
                     
                      } 
                
               
               
               
               
               
             
                function ParentItemsSelected(obj,panel){
                    var selectedParent= $(obj).html();
                        if(selectedParent=='Count'){
                            selectedParent='count';
                        }
                        if(selectedParent=='Sum'){
                            selectedParent='sum';
                        }
                        if(selectedParent=='Average'){
                            selectedParent='avg';
                        }
                        if(selectedParent=='Maximum'){
                            selectedParent='max';
                        }
                        if(selectedParent=='Minimum'){
                            selectedParent='min';
                        }
                        if(selectedParent=='Stddev'){
                            selectedParent='stddev';
                        }
                        if(selectedParent=='Stddevp'){
                            selectedParent='stddevp';
                        }
                        if(selectedParent=='Var'){
                            selectedParent='var';
                        }
                        if(selectedParent=='Varp'){
                            selectedParent='varp';
                        }
                        if(selectedParent=='Unique'){
                            selectedParent='unique';
                        }
                         if(selectedParent=='Median'){
                            selectedParent='median';
                        }
                        if(selectedParent=='First'){
                            selectedParent='first';
                        }
                        if(selectedParent=='Last'){
                            selectedParent='last';
                        }
                    if(selectedParent !='unique'){
                        $("#MeasuresPanelLayout"+panel).prev().show();
                        $("#MeasuresPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).hide();
                        $("#DimensionsPanelLayout"+panel).prev().hide();
                    }else{
                        $("#MeasuresPanelLayout"+panel).prev().show();
                        $("#MeasuresPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).show();
                        $("#DimensionsPanelLayout"+panel).prev().show();
                    }
                    
                    $("#MeasuresPanel"+panel).find('.vertical a').each(function( index ) {
                      $(this).removeClass('selected');
                    });
                     $(obj).addClass('selected');
                     
                      selectedItemsFills(selectedParent);
                }
                
                 
                
                
                 function PopupEdit(panel){
                    selectedPanel=panel;
                    $('#MenuItemsEdit'+selectedPanel+' li').appendTo($('#MenuItems'+selectedPanel+' ul')); 
                    angular.element(document.getElementById('anguController')).scope().onGetMeasureRecordsedit();
                    filterPopUpModel();
                     
                }
	 	 /************************** New Measures End********************************/


        </script>
</apex:component>